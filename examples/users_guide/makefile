
#MY_PATH=../orbiter
MY_PATH=~/DEV.23/orbiter
#MY_PATH=/scratch/betten/COMPILE/orbiter


# uncomment exactly one of the following two lines.
# uncomment the first if you want to run orbiter through docker.
# uncomment the second if you have an installed copy of orbiter and you want to run it directly 
#ORBITER_PATH=docker run -it --volume ${PWD}:/mnt -w /mnt abetten/orbiter 
ORBITER_PATH=$(MY_PATH)/src/apps/orbiter/
ORBITER=$(ORBITER_PATH)orbiter.out
SANDBOX=$(MY_PATH)/src/apps/sandbox/sandbox.out

###############################################################################
# additional configurations for when you want to 
# compile automatically generated code
###############################################################################

SRC=$(MY_PATH)/src
MY_CPP = g++
MY_CC = gcc
CPPFLAGS = -Wall -I../../DEV.23/orbiter/src/lib -std=c++14
LIB = $(SRC)/lib/liborbiter.a -lpthread
LFLAGS = -lm -Wl,-rpath -Wl,/usr/local/gcc-8.2.0/lib64


###############################################################################
# End of configuration part
###############################################################################

GINAC_PATH=$(MY_PATH)/src/apps/ginac
SANDBOX_PATH=$(MY_PATH)/src/apps/sandbox

update:
	cd $(ORBITER_PATH); make clean;
	cd $(MY_PATH); make cleana; git pull; make 


update_all:
	cd $(MY_PATH); make clean; git pull; make 


sandbox:
	$(SANDBOX_PATH)/sandbox.out


###############################################################################
# overall test:
###############################################################################

test:
	make test_2
	make test_3
	make test_4
	make test_5
	make test_6
	make test_7
	make test_8
	make test_9
	make test_10
	make test_11
	make test_12
	make test_13
	make test_14
	make test_15
	make test_16
	make test_17
	make test_18

test_2:
	make test_2_4
	make test_2_5
	make test_2_6
	make test_2_7

test_3:
	make test_3_1
	make test_3_2
	make test_3_3
	make test_3_4
	make test_3_5
	make test_3_6


test_4:
	make test_4_1
	make test_4_2
	make test_4_3
	make test_4_4
	make test_4_5
	make test_4_6
	make test_4_7
	make test_4_8
	make test_4_9
	make test_4_10



test_5:
	make test_5_1
	make test_5_2
	make test_5_3
	make test_5_4
	make test_5_5
	make test_5_6
	#make test_5_7 # magma stuff
	make test_5_8


test_6:
	make test_6_1
	make test_6_2
	make test_6_3
	make test_6_4
	make test_6_5
	make test_6_6
	make test_6_7

test_7:
	make test_7_1
	make test_7_2
	make test_7_3



test_8:
	make test_8_1
	make test_8_2



test_9:
	make test_9_1
	make test_9_2
	make test_9_3



test_10:
	make test_10_1
	make test_10_2
	make test_10_3
	make test_10_4
	make test_10_5
	make test_10_6
	make test_10_7
	make test_10_8
	make test_10_9
	make test_10_10


test_11:
	make test_11_1
	make test_11_2
	make test_11_3
	make test_11_4
	make test_11_5
	make test_11_6


test_12:
	make test_12_1
	make test_12_2
	make test_12_3
	make test_12_4




test_13:
	make test_13_1
	make test_13_2
	make test_13_3
	make test_13_4



test_14:
	make test_14_1
	make test_14_2




test_15:
	make test_15_2
	make test_15_3
	make test_15_4
	make test_15_6
	make test_15_7
	make test_15_8




test_16:
	make test_16_1
	make test_16_2
	make test_16_3
	make test_16_4


test_17:
	make test_17_1


test_18:
	make test_18_1
	make test_18_2



test_problem:



###############################################################################
# Makefile Variables


#MAGMA_PATH=/usr/local/magma
MAGMA_PATH=""


# Section 2.8

TEST_FORMULA="(-a+b*b)*x*x+a*b*x"



V7_VANDERMONDE_EXTENDED="\
1,0,0,0,0,0,0,1,0,0,0,0,0,0, \
1,1,1,1,1,1,1,0,1,0,0,0,0,0, \
1,2,4,1,2,4,1,0,0,1,0,0,0,0, \
1,3,2,6,4,5,1,0,0,0,1,0,0,0, \
1,4,2,1,4,2,1,0,0,0,0,1,0,0, \
1,5,4,6,2,3,1,0,0,0,0,0,1,0, \
1,6,1,6,1,6,1,0,0,0,0,0,0,1"



DOILY="Row,C0,C1,C2\
\n0,0,12,13\
\n1,1,12,14\
\n2,8,9,12\
\n3,4,6,8\
\n4,6,10,14\
\n5,3,7,8\
\n6,7,10,13\
\n7,4,11,13\
\n8,3,11,14\
\n9,0,5,6\
\n10,1,5,7\
\n11,5,9,11\
\n12,0,2,3\
\n13,1,2,4\
\n14,2,9,10\
\nEND"




#Co3 from Conway et al., 1985 (ATLAS)
#order = 495766656000
#Co3 from the paper by Suleiman and Wilson 1997


CONWAY_GEN1="\
1101110001000001010000\
1111010111110100001011\
0000001000000100010101\
1111100110110001001110\
0101010000000010011101\
0000010000000100010101\
0010000000000100010101\
0001000011000000111111\
1110100100110100010011\
0000000000000110010101\
0000000000100100010101\
0110111111010011101111\
0000000000001100010101\
0000000000000100000101\
0000000001000100010101\
0000000000000100011101\
0001000110000010011010\
0000000000000000010101\
0000000000000101010101\
0000000000000100010100\
0000000000000100010111\
0000000000000100010001"

CONWAY_GEN2="\
0101000010111010111111\
0110010100011110110000\
0011010000111111010111\
0001101110001011010011\
1010010000100001011110\
1101000000001010100011\
1100101010001111010101\
1000110100110101010101\
0100110001010000000111\
1100000010100101010010\
0101110110011100000101\
0101111101010011111001\
1000010101010101010001\
0001010000111100100111\
0011010010111011001111\
0100110010110011111010\
1101011001111101100011\
0100101001001000100001\
1100101100001001110011\
0101110110010100000001\
0000001101111000101110\
1101101010101110000101"


# large sets of PG(2,3):

GENERATORS_H5="1,2,3,4,0,6,7,8,9,5,10,11,12"
# (0, 1, 2, 3, 4)(5, 6, 7, 8, 9)

GENERATORS_N5="\
0,1,2,3,4,9,5,6,7,8,10,11,12, \
0,1,2,3,4,5,6,7,8,9,10,12,11, \
0,4,3,2,1,5,9,8,7,6,10,11,12, \
0,2,4,1,3,5,7,9,6,8,10,11,12, \
0,1,2,3,4,5,6,7,8,9,11,10,12, \
1,2,3,4,0,6,7,8,9,5,10,11,12, \
5,9,8,7,6,0,4,3,2,1,10,11,12"


GENERATORS_C13="11, 0, 10, 12, 5, 3, 7, 4, 2, 8, 6, 9, 1"
# (0,11,9,8,2,10,6,7,4,5,3,12,1)




HIRSCHFELD_SURFACE_EQUATION="0,0,0,0,0,0,1,0,1,0, 0,1,0,1,0,0,0,0,0,0"



ENDRASS_SPARSE="\
6,0,4,4,2,7,5,9,6,20,6,23,1,25,3,30,1,32,3,34,4,56,6,59,1,61,6,66, \
2,68,6,70,3,77,2,79,6,83,6,120,2,123,5,125,3,130,1,132,3,134,3,141, \
2,143,6,147,3,156"


EC_11_EQUATION="1,0,3,0,0,0,10,1,0,0"





GEN_C13="1,2,3,4,5,6,7,8,9,10,11,12,0"
# (0,1,2,3,4,5,6,7,8,9,10,11,12)

GENERATORS_M12="3,1,9,0,10,11,6,7,8,2,4,5, 7,2,3,1,11,9,5,8,0,6,4,10"


GENERATORS_HESSE_GROUP="\
3000300030 \
2000201230 \
1000100111 \
1000220200 \
1002312010 \
0331003211 \
2200011331"


GENERATORS_WEYL_GROUP_E8="\
-1,-1,-1,-1,0,0,0,0, \
0,0,0,1,0,0,0,0, \
1,0,0,0,0,0,0,0, \
0,0,1,0,0,0,0,0, \
0,1,0,1,1,0,0,0, \
0,0,0,0,0,1,0,0, \
0,0,0,0,0,0,1,0, \
0,0,0,0,0,0,0,1, \
-1,0,-1,-1,-1,-1,-1,-1, \
0,1,0,1,1,1,1,1, \
1,0,0,0,0,0,0,0, \
0,0,1,0,0,0,0,0, \
0,0,0,1,0,0,0,0, \
0,0,0,0,1,0,0,0, \
0,0,0,0,0,1,0,0, \
0,0,0,0,0,0,1,0"

Ree_gen1="21,5,1,6,17,1,1, 3,13,5,21,6,6,18, 21,3,21,21,22,6,14, \
14,18,1,5,13,6,7, 3,3,2,1,24,16,3, 17,3,22,10,16,24,26, \
21,21,6,18,20,2,5"

Ree_gen2="16,3,11,5,16,22,20, 24,6,18,24,7,1,26, 9,23,17,18,23,20,13, \
9,7,2,15,17,5,11, 3,3,6,21,4,24,16, 25,8,6,24,21,12,7, \
24,15,2,13,11,14,24"


HIRSCHFELD_SURFACE_Q4_SET_OF_POINTS="0,1,2,3,4,5,6,7,8,9,\
10,11,12,13,14,23,26,27,30,31,34,35,38,39,42,47,48,51,52,\
53,54,59,60,61,62,67,68,69,70,75,76,79,80,81,82"


HYPEROVAL_16_144="0, 1, 2, 3, 52, 67, 89, 106, 126, \
141, 159, 176, 184, 199, 220, 235, 245, 262"

HYPEROVAL_16_16320="0, 1, 2, 3, 52, 70, 83, 109, 127, \
139, 156, 174, 186, 199, 217, 229, 256, 264"

FILE_24_3_TFC_INC="24 24 72\
\n0 1 2 24 27 28 48 53 54 73 79 80 97 105 106 122 131 \
132 146 157 158 171 175 183 195 203 208 220 225 233 244 \
258 259 269 272 282 293 300 308 318 325 333 342 352 358 \
367 379 381 392 398 400 417 428 429 442 443 450 466 471 \
479 492 497 502 517 519 521 542 548 551 571 574 575 \
             48\
\n0 1 2 24 27 28 48 53 54 73 79 80 97 105 106 122 131 \
132 146 157 158 171 175 183 195 203 208 220 225 233 244 \
258 259 269 272 281 293 301 308 318 324 327 342 354 357 \
367 373 378 392 400 403 417 419 430 442 446 447 466 472 \
479 492 500 503 518 525 526 545 549 551 571 572 574 \
             48\
\n0 1 2 24 27 28 48 53 54 73 79 80 97 105 106 122 131 \
132 146 157 158 171 175 179 195 201 207 220 226 232 244 \
257 258 269 274 277 293 300 307 318 323 329 342 352 356 \
367 374 381 392 397 406 416 423 431 441 450 454 468 476 \
477 494 499 503 519 521 525 544 547 550 570 572 575 \
            144\
\n-1 3"




ELEMENTARY_SYMMETRIC_3_1="x0 + x1 + x2"

ELEMENTARY_SYMMETRIC_3_2="x0*x1 + x0*x2 + x1*x2"

ELEMENTARY_SYMMETRIC_3_3="x0*x1*x2"


ELEMENTARY_SYMMETRIC_4_1="x0 + x1 + x2 + x3"

ELEMENTARY_SYMMETRIC_4_2="x0*x1 + x0*x2 + x0*x3 + x1*x2 + x1*x3 + x2*x3"

ELEMENTARY_SYMMETRIC_4_3="x0*x1*x2 + x0*x1*x3 + x0*x2*x3 + x1*x2*x3"

ELEMENTARY_SYMMETRIC_4_4="x0*x1*x2*x3"


CODE_5_2_3_CODEWORDS="0,7,25,30"


SURFACE_F7_15LINES_POINTS="0,1,2,3,5,6,7,8,9,10,12,18,20,26,28,34,36,42,44,45,50,53,58,59,60,61,62,63,64,67,77,80,90,93,103,107,115,118,122,125,127,142,147,155,157,162,165,170,172,204,208,219,229,240,244,246,251,253,259,277,278,281,286,298,300,302,303,310,312,316,340,343,351,354,358,365,369,372,373,379,384,386,388,393,399"


SURFACE_F7_15LINES_MCKEAN_POINTS="0,1,2,3,4,5,6,7,8,9,10,16,17,28,35,36,59,60,61,62,63,64,65,76,80,91,95,106,107,111,119,121,122,130,138,139,141,146,150,154,155,158,170,175,184,186,199,203,204,206,226,231,234,239,240,252,253,254,278,279,282,287,299,301,302,319,320,330,338,343,345,350,351,357,364,370,371,376,378,382,385,388,392,394,399"

SURFACE_MCKEAN_15_LINES="1,5,-1,16,-2,17,1,10,2,18,1,8,1,9,-1,11,-1,19,-1,14"


CODE_RS_6_4_7="\
621000 \
062100 \
006210 \
000621"



CODE_RS_10_8_11="\
7,2,1,0,0,0,0,0,0,0, \
0,7,2,1,0,0,0,0,0,0, \
0,0,7,2,1,0,0,0,0,0, \
0,0,0,7,2,1,0,0,0,0, \
0,0,0,0,7,2,1,0,0,0, \
0,0,0,0,0,7,2,1,0,0, \
0,0,0,0,0,0,7,2,1,0, \
0,0,0,0,0,0,0,7,2,1 "



# Normal form for cubic surfaces with 15 rational lines:

F_ALPHA_BETA_GAMMA_DELTA="beta*(gamma + 1)*x0*x0*x2 \
+ (alpha*delta - beta*gamma + alpha - beta - delta - 1)*x0*x1*x2 \
-1*(alpha*beta -alpha*delta + delta)*(gamma + 1)*x0*x1*x3 \
+ (0-alpha*delta + alpha*gamma -beta*gamma -beta + delta -gamma)*x0*x2*x2 \
-(alpha*delta +beta -delta)*(gamma +1)*x0*x2*x3 \
-(delta + 1)*(alpha - 1)*x1*x1*x2 \
- (delta + 1)*(alpha - 1)*x1*x1*x3 \
+ (alpha*delta - alpha*gamma + beta*gamma + beta - delta + gamma)*x1*x2*x2 \
+ (alpha*beta*gamma + alpha*beta + alpha*delta \
- alpha*gamma + beta*gamma + beta - delta + gamma)*x1*x2*x3 \
+ alpha*beta*(gamma + 1)*x1*x3*x3"


# general normal form for cubic surfaces with 27 rational lines:

F_abcd_eqn_no_exponents="-(a*b*c - a*b*d - a*c*d + b*c*d + a*d - b*c)*(b - d)*X0*X0*X2 \
+ (a*b*c - a*b*d - a*c*d + b*c*d + a*d - b*c)*(a + b - c - d)*X0*X1*X2 \
+ (a*a*c - a*a*d - a*c*c + b*c*c + a*d - b*c)*(b - d)*X0*X1*X3 \
- (a*d - b*c)*(a*b*c - a*b*d - a*c*d + b*c*d + a*d - b*c)*X0*X2*X2 \
- (a*a*c*d - a*b*c*c - a*a*d + a*b*d + b*c*c - b*c*d)*(b - d)*X0*X2*X3 \
- (a - c)*(a*b*c - a*b*d - a*c*d + b*c*d + a*d - b*c)*X1*X1*X2 \
- (a - c)*(a*b*c - a*b*d - a*c*d + b*c*d + a*d - b*c)*X1*X1*X3 \
+ (a*d - b*c)*(a*b*c - a*b*d - a*c*d + b*c*d + a*d - b*c)*X1*X2*X2 \
+ ((1+1)*a*a*b*c*d - a*a*b*d*d - (1+1)*a*a*c*d*d \
- (1+1)*a*b*b*c*c + a*b*b*c*d + (1+1)*a*b*c*c*d + a*b*c*d*d \
- b*b*c*c*d - a*a*b*c + a*a*c*d + a*a*d*d + a*b*b*c + a*b*c*c \
- (1+1+1+1)*a*b*c*d - a*c*c*d + a*c*d*d + b*b*c*c)*X1*X2*X3 \
+ c*a*(a*d - b*c - a + b + c - d)*(b - d)*X1*X3*X3"




# general normal form for cubic surfaces with 27 rational lines:

F_abcd_eqn="-(a*b*c - a*b*d - a*c*d + b*c*d + a*d - b*c)*(b - d)*X0^2*X2 \
+ (a*b*c - a*b*d - a*c*d + b*c*d + a*d - b*c)*(a + b - c - d)*X0*X1*X2 \
+ (a^2*c - a^2*d - a*c^2 + b*c^2 + a*d - b*c)*(b - d)*X0*X1*X3 \
- (a*d - b*c)*(a*b*c - a*b*d - a*c*d + b*c*d + a*d - b*c)*X0*X2^2 \
- (a^2*c*d - a*b*c^2 - a^2*d + a*b*d + b*c^2 - b*c*d)*(b - d)*X0*X2*X3 \
- (a - c)*(a*b*c - a*b*d - a*c*d + b*c*d + a*d - b*c)*X1^2*X2 \
- (a - c)*(a*b*c - a*b*d - a*c*d + b*c*d + a*d - b*c)*X1^2*X3 \
+ (a*d - b*c)*(a*b*c - a*b*d - a*c*d + b*c*d + a*d - b*c)*X1*X2^2 \
+ ((1+1)*a^2*b*c*d - a^2*b*d^2 - (1+1)*a^2*c*d^2 \
- (1+1)*a*b^2*c^2 + a*b^2*c*d + (1+1)*a*b*c^2*d + a*b*c*d^2 \
- b^2*c^2*d - a^2*b*c + a^2*c*d + a^2*d^2 + a*b^2*c + a*b*c^2 \
- (1+1+1+1)*a*b*c*d - a*c^2*d + a*c*d^2 + b^2*c^2)*X1*X2*X3 \
+ c*a*(a*d - b*c - a + b + c - d)*(b - d)*X1*X3^2"



KNECHT_13_1_AS_PAIRS="1,0,1,1,1,2,12,9"

KNECHT_13_1_AS_VECTOR="1,1,1,0,0, 0,0,0,0,12, 0,0,0,0,0"

KNECHT_13_2_AS_PAIRS="1,0,1,1,1,2,8,9,8,10,8,11"

KNECHT_13_2_AS_VECTOR="1,1,1,0,0, 0,0,0,0,8, 0,8,0,0,0"


# coding theory


CRC4="1,4,1,2,1,1,1,0"

CRC7="1,7,1,3,1,0"

CRC8_ATM="1,8,1,2,1,1,1,0"

CRC16_CCITT="1,16,1,12,1,5,1,0"

CRC32_ETHERNET="1,32,1,26,1,23,1,22,1,16,1,12,1,11,1,10,1,8,1,7,\
1,5,1,4,1,2,1,1,1,0"

CRC32_CASTAGNOLI="1,32,1,28,1,27,1,26,1,25,1,23,1,22,1,20,1,19,1,\
18,1,14,1,13,1,11,1,10,1,9,1,8,1,6,1,0"

CRC64_ECMA182="1,64,1,62,1,57,1,55,1,54,1,53,1,52,1,47,1,46,1,45,\
1,40,1,39,1,38,1,37,1,35,1,33,1,32,1,31,1,29,1,27,1,24,1,23,1,22,\
1,21,1,19,1,17,1,13,1,12,1,10,1,9,1,7,1,4,1,1,1,0"

CRC64_ROCKSOFT="1,64,1,63,1,61,1,59,1,58,1,56,1,55,1,52,1,49,1,48,\
1,47,1,46,1,44,1,41,1,37,1,36,1,34,1,32,1,31,1,28,1,26,1,23,1,22,1,\
19,1,16,1,13,1,12,1,10,1,9,1,6,1,4,1,3,1,0"






GOLAY_23_COLUMN_RANKS_PROJECTIVELY="0, 1, 2, 3, 4, 5, 6, 7, \
8, 9, 10, 11, 132, 913, 1460, 1750, 1898, 2518, 2787, 2874, \
3320, 3357, 3662" 

#[23,12,8]
#0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 132, 913, 1460, 1750, 1898, 2518, 2787, 2874, 3320, 3357, 3662

#[24,12,8]
#0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 132, 913, 1460, 1750, 1898, 2518, 2787, 2874, 3320, 3357, 3662, 4004

GOLAY_24_CODE_PROJECTIVE="0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 132, 913, 1460, 1750, 1898, 2518, 2787, 2874, 3320, 3357, 3662, 4004"

GOLAY_24_CODE_AUT_GENS="\
1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,1,0,0,0,1,0,1,1,\
1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,1,1,0,1,1,0,1,0,1,0,1,0,1,0,1,1,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,\
1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,1,1,0,0,1,1,0,1,1,1,0,0,0,1,1,1,0,1,0,1,0,1,1,0,1,0,1,1,1,0,0,1,0,0,1,0,0,1,0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,0,0,\
1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,1,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,0,0,1,1,0,1,1,0,1,1,1,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,\
1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,1,1,0,0,1,1,0,1,0,1,1,0,1,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1,1,0,1,1,0,1,0,\
1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,1,1,0,1,1,1,0,1,1,0,0,1,1,0,1,1,0,1,0,0,1,0,1,1,1,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,\
1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,1,0,1,1,0,1,1,0,0,0,1,1,1,0,1,0,1,0,1,1,0,1,0,1,1,1,0,0,1,0,1,0,1,1,1,0,0,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,1,0,0,\
1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,1,1,0,0,1,1,0,1,1,1,0,0,0,1,0,1,1,1,1,0,0,1,1,0,1,1,0,1,0,0,0,0,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,\
1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1,0,1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,1,1,1,0,1,0,1,1,1,0,0,1,1,0,1,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,\
1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,1,1,0,0,1,1,1,0,0,0,1,1,1,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,1,1,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,1,1,1,0,1,0,1,0,1,0,1,1,0,1,1,0,\
1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,1,1,0,1,0,1,1,0,1,0,1,1,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,1,1,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,1,1,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,\
0,1,1,1,0,0,1,0,0,1,1,1,1,1,0,0,0,1,1,1,0,1,0,1,1,1,0,0,1,1,0,1,1,0,1,0,0,0,0,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,0,1,1,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0"


M24_ELEMENT_2A="0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,"

M24_ELEMENT_2B="0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,1,1,1,0,1,1,0,0,1,1,0,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,1,1,0,1,1,0,1,1,1,0,0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,"


# 2A:
# Class 1 / 26
# order of element = 2
# class size = 11385
# centralizer order = 21504
# element has 255 fixed points in PG(11,2)

# 2B:
# Class 2 / 26
# order of element = 2
# class size = 31878
# centralizer order = 7680
# element has 63 fixed points in PG(11,2)

M24_2A_PERM="10, 1, 21, 4, 3, 5, 22, 13, 11, 9, 0, 8, 16, 7, 23, 15, 12, 17, 18, 19, 20, 2, 6, 14"


M24_2B_PERM="2, 5, 0, 8, 11, 1, 16, 14, 3, 19, 21, 4, 22, 23, 7, 20, 6, 18, 17, 9, 15, 10, 12, 13"

GOLAY24_2A_FIX_SUBCODE="1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1"

GOLAY24_2B_FIX_SUBCODE="1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1"


CODE_RM_3_1_GENMA="\
11111111\
01010101\
00110011\
00001111"

CODE_RM_4_1_GENMA="\
1111111111111111\
0101010101010101\
0011001100110011\
0000111100001111\
0000000011111111"



RM_6_GENERATOR_1="0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,\
22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,\
46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63"

RM_6_GENERATOR_2="1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,\
41,43,45,47,49,51,53,55,57,59,61,63"

RM_6_GENERATOR_3="2,3,6,7,18,19,22,23,10,11,14,15,26,27,30,31,34,35,38,\
39,42,43,46,47,50,51,54,55,58,59,62,63"

RM_6_GENERATOR_4="4,6,12,14,36,38,52,54,5,7,13,15,37,39,53,55,20,22,28,\
30,44,46,60,62,21,23,29,31,45,47,61,63"

RM_6_GENERATOR_5="8,9,12,13,24,25,28,29,10,11,14,15,26,27,30,31,40,41,\
44,45,56,57,60,61,42,43,46,47,58,59,62,63"

RM_6_GENERATOR_6="16,18,24,26,48,50,56,58,17,19,25,27,49,51,57,59,20,22,\
28,30,52,54,60,62,21,23,29,31,53,55,61,63"

RM_6_GENERATOR_7="32,34,48,50,33,35,49,51,36,38,52,54,37,39,53,55,40,42,\
56,58,41,43,57,59,44,46,60,62,45,47,61,63"




CODE_RS_F8_N7_K5_D3_GENMA="\
5,6,1,0,0,0,0,\
0,5,6,1,0,0,0,\
0,0,5,6,1,0,0,\
0,0,0,5,6,1,0,\
0,0,0,0,5,6,1"


RS_8_reduced="\
010001100000000000000\
001110010000000000000\
110011001000000000000\
000010001100000000000\
000001110010000000000\
000110011001000000000\
000000010001100000000\
000000001110010000000\
000000110011001000000\
000000000010001100000\
000000000001110010000\
000000000110011001000\
000000000000010001100\
000000000000001110010\
000000000000110011001"


CODE_21_15_4="\
111000100000000000000 \
110100010000000000000 \
101100001000000000000 \
011100000100000000000 \
110010000010000000000 \
101010000001000000000 \
011010000000100000000 \
100110000000010000000 \
010110000000001000000 \
001110000000000100000 \
111110000000000010000 \
110001000000000001000 \
101001000000000000100 \
011001000000000000010 \
100101000000000000001"


# there are 5 [15,6,6]

# ago=12
CODE_15_6_6_A="\
111111111100000 \
111110000010000 \
111001100001000 \
110101010000100 \
101010110000010 \
101101001000001"

# ago=12
CODE_15_6_6_B="\
111111111100000 \
111110000010000 \
111001100001000 \
110101010000100 \
101010110000010 \
011011001000001"

#ago=720:
CODE_15_6_6_C="\
111111111100000 \
111110000010000 \
111001100001000 \
110101010000100 \
101101001000010 \
100010111000001"

#ago=96:
CODE_15_6_6_D="\
111111111100000 \
111110000010000 \
111001100001000 \
110101010000100 \
101011001000010 \
011001011000001"

#ago=360
CODE_15_6_6_E="\
111111111100000 \
111110000010000 \
111001100001000 \
100111010000100 \
010101110000010 \
010110101000001"



BCH_21_15_PROJ=" 0, 1, 19, 37, 113, 420, 1651, 6577, \
26284, 105115, 420442, 1681753, 6727000, 26907991, \
107631958, 27874647, 111498582, 43341143, 173364566, \
156587350, 14 "


BCH_21_15_GENERATOR_MATRIX="1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1"

BCH_21_6_GENERATOR_MATRIX=" 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1 "

POLY_Q256_DEG30_SPARSE="1,0,26,1,210,2,24,3,\
138,4,148,5,160,6,58,7,108,8,199,9,95,10,56,\
11,9,12,205,13,194,14,193,15,3,16,248,17,110,\
18,150,19,24,20,169,21,192,22,212,23,112,24,\
144,25,97,26,109,27,174,28,253,29,1,30"

POLY_Q256_DEG30_DENSE="1,26,210,24,138,148,\
160,58,108,199,95,56,9,205,194,193,3,248,110,\
150,24,169,192,212,112,144,97,109,174,253,1"




# created in the combinatorics section:
ELEMENTARY_SYMMETRIC_8_1="x0 + x1 + x2 + x3 + x4 + x5 + x6 + x7"

ELEMENTARY_SYMMETRIC_8_2="x0*x1 + x0*x2 + x0*x3 + x0*x4 + x0*x5 + x0*x6 + x0*x7 + x1*x2 + x1*x3 + x1*x4 + x1*x5 + x1*x6 + x1*x7 + x2*x3 + x2*x4 + x2*x5 + x2*x6 + x2*x7 + x3*x4 + x3*x5 + x3*x6 + x3*x7 + x4*x5 + x4*x6 + x4*x7 + x5*x6 + x5*x7 + x6*x7"

ELEMENTARY_SYMMETRIC_8_3="x0*x1*x2 + x0*x1*x3 + x0*x1*x4 + x0*x1*x5 + x0*x1*x6 + x0*x1*x7 + x0*x2*x3 + x0*x2*x4 + x0*x2*x5 + x0*x2*x6 + x0*x2*x7 + x0*x3*x4 + x0*x3*x5 + x0*x3*x6 + x0*x3*x7 + x0*x4*x5 + x0*x4*x6 + x0*x4*x7 + x0*x5*x6 + x0*x5*x7 + x0*x6*x7 + x1*x2*x3 + x1*x2*x4 + x1*x2*x5 + x1*x2*x6 + x1*x2*x7 + x1*x3*x4 + x1*x3*x5 + x1*x3*x6 + x1*x3*x7 + x1*x4*x5 + x1*x4*x6 + x1*x4*x7 + x1*x5*x6 + x1*x5*x7 + x1*x6*x7 + x2*x3*x4 + x2*x3*x5 + x2*x3*x6 + x2*x3*x7 + x2*x4*x5 + x2*x4*x6 + x2*x4*x7 + x2*x5*x6 + x2*x5*x7 + x2*x6*x7 + x3*x4*x5 + x3*x4*x6 + x3*x4*x7 + x3*x5*x6 + x3*x5*x7 + x3*x6*x7 + x4*x5*x6 + x4*x5*x7 + x4*x6*x7 + x5*x6*x7"

ELEMENTARY_SYMMETRIC_8_4="x0*x1*x2*x3 + x0*x1*x2*x4 + x0*x1*x2*x5 + x0*x1*x2*x6 + x0*x1*x2*x7 + x0*x1*x3*x4 + x0*x1*x3*x5 + x0*x1*x3*x6 + x0*x1*x3*x7 + x0*x1*x4*x5 + x0*x1*x4*x6 + x0*x1*x4*x7 + x0*x1*x5*x6 + x0*x1*x5*x7 + x0*x1*x6*x7 + x0*x2*x3*x4 + x0*x2*x3*x5 + x0*x2*x3*x6 + x0*x2*x3*x7 + x0*x2*x4*x5 + x0*x2*x4*x6 + x0*x2*x4*x7 + x0*x2*x5*x6 + x0*x2*x5*x7 + x0*x2*x6*x7 + x0*x3*x4*x5 + x0*x3*x4*x6 + x0*x3*x4*x7 + x0*x3*x5*x6 + x0*x3*x5*x7 + x0*x3*x6*x7 + x0*x4*x5*x6 + x0*x4*x5*x7 + x0*x4*x6*x7 + x0*x5*x6*x7 + x1*x2*x3*x4 + x1*x2*x3*x5 + x1*x2*x3*x6 + x1*x2*x3*x7 + x1*x2*x4*x5 + x1*x2*x4*x6 + x1*x2*x4*x7 + x1*x2*x5*x6 + x1*x2*x5*x7 + x1*x2*x6*x7 + x1*x3*x4*x5 + x1*x3*x4*x6 + x1*x3*x4*x7 + x1*x3*x5*x6 + x1*x3*x5*x7 + x1*x3*x6*x7 + x1*x4*x5*x6 + x1*x4*x5*x7 + x1*x4*x6*x7 + x1*x5*x6*x7 + x2*x3*x4*x5 + x2*x3*x4*x6 + x2*x3*x4*x7 + x2*x3*x5*x6 + x2*x3*x5*x7 + x2*x3*x6*x7 + x2*x4*x5*x6 + x2*x4*x5*x7 + x2*x4*x6*x7 + x2*x5*x6*x7 + x3*x4*x5*x6 + x3*x4*x5*x7 + x3*x4*x6*x7 + x3*x5*x6*x7 + x4*x5*x6*x7"

ELEMENTARY_SYMMETRIC_8_5="x0*x1*x2*x3*x4 + x0*x1*x2*x3*x5 + x0*x1*x2*x3*x6 + x0*x1*x2*x3*x7 + x0*x1*x2*x4*x5 + x0*x1*x2*x4*x6 + x0*x1*x2*x4*x7 + x0*x1*x2*x5*x6 + x0*x1*x2*x5*x7 + x0*x1*x2*x6*x7 + x0*x1*x3*x4*x5 + x0*x1*x3*x4*x6 + x0*x1*x3*x4*x7 + x0*x1*x3*x5*x6 + x0*x1*x3*x5*x7 + x0*x1*x3*x6*x7 + x0*x1*x4*x5*x6 + x0*x1*x4*x5*x7 + x0*x1*x4*x6*x7 + x0*x1*x5*x6*x7 + x0*x2*x3*x4*x5 + x0*x2*x3*x4*x6 + x0*x2*x3*x4*x7 + x0*x2*x3*x5*x6 + x0*x2*x3*x5*x7 + x0*x2*x3*x6*x7 + x0*x2*x4*x5*x6 + x0*x2*x4*x5*x7 + x0*x2*x4*x6*x7 + x0*x2*x5*x6*x7 + x0*x3*x4*x5*x6 + x0*x3*x4*x5*x7 + x0*x3*x4*x6*x7 + x0*x3*x5*x6*x7 + x0*x4*x5*x6*x7 + x1*x2*x3*x4*x5 + x1*x2*x3*x4*x6 + x1*x2*x3*x4*x7 + x1*x2*x3*x5*x6 + x1*x2*x3*x5*x7 + x1*x2*x3*x6*x7 + x1*x2*x4*x5*x6 + x1*x2*x4*x5*x7 + x1*x2*x4*x6*x7 + x1*x2*x5*x6*x7 + x1*x3*x4*x5*x6 + x1*x3*x4*x5*x7 + x1*x3*x4*x6*x7 + x1*x3*x5*x6*x7 + x1*x4*x5*x6*x7 + x2*x3*x4*x5*x6 + x2*x3*x4*x5*x7 + x2*x3*x4*x6*x7 + x2*x3*x5*x6*x7 + x2*x4*x5*x6*x7 + x3*x4*x5*x6*x7"

ELEMENTARY_SYMMETRIC_8_6="x0*x1*x2*x3*x4*x5 + x0*x1*x2*x3*x4*x6 + x0*x1*x2*x3*x4*x7 + x0*x1*x2*x3*x5*x6 + x0*x1*x2*x3*x5*x7 + x0*x1*x2*x3*x6*x7 + x0*x1*x2*x4*x5*x6 + x0*x1*x2*x4*x5*x7 + x0*x1*x2*x4*x6*x7 + x0*x1*x2*x5*x6*x7 + x0*x1*x3*x4*x5*x6 + x0*x1*x3*x4*x5*x7 + x0*x1*x3*x4*x6*x7 + x0*x1*x3*x5*x6*x7 + x0*x1*x4*x5*x6*x7 + x0*x2*x3*x4*x5*x6 + x0*x2*x3*x4*x5*x7 + x0*x2*x3*x4*x6*x7 + x0*x2*x3*x5*x6*x7 + x0*x2*x4*x5*x6*x7 + x0*x3*x4*x5*x6*x7 + x1*x2*x3*x4*x5*x6 + x1*x2*x3*x4*x5*x7 + x1*x2*x3*x4*x6*x7 + x1*x2*x3*x5*x6*x7 + x1*x2*x4*x5*x6*x7 + x1*x3*x4*x5*x6*x7 + x2*x3*x4*x5*x6*x7"

ELEMENTARY_SYMMETRIC_8_7="x0*x1*x2*x3*x4*x5*x6 + x0*x1*x2*x3*x4*x5*x7 + x0*x1*x2*x3*x4*x6*x7 + x0*x1*x2*x3*x5*x6*x7 + x0*x1*x2*x4*x5*x6*x7 + x0*x1*x3*x4*x5*x6*x7 + x0*x2*x3*x4*x5*x6*x7 + x1*x2*x3*x4*x5*x6*x7"

ELEMENTARY_SYMMETRIC_8_8="x0*x1*x2*x3*x4*x5*x6*x7"




PG_3_5_DESARGUESIAN_SPREAD="0, 805, 36, 108, 72, 144, \
581, 509, 686, 415, 639, 758, 285, 722, 332, 343, 202, \
592, 473, 238, 675, 379, 166, 545, 249, 451"

# elements of order 2:
# conjugacy class reps:
# elt order, class size, centralizer order 

#2A: 2 48960 40320 Baer involution

#2B: 2 5355 368640  one block of 10,11

#2C: 2 64260 30720 two blocks of 10,11 (problem group)


#	pdflatex PGGL_4_4_classes_out.tex
#	open PGGL_4_4_classes_out.pdf


# elements of order 2:
# conjugacy class reps:
# elt order, class size, centralizer order 

#2 48960 40320 Baer involution

#2 5355 368640  one block of 10,11

#2 64260 30720 two blocks of 10,11 (problem group)


CLASS_2A=-centralizer_of_element \
"1,0,0,0, 0,1,0,0, 0,0,1,0, 0,0,0,1, 1" \
-label "2A" 
# Baer involution

CLASS_2B=-centralizer_of_element \
"1,0,0,0, 1,1,0,0, 0,0,1,0, 0,0,0,1, 0" \
-label "2B"

CLASS_2C=-centralizer_of_element \
"1,0,0,0, 1,1,0,0, 0,0,1,0, 0,0,1,1, 0" \
-label "2C"
# problem group


# 3 classes of elements of order 3
# 4 classes of elements of order 4


# Baer involution:
PGGL_4_4_SUBGROUP_2A=-PGGL 4 4 \
	-subgroup_by_generators "2A" 2 1 \
	"1,0,0,0, 0,1,0,0, 0,0,1,0, 0,0,0,1, 1"

PGGL_4_4_SUBGROUP_2A_NORMALIZER=-PGGL 4 4 \
	-subgroup_by_generators "centralizer_2A" "40320" 10 \
	"1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1, \
	1,0,0,0,0,1,0,0,0,0,1,0,1,1,0,1,1, \
	1,0,0,0,0,1,0,0,0,0,1,0,0,1,1,1,1, \
	1,0,0,0,0,1,0,0,0,0,1,0,1,1,1,1,0, \
	1,0,0,0,0,1,0,0,1,1,0,1,1,1,1,0,0, \
	1,0,0,0,0,1,0,0,1,0,1,0,0,1,0,1,1, \
	1,0,0,0,0,1,0,0,0,0,1,1,1,0,1,0,0, \
	1,0,0,0,1,1,1,1,1,0,1,0,1,1,1,0,0, \
	1,0,0,0,0,1,1,0,0,0,1,1,1,0,1,0,0, \
	0,1,0,0,0,1,0,1,1,1,0,1,0,1,1,1,1"



# the problem group, two blocks of 10,11:

PGGL_4_4_SUBGROUP_2C=-PGGL 4 4 \
	-subgroup_by_generators "2C" 2 1 \
	"1,0,0,0, 1,1,0,0, 0,0,1,0, 0,0,1,1, 0"

PGGL_4_4_SUBGROUP_2C_NORMALIZER=-PGGL 4 4 \
	-subgroup_by_generators "centralizer_2C" "30720" 9 \
	"1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1, \
	1,0,0,0,0,1,0,0,0,0,2,0,0,0,0,2,1, \
	1,0,0,0,0,1,0,0,0,0,1,0,2,0,3,1,0, \
	1,0,0,0,0,1,0,0,0,0,1,0,1,0,3,1,0, \
	1,0,0,0,0,1,0,0,1,0,1,0,1,1,1,1,1, \
	1,0,0,0,1,1,0,0,0,0,1,0,0,0,1,1,0, \
	1,0,0,0,2,1,0,0,0,0,1,0,1,0,0,1,0, \
	1,0,0,0,1,1,2,0,0,0,1,0,0,0,0,1,0, \
	1,0,3,0,1,1,1,3,0,0,2,0,0,0,0,2,1,"


PGGL_4_4_SUBGROUP_5A=-PGGL 4 4 \
	-subgroup_by_generators "5A" 5 1 \
	"0,2,0,0, 1,1,0,0, 0,0,3,0, 0,0,0,3, 0"

PGGL_4_4_SUBGROUP_5A_NORMALIZER=-PGGL 4 4 \
	-subgroup_by_generators "normalizer_5A" "3600" 6 \
	"1,0,0,0,0,1,0,0,0,0,2,0,0,0,0,2,0, \
	1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,2,0, \
	1,0,0,0,0,1,0,0,0,0,1,0,0,0,1,1,0, \
	1,0,0,0,0,1,0,0,0,0,0,2,0,0,2,0,0, \
	1,0,0,0,2,2,0,0,0,0,1,0,0,0,0,1,1, \
	0,1,0,0,3,3,0,0,0,0,2,0,0,0,0,2,0" 

PGGL_4_4_SUBGROUP_5B=-PGGL 4 4 \
	-subgroup_by_generators "5B" 5 1 \
	"0,2,0,0,1,1,0,0,0,0,0,2,0,0,1,1,0"

PGGL_4_4_SUBGROUP_5B_NORMALIZER=-PGGL 4 4 \
	-subgroup_by_generators "normalizer_5B" "81600" 6 \
	"1,0,0,0,0,1,0,0,0,0,2,0,0,0,0,2,0, \
	1,0,0,0,0,1,0,0,2,2,2,2,1,3,1,3,0, \
	1,0,0,0,0,1,0,0,0,0,1,1,0,0,3,2,0, \
	1,0,0,0,2,2,0,0,0,0,3,0,0,0,1,1,1, \
	0,1,0,0,3,3,0,0,0,0,0,1,0,0,3,3,0, \
	0,0,1,0,0,0,1,2,2,0,0,0,2,3,0,0,1



PGGL_4_4_SUBGROUP_2Cx2_0=-PGGL 4 4 \
	-subgroup_by_generators "2Cx2_0" 4 2 \
	"1,0,0,0,1,1,0,0,0,0,1,0,0,0,1,1,0 \
	1,0,0,0,0,1,0,0,1,0,1,0,0,1,0,1,0"

PGGL_4_4_SUBGROUP_2Cx2_0_NORMALIZER=-PGGL 4 4 \
	-subgroup_by_generators "normalizer_2Cx2_0" "768" 8 \
	"1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1 \
	1,0,0,0,0,1,0,0,0,0,1,0,2,0,0,1,0 \
	1,0,0,0,0,1,0,0,1,0,1,0,3,1,0,1,1 \
	1,0,0,0,0,1,0,0,3,0,1,0,2,3,0,1,1 \
	1,0,0,0,0,1,0,0,0,1,1,0,0,1,0,1,0 \
	1,0,0,0,2,1,1,0,1,0,1,0,1,1,2,1,1 \
	1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0 \
	1,0,0,0,3,1,0,0,1,0,1,0,0,1,3,1,1"





#PGL_4_5_SUBGROUP_3B=-PGL 4 5 \
#	-subgroup_by_generators "3B" 3 1 \
#	"1,0,0,0, 0,1,0,0, 0,0,2,1, 0,0,3,2"

#PGL_4_5_SUBGROUP_3B_NORMALIZER=-PGL 4 5 \
#	-subgroup_by_generators "normalizer_3B" "5760" 8 \
#	"1,0,0,0,0,4,0,0,0,0,1,0,0,0,0,1," \
#	"1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4," \
#	"1,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4," \
#	"1,0,0,0,0,1,0,0,0,0,3,0,0,0,0,3," \
#	"1,0,0,0,0,3,0,0,0,0,1,0,0,0,0,1," \
#	"1,0,0,0,0,1,0,0,0,0,1,4,0,0,2,1," \
#	"1,0,0,0,4,4,0,0,0,0,1,0,0,0,0,1," \
#	"0,1,0,0,1,0,0,0,0,0,4,0,0,0,0,4," 


#elementary abelian subgroups of order 4 with 3 elements of class 2C:






# nice generators, from Michael Epstein:

PGL_4_5_SUBGROUP_3B_ME=-PGL 4 5 \
	-subgroup_by_generators "3B" 3 1 \
	"1,0,0,0, 0,1,0,0, 0,0,2,2, 0,0,4,2"

PGL_4_5_SUBGROUP_3B_ME_NORMALIZER=-PGL 4 5 \
	-subgroup_by_generators "normalizer_3B" "5760" 8 \
	"1,0,0,0,0,4,0,0,0,0,1,0,0,0,0,1, \
	1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4, \
	1,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4, \
	1,0,0,0,0,1,0,0,0,0,3,0,0,0,0,3, \
	1,0,0,0,0,3,0,0,0,0,1,0,0,0,0,1, \
	1,0,0,0,0,1,0,0,0,0,2,4,0,0,2,3, \
	1,0,0,0,4,4,0,0,0,0,1,0,0,0,0,1, \
	0,1,0,0,1,0,0,0,0,0,4,0,0,0,0,4," 

PGL_4_5_SUBGROUP_31_ME=-PGL 4 5 \
	-subgroup_by_generators "31" 31 1 \
	"1,0,0,0, 0,3,4,3, 0,3,3,4, 0,3,2,3"

PGL_4_5_SUBGROUP_31_ME_NORMALIZER=-PGL 4 5 \
	-subgroup_by_generators "normalizer_31" "372" 4 \
	"1,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4, \
	1,0,0,0,0,3,0,0,0,0,3,0,0,0,0,3, \
	1,0,0,0,0,4,0,0,0,0,2,1,0,3,2,4, \
	1,0,0,0,0,0,1,0,0,0,0,1,0,1,1,3," 





# subgroup of order 31 for the construction of regular packings in PG_3_5:

PGL_4_5_SUBGROUP_31=-PGL 4 5 \
	-subgroup_by_generators "31" 31 1 \
	"2,0,0,0, 0,0,1,0, 0,0,0,1, 0,3,0,4"

PGL_4_5_SUBGROUP_31_NORMALIZER=-PGL 4 5 \
	-subgroup_by_generators "normalizer_31" "372" 4 \
	"1,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4, \
	1,0,0,0,0,3,0,0,0,0,3,0,0,0,0,3, \
	1,0,0,0,0,4,0,0,0,0,2,1,0,3,2,4, \
	1,0,0,0,0,0,1,0,0,0,0,1,0,1,1,3,"






#372:
#"1,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4, " \
#"1,0,0,0,0,3,0,0,0,0,3,0,0,0,0,3, " \
#"1,0,0,0,0,4,0,0,0,0,2,1,0,3,2,4, " \
#"1,0,0,0,0,0,1,0,0,0,0,1,0,1,1,3," \



#Exterior square roots:

#elt of order 3:
#the exterior square root of f is X=
#[1 0 0 0]
#[0 1 0 0]
#[0 0 2 2]
#[0 0 4 2]

#elt of order 31:
#the exterior square root of g is Z=
#[1 0 0 0]
#[0 3 4 3]
#[0 3 3 4]
#[0 3 2 3]

#Michael


HAMMING_CODE_CODEWORDS="0, 67, 37, 102, 22, 85, \
51, 112, 15, 76, 42, 105, 25, 90, 60, 127"

SIMPLEX_CODE_GENERATOR="\
1,0,1,0,1,0,1, \
0,1,1,0,0,1,1, \
0,0,0,1,1,1,1"



HAMMING_CODE_GENERATOR="\
1,0,0,0,0,1,1, \
0,1,0,0,1,0,1, \
0,0,1,0,1,1,0, \
0,0,0,1,1,1,1"


GOLAY23_CODE_GENERATOR="\
1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,0,0,1,0,\
0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,1,\
0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,1,1,\
0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,1,1,1,1,\
0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,1,1,0,\
0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,1,1,0,0,\
0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,1,1,0,1,0,1,\
0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,1,0,1,0,0,\
0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,1,0,1,0,1,0,\
0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,0,1,1,0,0,1,\
0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,0,1,1,1,\
0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1"


HAMMING_CODE_ROWS_IN_BINARY_RANKS="67,37,22,15"

SIMPLEX_CODE_GENMA_CYCLIC="\
1,0,0,1,1,1,0, \
0,1,0,0,1,1,1, \
0,0,1,1,1,0,1"


CODE_GV_N15_K6="\
111111111100000\
111110000010000\
111001100001000\
110101010000100\
101010110000010\
101101001000001"


CODE_GV_N15_K6_CHECK="\
100000000111111\
010000000111100\
001000000111011\
000100000110101\
000010000110010\
000001000101101\
000000100101010\
000000010100110\
000000001100001"




REED_MULLER_3_1_CODEWORDS="0,255,170,85,204,51,102,\
153,240,15,90,165,60,195,150,105"

REED_MULLER_3_1_BASIS_IN_BINARY="255,170,204,240"

REED_MULLER_4_1_COLUMNS_OF_PARTITY_CHECK="1,3,5,7,9,11,13,\
15,17,19,21,23,25,27,29,31"

#-nearest_codeword "8,16,32,24,40,48,56,1,2,4,3,5,6,7,9,18,36,27,45,54,63,33,42,20,11,53,62,31"



AG_2_3_BLOCKS="0,13,22,27,35,41,47,53,55,59,71,76"

LARGE_SET_AG_2_3_NEIGHBOR_SET="129,130,133,134,136,139,141,142,153,154,156,160,165,166,178,179,183,184,185,190,192,194,197,203,204,206,218,221,222,225,227,231,248,251,252,255,256,259,261,262,272,277,279,283,285,287,299,301,303,305,306,309,313,315,319,320,323,325,341,342,343,344,345,349,368,371,375,378,381,383,392,393,397,402,403,405,416,419,421,422,425,426,429,430,440,443,447,449,453,454,464,467,468,473,474,479,490,493,494,497,500,503,513,517,518,520,523,527,536,539,541,542,544,547,548,551,563,566,567,571,572,573,585,589,590,593,595,596,600,601,603,611,614,615,625,629,631,635,637,638,657,659,661,667,668,671,681,683,686,689,691,693,705,706,709,710,712,715,717,718,720,723,724,729,733,735,747,748,750,752,754,757,777,780,781,784,790,791,802,804,807,808,811,814,824,827,828,831,832,835,837,838"



TEST_SYSTEM="\
0,1,0,1,0,0, \
0,0,1,0,1,0, \
1,0,1,0,0,0, \
0,1,0,1,0,1, \
1,0,0,0,0,1, \
1,0,1,0,0,0, \
0,1,0,0,1,1"

TEST_RHS="1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"




PP4= -d1 1 -q1 3 -d2 1 -q2 7 -K 5 -search_control -W -end -problem_label PP4

PP4_GROUP1=-subgroup "1,1,1,1, " "21" -group_label "cyclic21"

PP4_MASK1=\
	-nb_orbits_on_blocks 1 \
	-depth 5 \
	-mask_label "no_mask"



DELANDTSHEER_DOYEN_PROBLEM_COLBOURN_COLBOURN_7_13= -d1 1 -q1 7 -d2 1 -q2 13 -K 6 -search_control -W -end -problem_label DD_CC_7_13

DELANDTSHEER_DOYEN_PROBLEM_COLBOURN_COLBOURN_7_13_GROUP1=-subgroup "1,1,1,1, " "91" -group_label "cyclic91"

DELANDTSHEER_DOYEN_PROBLEM_COLBOURN_COLBOURN_7_13_MASK1=\
	-nb_orbits_on_blocks 3 \
	-depth 6 \
	-mask_label "no_mask"



DELANDTSHEER_DOYEN_PROBLEM_27_53= -d1 1 -q1 27 -d2 1 -q2 53 -K 11 -DDx 2 -DDy 1 -search_control -W -end 

DELANDTSHEER_DOYEN_PROBLEM_27_53_GROUP1=-subgroup \
	"1,1,1,0, 1,3,1,0, 1,9,1,0, 1,0,1,1, -2,0,-4,0" "18603" -group_label "group1"
# mask 1:
#  XX.
#  X.X+

DELANDTSHEER_DOYEN_PROBLEM_27_53_MASK1=\
	-masktest 3 x ge 1 \
	-masktest 4 x+y ge 3 \
	-depth 4 \
	-mask_label "mask1"

DELANDTSHEER_DOYEN_PROBLEM_3_7= -d1 1 -q1 3 -d2 1 -q2 7 -K 5 -DDx 3 -DDy 1 -search_control -W -end 

DELANDTSHEER_DOYEN_PROBLEM_3_7_GROUP1=-subgroup \
	"1,1,1,0, 1,0,1,1 " "21" -group_label "group_cyclic"

DELANDTSHEER_DOYEN_PROBLEM_3_7_MASK1= -mask_label "mask1" -depth 5




PENTTILA_WILLIAMS_PRINCE_REG_PACKING_0="444,43313,154402,46682,108254,\
75363,27729,32139,5244,60442,142811,111115,94209,120678,89533,13798,\
103994,129953,82168,136838,19253,23017,145985,134996,54705,36267,\
55066,117542,96699,69154,72460"

PENTTILA_WILLIAMS_PRINCE_REG_PACKING_1="616,42728,152655,48576,105431,\
79607,28634,32817,9799,62356,141176,110085,92557,122136,86312,13975,\
101942,126869,81478,139352,18028,24325,147284,130370,52074,36843,\
55602,118454,95973,69642,74036"

PENTTILA_WILLIAMS_PRINCE_REG_PACKING_0_DUAL="3938, 66740, 56555, \
93538, 107785, 64917, 47567, 54483, 141012, 138602, 18308, 6880, \
131351, 88788, 125484, 102075, 21234, 99392, 119149, 80640, 124839, \
148843, 71862, 11468, 35950, 27050, 75338, 113337, 40002, 154102, \
30567"

PG_3_5_PACKING_0_WITH_AGO3="0,5201,60427,86602,11453,121452,46663,\
19716,32921,108680,23456,91963,68386,26921,74601,57067,36188,42312,\
78780,53117,118488,114700,83960,99669,104791,126662,130960,145179,\
137230,150626,140216"


PG_3_5_PACKING_0_WITH_AGO3_FIXP444="444,5001,12957,18194,23485,26817,\
34667,38299,41249,47472,50450,56601,62638,68986,71833,75369,80805,\
87025,92577,95676,104509,109718,114948,116333,124391,127498,133240,\
137711,144777,148059,150175"





# consider the binary code with generator matrix:
# 1 0 1
# 0 1 1

CODE_N3_K2_Q2_GENMA="1,0,1, 0,1,1"

CODE_N6_K3_Q2_GENMA="\
111100\
110010\
101001"



TRIANGLE_GRAPH="0,1,1\n1,0,1\n1,1,0\n"



# q=17:
# 3 is p.e. mod 17.
# so we pick f=3.
# then, 2f^2=18=1
# 4f = 12

# X^4 -Y^4 -Z^4 +2f^2Y^2Z^2 +4fX^2YZ 

#(1,-1,-1,0,0,0,0,0,0,0,0,2f^2,4f,0,0)

EDGE_CURVE_Q17_EQUATION="1,16,16,0,0,0,0,0,0,0,0,1,12,0,0"

EDGE_CURVE_Q17_AS_POINTS="4, 7, 16, 19, 20, 23, 32, 35, 89, 100, 244, 251"


FILE_Q17="orbit,curve,pts_on_curve,bitangents,go\
\n0,\"$(EDGE_CURVE_Q17_EQUATION)\",\"$(EDGE_CURVE_Q17_AS_POINTS)\",\"\",-1\
\nEND"


EDGE_CURVE_Q23_AS_POINTS="4, 25, 26, 47, 48, 71, 92, 95, 114, 119, \
136, 143, 158, 167, 180, 191, 202, 215, 224, 239, 246, 263, 268, \
287, 290, 311, 312, 334, 335, 356, 359, 378, 383, 400, 407, 422, \
431, 444, 455, 466, 479, 488, 503, 510, 527, 530, 532, 551"


DESARGUES_PATH_LEX_LEAST="10 10 3\n0\n1 0\n2 0 15\n3 0 15 26\n4 0 15 26 46\n5 0 15 26 46 56\n6 0 15 26 46 56 72\n7 0 15 26 46 56 72 80\n8 0 15 26 46 56 72 80 93\n9 0 15 26 46 56 72 80 93 106\n10 0 15 26 46 56 72 80 93 106 119\n-1\n"





SPREADS_27_ISO_0="\
0, 33879, 1339, 2678, 3994, 7671, 10180, 5862, 9524, 6852, 22243, \
12745, 24295, 11062, 13615, 23894, 15056, 29367, 16429, 31521, 17726, \
31103, 18887, 26333, 19566, 28400, 21531, 27228"

SPREADS_27_ISO_1="\
0, 33879, 1339, 2678, 3994, 7671, 10182, 5761, 6796, 9327, 15339, \
31914, 24415, 12713, 22748, 11666, 13353, 23555, 30103, 16395, 17827, \
30790, 18254, 26422, 20046, 28112, 20900, 26801"

SPREADS_27_ISO_2="\
0, 33879, 1339, 2678, 3994, 7671, 10182, 5817, 6796, 9276, 23891, \
15368, 11666, 22124, 12713, 24415, 13353, 29619, 15910, 31914, 17030, \
30931, 19213, 26422, 19905, 28112, 21217, 27545"

SPREADS_27_ISO_3="\
0, 33879, 1339, 2678, 3994, 7671, 10625, 6590, 9476, 5576, 24688, \
23043, 10996, 22124, 12723, 13522, 15421, 29894, 16532, 32442, 17997, \
31015, 18311, 26109, 19807, 28113, 21220, 27195"

SPREADS_27_ISO_4="\
0, 33879, 1339, 2678, 3994, 7674, 7051, 10666, 9327, 5419, 19806, \
21332, 22124, 13353, 24415, 12401, 11062, 23717, 15056, 29660, 16395, \
31950, 17873, 31153, 19212, 26221, 28515, 26708"

SPREADS_27_ISO_5="\
0, 33879, 1339, 2678, 3994, 7988, 5333, 6672, 10666, 9327, 11062, \
22124, 13353, 15056, 16395, 17347, 31055, 27061, 24415, 12401, 23076, \
30103, 32394, 19041, 26109, 20380, 28400, 21332"

SPREADS_27_ISO_6="\
0, 33879, 1339, 2679, 3992, 7672, 31140, 6913, 13513, 23167, 5653, \
10607, 9131, 11225, 22548, 13074, 24645, 15124, 29345, 16226, 31506, \
17684, 18732, 26116, 19458, 28361, 21571, 27680"




HIRSCHFELD_STAB_GENERATORS="1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1, 1,0,0,0,0,2,0,0,0,0,2,0,0,0,0,1,0, 1,0,0,0,0,3,0,0,0,0,3,0,1,0,0,1,0, 1,0,0,0,0,1,0,0,1,1,1,0,0,1,0,1,1, 1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0, 0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0"


SUZUKI_8_GENERATORS="\
1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1, \
1,0,0,0,0,6,0,0,0,0,2,0,0,0,0,3,0, \
1,0,0,0,1,1,1,0,0,0,1,0,1,0,0,1,0, \
1,0,0,0,3,6,2,2,5,0,2,0,3,0,6,3,2, \
0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,2"
# group order 87360 = 3 * 29120




# Povray:

# povray colors:
POLISHED_CHROME_WHITE=\
	"texture{ Polished_Chrome pigment{quick_color White} }"

YELLOW_TRANSPARENT=\
	"texture{ pigment{ color Yellow transmit 0.7 } \
	finish {diffuse 0.9 phong 0.6} }"

COLOR_RED=\
	"texture{ pigment{ color Red } \
	finish {diffuse 0.9 phong 0.6} }"

COLOR_RED_SHINY=\
	"texture{ pigment{ color Red } \
	finish { diffuse 0.9 phong 1}}"

COLOR_GREEN_SHINY=\
	"texture{ pigment{ color Green } \
	finish { diffuse 0.9 phong 1}}"

COLOR_BLUE_SHINY=\
	"texture{ pigment{ color Blue } \
	finish { diffuse 0.9 phong 1}}"

COLOR_YELLOW_SHINY=\
	"texture{ pigment{ color Yellow } \
	finish { diffuse 0.9 phong 1}}"

COLOR_BLACK_SHINY=\
	"texture{ pigment{ color Black } \
	finish { diffuse 0.9 phong 1}}"

COLOR_RED_SEE_THROUGH=\
	"texture{ pigment{ color Red transmit 0.5 } \
	finish { diffuse 0.9 phong 1}}"

COLOR_GREEN_SEE_THROUGH=\
	"texture{ pigment{ color Green transmit 0.5 } \
	finish { diffuse 0.9 phong 1}}"

COLOR_BLUE_SEE_THROUGH=\
	"texture{ pigment{ color Blue transmit 0.5 } \
	finish { diffuse 0.9 phong 1}}"

COLOR_YELLOW_SEE_THROUGH=\
	"texture{ pigment{ color Yellow transmit 0.5 } \
	finish { diffuse 0.9 phong 1}}"

COLOR_YELLOW_THICK=\
	"texture{ pigment{ color Yellow } \
	finish { diffuse 0.9 phong 1}}"

COLOR_BLACK_NO_SHADOW=\
	"texture{ pigment{Black} } no_shadow"

SURFACE_COLOR=\
	"texture{ pigment{ White*0.5  } \
	finish {ambient 0.4 diffuse 0.5 roughness 0.001 \
	reflection 0.1 specular .8} }"

SURFACE_COLOR_SEETHROUGH=\
	"texture{ pigment{ White*0.5 transmit 0.5 } \
	finish {ambient 0.4 diffuse 0.5 roughness 0.001 \
	reflection 0.1 specular .8} }"

COLOR_GOLD=\
	"texture{ pigment{ Gold } finish \
	{ambient 0.4 diffuse 0.5 roughness 0.001 \
	reflection 0.1 specular .8} }"

COLOR_TURQUOISE=\
	"texture{ pigment{Cyan*1.3} \
	finish {ambient 0.4 diffuse 0.6 roughness 0.001 \
	reflection 0 specular .8} }"

MONKEY_SADDLE_CUBIC="1,0,0,0,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0"

ECKARDT_CUBIC_DEFORM1_LEX="0, 10, 0, -8, 10, 25, 2, 0, -20, -8, -20, -10, -24, 10, -2, 12, 0, -8, 8, 16" 

ECKARDT_CUBIC_DEFORM2_LEX="0, -5, 0, -5, -5, 10, -1, 0, 10, 4, 10, 5, 3, -5, 1, -6, 0, -5, -4, 1"

KUMMER_QUARTIC_LEX_35="-2,0,0,0,2,0,0,2,0,2,0,0,\
0,0,0,0,0,0,0,0,-2,0,0,2,0,2,0,0,0,0,-2,0,2,0,-2"

BEAUVILLE_QUINTIC_LEX_56="-44, 228, 400, 315, -396, -852, \
-512, -553, -1050, -354, 284, 504, -62, -707, -1390, -1010, \
281, -167, -1644, -1024, -72, -196, 192, 373, 322, 78, 150, \
966, 1540, 348, -475, -492, 1063, 1550, 390, 0, 96, 3, -337, \
-426, -66, 425, 673, -156, -216, -223, -60, 1543, 1998, 618, \
263, -250, -919, 557, 1800, 741"

ENDRASS_OCTIC_LEX_165="-93.2548,0,0,0,-309.019,0,0,527.529,0,395.647,\
0,0,0,0,0,0,0,0,0,0,-687.529,0,0,1582.59,0,1186.94,0,0,0,0,-1055.06,0,\
-1582.59,0,-593.47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-309.019,\
0,0,1582.59,0,1186.94,0,0,0,0,-2110.12,0,-3165.17,0,-1186.94,0,0,0,0,0,\
0,874.039,0,1560.63,0,1677.92,0,343.362,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-93.2548,0,0,527.529,0,395.647,\
0,0,0,0,-1055.06,0,-1582.59,0,-593.47,0,0,0,0,0,0,874.039,0,1560.63,0,\
1677.92,0,343.362,0,0,0,0,0,0,0,0,-256,0,-468.077,0,-789.019,0,\
-525.726,0,0.941125"




###############################################################################
# Chapter 2 - Getting Started
###############################################################################



###############################################################################
# Section 2.2: Orbiter Session
	
	
SECTION_ORBITER_SESSION:
	
test_orbiter_session:
	$(ORBITER)



###############################################################################
# Section 2.3: Makefiles and Shell Scripts

SECTION_MAKEFILES_AND_SHELL_SCRIPTS:


###############################################################################
# Section 2.4: Objects and Activities

SECTION_OBJECTS_AND_ACTIVITIES:

test_2_4:
	make example_set
	make object_F_2
	make object_PG_3_2
	make vector_ex


example_set:
	$(ORBITER) -v 2 \
		-define S -set -here "2,3,5,7,11,13" -end \
		-print_symbols



object_F_2:
	$(ORBITER) -v 3 -define F -finite_field -q 2 -end


object_PG_3_2:
	$(ORBITER) \
		-define F -finite_field -q 2 -end \
		-define P -projective_space -n 3 -field F -v 0 -end 


vector_ex:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 5 -end \
		-define v -vector -field F -dense "0,1,2,3,4" -end \
		-print_symbols







###############################################################################
# Section 2.5: Mathematical Data

SECTION_MATHEMATICAL_DATA:


test_2_5:
	make create_BLT_5_1
	make create_surface_4_0

create_BLT_5_1:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 5 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define BLT -BLT_set \
			-space O -catalogue 1 \
		-end \
		-with BLT -do -blt_set_activity \
			-report \
		-end
	pdflatex BLT_catalogue_q5_iso1.tex
	open BLT_catalogue_q5_iso1.pdf



create_surface_4_0:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define S4_0 -cubic_surface -space P -catalogue 0 -end \
		-with S4_0 -do \
			-cubic_surface_activity \
			-report \
		-end
	pdflatex surface_catalogue_q4_iso0_report.tex
	open surface_catalogue_q4_iso0_report.pdf



###############################################################################
# Section 2.6: Set Builder

SECTION_SET_BUILDER:


test_2_6:
	make set_of_primes
	make set_interval

set_of_primes:
	$(ORBITER) -v 2 \
		-define S -set -here "2,3,5,7,11,13" -end \
		-print_symbols

set_interval:
	$(ORBITER) -v 2 -define S -set -loop 0 64 1 -end \
		-print_symbols




###############################################################################
# Section 2.7: Vector Builder

SECTION_VECTOR_BUILDER:


test_2_7:
	make vector_example1
	make vector_example2
	make vector_example_repeat
	make vector_example_all_one_11
	make vector_loop_8
	make vector_loop_odd_16
	make vector_concatenate
	make matrix_example1
	make vector_example_sparse
	make matrix_example2
	make matrix_example_co_1


vector_example1:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 5 -end \
		-define v -vector -field F -dense "0,1,2,3,4" -end \
		-print_symbols


vector_example2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 5 -end \
		-define v -vector -field F -format 2 -dense "0,1,2,3,4,0" -end \
		-print_symbols

vector_example_repeat:
	$(ORBITER) -v 2 \
		-define v -vector -repeat "0,1,2,3" 11 -end \
		-print_symbols


vector_example_all_one_11:
	$(ORBITER) -v 2 \
		-define v -vector -repeat 1 11 -end \
		-print_symbols

vector_loop_8:
	$(ORBITER) -v 2 \
		-define v -vector -loop 0 8 1 -end \

vector_loop_odd_16:
	$(ORBITER) -v 2 \
		-define v -vector -loop 1 16 2 -end \


vector_concatenate:
	$(ORBITER) -v 2 \
		-define a -vector -compact "1,2,3" -end \
		-define b -vector -compact "4,5,6" -end \
		-define ab -vector -concatenate a -concatenate b -end


matrix_example1:
	$(ORBITER) -v 2 \
		-define v -vector -format 2 \
			-dense "1,2,3,4,5,6" -end \
		-print_symbols


vector_example_sparse:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 5 -end \
		-define v -vector -field F -format 4 -sparse 20 "1,0,1,19" -end \
		-print_symbols



matrix_example2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -field F -format 4 \
			-dense $(HAMMING_CODE_GENERATOR) -end \
		-print_symbols




matrix_example_co_1:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -field F -format 22 \
			-compact $(CONWAY_GEN1) -end \
		-print_symbols

###############################################################################
# Section 2.8: Formula Builder

SECTION_FORMULA_BUILDER:

test_2_8:
	make formula_example
	make formula_evaluate
	make test_formula



formula_example:
	$(ORBITER) -v 3 \
		-define f -formula \
			"test_formula" "test\_formula" "" \
			$(TEST_FORMULA)
	dot -Tpng test_formula.gv >test_formula.png
	open test_formula.png

formula_evaluate:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 5 -end \
		-define f -formula \
			"test_formula" "test\_formula" "" \
			$(TEST_FORMULA) \
		-with F -do -finite_field_activity \
			-evaluate f "a=2,b=3,x=4" -end

# should evaluate to 1, since (-2+3*3)*4*4+2*3*4=2+4=6=1 mod 5
# but: problem with the leading minus sign





test_formula:
	$(ORBITER) -v 3 -define F -finite_field -q 11 -end \
		-define e1 -formula "e1" "e1" "" $(ELEMENTARY_SYMMETRIC_2_1) \
		-define e2 -formula "e2" "e2" "" $(ELEMENTARY_SYMMETRIC_2_2) \
		-define E -collection "e1,e2" \
		-with F -do -finite_field_activity \
			-evaluate E3 "x0=2,x1=3,x2=4" -end

#"x0 + x1 + x2"
# evaluates to 9


#BCH_63_4_evaluate_elementary_symmetric_functions_1:
#	$(ORBITER) -v 3 -define F -finite_field -q 64 -end \
#		-define e1 -formula "e1" "e1" "" $(ELEMENTARY_SYMMETRIC_3_1) \
#		-define e2 -formula "e2" "e2" "" $(ELEMENTARY_SYMMETRIC_3_2) \
#		-define e3 -formula "e3" "e3" "" $(ELEMENTARY_SYMMETRIC_3_3) \
#		-define E3 -collection "e1,e2,e3" \
#		-with F -do -finite_field_activity \
#			-evaluate E3 "x0=8,x1=62,x2=15" -end



###############################################################################
# Chapter 3 - Basic Algebra
###############################################################################

###############################################################################
# Section 3.1: Basic Number Theory

SECTION_BASIC_NUMBER_THEORY:

test_3_1:
	make PR29
	make PR31
	make PR37
	make PR_100
	make PR_915839
	make PR_915839_check
	make DL_915839
	make IM_723
	make IM_3_19
	make IM
	make IM_gcd
	make PM3a
	make sqrt_mod
	make sqrt_5_mod_11
	make sqrt_5_mod_19
	make sqrt_mod_20_31
	make order_of_2_mod_n
	make Eulerfunction_150
	make Eulerfunction_900
	make Eulerfunction_10000
	make PR_1000
	make PE_number_1000
	make number_of_primitive_roots_10000
	make power_function_2_mod_11
	make draw_mod_13
	make Chinese_remainders_A
	make Chinese_remainders_B
	make Chinese_remainders_C2
	make Chinese_remainders_C3



PR29:
	$(ORBITER) -v 1 -smallest_primitive_root 29

PR31:
	$(ORBITER) -v 1 -smallest_primitive_root 31

PR37:
	$(ORBITER) -v 1 -smallest_primitive_root 37

PR_100:
	$(ORBITER) -v 1 -smallest_primitive_root_interval 2 100




# randomized algo:

PR_915839:
	$(ORBITER) -v 5 -primitive_root 915839

#a primitive root modulo 915839 is 43085

PR_915839_check:
	$(ORBITER) -v 5 -power_mod 43085 49842 915839

#the power of 43085 to the 49842 mod 915839 is 487320

DL_915839:
	$(ORBITER) -v 5 -discrete_log 487320 43085 915839


#The discrete log is 49842 since 487320 = 43085^49842 mod 915839, time: 0:22

IM_723:
	$(ORBITER) -v 5 -inverse_mod 723 4060



IM_3_19:
	$(ORBITER) -v 5 -inverse_mod 3 19


IM:
	$(ORBITER) -v 5 -inverse_mod 1865025205 2147483647

IM_gcd:
	$(ORBITER) -v 5 -extended_gcd 1865025205 2147483647


PM3a:
	$(ORBITER) -v 5 -power_mod 16807 1073741823 2147483647

sqrt_mod:
	$(ORBITER) -v 2 -square_root_mod 33 41


sqrt_5_mod_11:
	$(ORBITER) -v 2 -square_root_mod 5 11 


sqrt_5_mod_19:
	$(ORBITER) -v 2 -square_root_mod 5 19 


sqrt_mod_20_31:
	$(ORBITER) -v 2 -square_root_mod 20 31

order_of_2_mod_n:
	$(ORBITER) -v 3 -order_of_q_mod_n 2 3 151
	$(ORBITER) -v 1 -csv_file_latex 1 \
		order_of_q_mod_n_q2_3_151.csv
	pdflatex order_of_q_mod_n_q2_3_151.tex
	open order_of_q_mod_n_q2_3_151.pdf






Eulerfunction_150:
	$(ORBITER) -v 1 -eulerfunction_interval 1 150
	$(ORBITER) -v 1 -csv_file_latex 1 \
		table_eulerfunction_1_150.csv
	pdflatex table_eulerfunction_1_150.tex
	open table_eulerfunction_1_150.pdf

Eulerfunction_900:
	$(ORBITER) -v 1 -eulerfunction_interval 900 1150
	$(ORBITER) -v 1 -csv_file_latex 1 \
		table_eulerfunction_900_1150.csv
	pdflatex table_eulerfunction_900_1150.tex
	open table_eulerfunction_900_1150.pdf

Eulerfunction_10000:
	$(ORBITER) -v 1 -eulerfunction_interval 10000 10150
	$(ORBITER) -v 1 -csv_file_latex 1 \
		table_eulerfunction_10000_10150.csv
	pdflatex table_eulerfunction_10000_10150.tex
	open table_eulerfunction_10000_10150.pdf

PR_1000:
	$(ORBITER) -v 1 -smallest_primitive_root_interval 2 1000
	$(ORBITER) -v 1 -csv_file_latex 1 \
		primitive_element_table_2_1000.csv
	pdflatex primitive_element_table_2_1000.tex
	open primitive_element_table_2_1000.pdf

PE_number_1000:
	$(ORBITER) -v 1 -number_of_primitive_roots_interval 2 1000
	$(ORBITER) -v 1 -csv_file_latex 1 table_number_of_pe_2_1000.csv
	pdflatex table_number_of_pe_2_1000.tex
	open table_number_of_pe_2_1000.pdf

number_of_primitive_roots_10000:
	$(ORBITER) -v 1 -number_of_primitive_roots_interval 10000 10001


power_function_2_mod_11:
	$(ORBITER) -v 5 -power_function_mod_n 2 11
	$(ORBITER) -v 1 -csv_file_latex 1 power_function_k2_n11.csv
	pdflatex power_function_k2_n11.tex
	open power_function_k2_n11.pdf


draw_mod_13:
	$(ORBITER) -v 2 \
		-draw_options -embedded -end \
		-draw_mod_n \
			-n 13 \
			-file mod_13 \
			-power_cycle 2 \
		-end
	pdflatex mod_13_draw.tex
	open mod_13_draw.pdf


Chinese_remainders_A:
	$(ORBITER) -v 2 \
		-define R -vector -dense "2,2,5" -end \
		-define M -vector -dense "5,6,7" -end \
		-Chinese_remainders R M

Chinese_remainders_B:
	$(ORBITER) -v 2 \
		-define R -vector -dense "38,2" -end \
		-define M -vector -dense "74,27" -end \
		-Chinese_remainders R M

Chinese_remainders_C2:
	$(ORBITER) -v 2 \
		-define R -vector -dense "2,3" -end \
		-define M -vector -dense "2147483647,5915587277" -end \
		-Chinese_remainders R M


#The solution is 5684294357108828365 modulo 12703626939758759219 (computed in longinteger)

# checking with Maple:
#5684294357108828365 mod 2147483647;
#                               2

#5684294357108828365 mod 5915587277;
#                               3



Chinese_remainders_C3:
	$(ORBITER) -v 2 \
		-define R -vector -dense "2,3,4" -end \
		-define M -vector -dense "2147483647,5915587277,3267000013" -end \
		-Chinese_remainders R M


#The solution is 31431541759324477327451572539 modulo 41502749377339016585336869847 (computed in longinteger)

# checking with Maple:
#31431541759324477327451572539 mod 2147483647;
#                               2

#31431541759324477327451572539 mod 5915587277;
#                               3

#31431541759324477327451572539 mod 3267000013;
#                               4



###############################################################################
# Section 3.2: Prime Fields

SECTION_PRIME_FIELDS:


test_3_2:
	make F_2
	make F_3
	make F_5
	make F_5_add_table
	make F_7
	make F_7_tables
	make F_127
	make F_11_product_of_all_nonzero_elements
	make F_7_vandermonde
	make F_101_wo
	make F_1021_wo



F_2:
	$(ORBITER) -v 3 -list_arguments \
		-define F -finite_field -q 2 -end \
		-with F -do -finite_field_activity -cheat_sheet_GF -end
	pdflatex GF_2.tex
	open GF_2.pdf


F_3:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 3 -end \
		-with F -do -finite_field_activity -cheat_sheet_GF -end
	#pdflatex GF_3.tex
	#open GF_3.pdf

F_5:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 5 -end \
		-with F -do -finite_field_activity -cheat_sheet_GF -end
	pdflatex GF_5.tex
	open GF_5.pdf


F_5_add_table:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 5 -end \
		-with F -do -finite_field_activity -export_tables -end \
		-draw_matrix -input_csv_file GF_q5_table_add.csv \
			-box_width 40 -bit_depth 24 -partition 3 5 5 -end \


F_7:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 7 -end \
		-with F -do -finite_field_activity -cheat_sheet_GF -end
	pdflatex GF_7.tex
	open GF_7.pdf


F_7_tables:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 7  -end \
		-with F -do -finite_field_activity -export_tables -end
	$(ORBITER) -v 3 \
		-define all_one -vector -repeat 1 7 -end \
		-draw_matrix -input_csv_file GF_q7_table_add.csv \
			-box_width 40 -bit_depth 24 \
			-partition 3 all_one all_one \
		-end \
		-draw_matrix -input_csv_file GF_q7_table_mul.csv \
			-box_width 40 -bit_depth 24 \
			-partition 3 all_one all_one \
		-end
	convert GF_q7_table_add_draw.bmp GF_q7_table_add_draw.png
	convert GF_q7_table_mul_draw.bmp GF_q7_table_mul_draw.png


F_127:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 127 -end \
		-with F -do -finite_field_activity -cheat_sheet_GF -end


F_11_product_of_all_nonzero_elements:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 11 -end \
		-define S -vector -field F -loop 1 11 1 -end \
		-with F -do -finite_field_activity -product_of S -end


F_7_vandermonde:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 7 -end \
		-with F -do -finite_field_activity \
			-Vandermonde_matrix \
		-end


F_101_wo:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 101 -without_tables -end \
		-with F -do -finite_field_activity -cheat_sheet_GF -end
	pdflatex GF_101.tex
	open GF_101.pdf


F_1021_wo:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 1021 -without_tables -end \
		-with F -do -finite_field_activity -cheat_sheet_GF -end




###############################################################################
# Section 3.3: Extension Fields

SECTION_EXTENSION_FIELDS:
	

test_3_3:
	make F_4
	make F_4_tables
	make F_8
	make F_8_tables
	make F_8b
	make F_9
	make F_16
	make F_16_tables
	make F_64
	make nth_roots_63
	make F8_F2_field_reduction
	make F_4096
	make F_4489
	#make F_2_power_24


F_4:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 4 -end \
		-with F -do -finite_field_activity -cheat_sheet_GF -end
	pdflatex GF_4.tex
	open GF_4.pdf




F_4_tables:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 4 -end \
		-with F -do -finite_field_activity -export_tables -end
	$(ORBITER) -v 3 \
		-define all_one -vector -repeat 1 4 -end \
		-draw_matrix -input_csv_file GF_q4_table_add.csv \
			-box_width 40 -bit_depth 24 \
			-partition 3 all_one all_one \
		-end \
		-draw_matrix -input_csv_file GF_q4_table_mul.csv \
			-box_width 40 -bit_depth 24 \
			-partition 3 all_one all_one \
		-end
	convert GF_q4_table_add_draw.bmp GF_q4_table_add_draw.png
	convert GF_q4_table_mul_draw.bmp GF_q4_table_mul_draw.png



F_8:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 8 -end \
		-with F -do -finite_field_activity -cheat_sheet_GF -end
	pdflatex GF_8.tex
	open GF_8.pdf


F_8_tables:
	$(ORBITER) -v 3 \
		-define all_one -vector -repeat 1 8 -end \
		-define F -finite_field -q 8 -end \
		-with F -do -finite_field_activity -export_tables -end \
		-with F -do -finite_field_activity -cheat_sheet_GF -end \
		-draw_matrix -input_csv_file GF_q8_table_add.csv \
			-box_width 40 -bit_depth 24 -partition 3 all_one all_one -end \
		-draw_matrix -input_csv_file GF_q8_table_mul.csv \
			-box_width 40 -bit_depth 24 -partition 3 all_one all_one -end


F_8b:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 8 -override_polynomial 11 -end \
		-with F -do -finite_field_activity -cheat_sheet_GF -end
	pdflatex GF_8.tex
	open GF_8.pdf



F_9:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 9 -end \
		-with F -do -finite_field_activity -cheat_sheet_GF -end
	pdflatex GF_9.tex
	open GF_9.pdf



F_16:
	$(ORBITER) -v 10 \
		-define F -finite_field -q 16 -compute_related_fields -end \
		-with F -do -finite_field_activity -cheat_sheet_GF -end
	pdflatex GF_16.tex
	open GF_16.pdf




F_16_tables:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 16 -end \
		-with F -do -finite_field_activity -export_tables -end
	$(ORBITER) -v 3 \
		-define all_one -vector -repeat 1 16 -end \
		-draw_matrix -input_csv_file GF_q16_table_add.csv \
			-box_width 40 -bit_depth 24 \
			-partition 3 all_one all_one \
		-end \
		-draw_matrix -input_csv_file GF_q16_table_mul.csv \
			-box_width 40 -bit_depth 24 \
			-partition 3 all_one all_one \
		-end
	convert GF_q16_table_add_draw.bmp GF_q16_table_add_draw.png
	convert GF_q16_table_mul_draw.bmp GF_q16_table_mul_draw.png



F_64:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 64 -end \
		-with F -do -finite_field_activity -cheat_sheet_GF -end
	pdflatex GF_64.tex
	open GF_64.pdf



nth_roots_63:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-with F -do -finite_field_activity \
			-nth_roots 63 \
		-end
	pdflatex Nth_roots_q2_n63.tex
	open Nth_roots_q2_n63.pdf


F8_F2_field_reduction:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 8 -end \
		-define v -vector -loop 0 8 1 -end \
		-define C -code -field F -Reed_Solomon 7 3 -end \
		-with F -do \
		-finite_field_activity \
		-field_reduction "F8_to_F2" \
			2 1 8 v \
		-end
	$(ORBITER) -v 2 \
		-draw_matrix -input_csv_file F8_to_F2.csv \
		-box_width 40 -bit_depth 24 \
		-partition 4 "3" "3,3,3,3,3,3,3,3" -end
	convert F8_to_F2_draw.bmp F8_to_F2_draw.png
	open F8_to_F2_draw.png


F_4096:
	$(ORBITER) -v 4 \
		-define F -finite_field -q 4096 \
			-compute_related_fields \
		-end \
		-with F -do -finite_field_activity -cheat_sheet_GF -end
	pdflatex GF_4096.tex
	open GF_4096.pdf



# 67^2 = 4489

F_4489:
	$(ORBITER) -v 4 \
		-define F -finite_field -q 4489 -without_tables -end \


# ToDo error message 
#finite_field::alpha_power !f_has_table

F_2_power_24:
	$(ORBITER) -v 4 \
		-define F -finite_field -q 16777216 \
			-compute_related_fields \
			-without_tables \
		-end \
		-with F -do -finite_field_activity \
			-cheat_sheet_GF \
		-end
	pdflatex GF_16777216.tex
	open GF_16777216.pdf


###############################################################################
# Section 3.4: Linear Algebra over Finite Fields


SECTION_LINEAR_ALGEBRA:


test_3_4:
	make RREF
	make RREF_V7
	make nullspace
	make RREF_RS_6_4_7
	make eigenstuff
	make classes_GL_3_2
	make classes_GL_4_2


RREF:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -field F -format 2 \
			-dense "1,1,1,1,0,1,1,0,0,1" \
		-end \
		-with F -do -finite_field_activity \
		-RREF v -normalize_from_the_right \
		-end


RREF_V7:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 7 -end \
		-define V -vector -format 7 \
			-dense $(V7_VANDERMONDE_EXTENDED) \
		-end \
		-with F -do -finite_field_activity \
			-RREF V \
		-end



nullspace:
	$(ORBITER) -v 2 \
		-define F2 -finite_field -q 2 -end \
		-define v -vector -field F2 -format 2 \
			-dense "1,1,1,1,0,1,1,0,0,1" \
		-end \
		-with F2 -do \
		-finite_field_activity \
			-nullspace v \
			-normalize_from_the_right \
		-end

RREF_RS_6_4_7:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 7 -end \
		-define v -vector -field F -format 4 \
			-compact $(CODE_RS_6_4_7) \
		-end \
		-with F -do \
		-finite_field_activity -RREF v -end



## these are global algebra functions:


eigenstuff:
	$(ORBITER) -v 6 \
		-define F -finite_field -q 5 -end \
		-eigenstuff F 4 "0,1,0,2,0,1,2,1,4,2,3,1,2,0,4,3" 

classes_GL_3_2:
	$(ORBITER) -v 7 \
		-define F -finite_field -q 2 -end \
		-all_rational_normal_forms F 3 
	pdflatex Class_reps_GL_3_2.tex
	open Class_reps_GL_3_2.pdf


classes_GL_4_2:
	$(ORBITER) -v 7 \
		-define F -finite_field -q 2 -end \
		-all_rational_normal_forms F 4 
	pdflatex Class_reps_GL_4_2.tex
	open Class_reps_GL_4_2.pdf


###############################################################################
# Section 3.5: Advanced Topics in finite fields



SECTION_ADVANCED_TOPICS_IN_FINITE_FIELDS:


test_3_5:
	make normal_basis_2_3
	make normal_basis_2_6
	make F8_over_F2_field_reduction
	make F_64_over_F8_field_reduction
	make F_64_over_F4_field_reduction
	make F_64_over_F2_field_reduction
	make F_8_Nth_roots_21
	make F_8_vandermonde
	make F_1024_vandermonde
	make NTT_k4_q17.cpp
	make F_17_NTT_compile



normal_basis_2_3:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do -finite_field_activity \
		-normal_basis 3 -end


normal_basis_2_6:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do -finite_field_activity \
		-normal_basis 6 -end



F8_over_F2_field_reduction:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 8 -end \
		-loop L 0 8 1 \
			-with F -do \
			-finite_field_activity \
				-field_reduction "F8_red_%L" 2 1 1 "%L" \
			-end \
		-end_loop L
	$(ORBITER) -v 2 \
		-loop L 0 8 1 \
			-draw_matrix \
				-input_csv_file F8_red_%L.csv \
				-box_width 40 -bit_depth 24 \
				-partition 4 3 3 \
			-end \
		-end_loop L
	#pdflatex field_reduction_Q8_q2_5_7.tex




F_64_over_F8_field_reduction:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 64 -end \
		-define elts -vector -field F -loop 0 64 1 -end \
		-with F -do \
		-finite_field_activity -field_reduction "F64_over_F8" 8 8 8 \
			elts -end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file F64_over_F8.csv \
		-box_width 40 -bit_depth 24 \
		-partition 4 "2,2,2,2,2,2,2,2" "2,2,2,2,2,2,2,2" -end
	open F64_over_F8_draw.bmp
	#pdflatex field_reduction_Q64_q8_8_8.tex
	#open field_reduction_Q64_q8_8_8.pdf


F_64_over_F4_field_reduction:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 64 -end \
		-define elts -vector -field F -loop 0 64 1 -end \
		-with F -do \
		-finite_field_activity \
			-field_reduction "F64_over_F4" 4 8 8 elts -end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file F64_over_F4.csv \
		-box_width 40 -bit_depth 24 \
		-partition 4 "3,3,3,3,3,3,3,3" "3,3,3,3,3,3,3,3" -end
	open F64_over_F4_draw.bmp
	#pdflatex field_reduction_Q64_q4_8_8.tex
	#open field_reduction_Q64_q4_8_8.pdf


F_64_over_F2_field_reduction:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 64 -end \
		-define elts -vector -field F -loop 0 64 1 -end \
		-with F -do \
		-finite_field_activity \
			-field_reduction "F64_over_F2" 2 8 8 elts -end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file F64_over_F2.csv \
		-box_width 40 -bit_depth 24 \
		-partition 4 "6,6,6,6,6,6,6,6" "6,6,6,6,6,6,6,6" -end
	open F64_over_F2_draw.bmp
	#pdflatex field_reduction_Q64_q2_8_8.tex
	#open field_reduction_Q64_q2_8_8.pdf





F_8_Nth_roots_21:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 8 -override_polynomial 11 -end \
		-with F -do -finite_field_activity \
			-nth_roots 21 \
		-end
	pdflatex Nth_roots_q8_n21.tex
	open Nth_roots_q8_n21.pdf




F_8_vandermonde:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 8 -end \
		-with F -do -finite_field_activity \
			-Vandermonde_matrix \
		-end



F_1024_vandermonde:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 1024 -end \
		-with F -do -finite_field_activity \
			-Vandermonde_matrix \
		-end
	#rm Vandermonde_1024.csv
	#rm Vandermonde_inv_1024.csv

#User time: 0:46




NTT_k4_q17.cpp:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 17 -end \
		-with F -do -coding_theoretic_activity \
			-NTT 4 17 \
		-end

F_17_NTT_compile: NTT_k4_q17.cpp
	$(MY_CPP)  NTT_k4_q17.cpp $(CPPFLAGS) \
		$(LIB) $(LFLAGS) -o NTT_k4_q17.out
	./NTT_k4_q17.out

F64_1:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 64 -override_polynomial 97 -end \
		-with F -do -finite_field_activity \
			-nth_roots 7 \
		-end
	pdflatex Nth_roots_q64_n7.tex
	open Nth_roots_q64_n7.pdf


###############################################################################
# Section 3.6: Basic Ring Theory



SECTION_BASIC_RING_THEORY:


test_3_6:
	make Polynomial_ring



Polynomial_ring:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 4 -end \
		-define R -polynomial_ring -field F \
			-number_of_variables 4 \
			-homogeneous_of_degree 3 \
			-variables "x0,x1,x2,x3" "x_0,x_1,x_2,x_3" \
		-end




###############################################################################
# Chapter 4 - Geometry
###############################################################################


###############################################################################
# Section 4.1: Finite Projective Spaces

SECTION_FINITE_PROJECTIVE_SPACES:


test_4_1:
	make PG_3_2_easy
	make PG_1_16
	make PG_2_4
	make PG_2_13
	make PG_2_64
	make PG_3_2
	make PG_3_4
	make PG_3_5
	make PG_3_7
	make PG_3_8
	make PG_3_16
	make PG_3_25
	make PG_4_3
	make PG_8_2


PG_3_2_easy:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define P -projective_space -n 3 -field F -end




PG_1_16:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 16 -end \
		-define P -projective_space -n 1 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-cheat_sheet \
		-end
	pdflatex PG_1_16.tex 
	open PG_1_16.pdf


PG_2_4:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-cheat_sheet \
		-end
	pdflatex PG_2_4.tex 
	open PG_2_4.pdf




PG_2_13:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 13 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-cheat_sheet \
		-end
	pdflatex PG_2_13.tex 
	open PG_2_13.pdf




PG_2_64:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 64 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-cheat_sheet \
		-end
	pdflatex PG_2_64.tex 
	open PG_2_64.pdf



PG_3_2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-cheat_sheet \
		-end
	pdflatex PG_3_2.tex 
	open PG_3_2.pdf


PG_3_4:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-cheat_sheet \
		-end
	pdflatex PG_3_4.tex 
	open PG_3_4.pdf

PG_3_5:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 5 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-cheat_sheet \
		-end
	pdflatex PG_3_5.tex 
	open PG_3_5.pdf


PG_3_7:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 7 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-cheat_sheet \
		-end
	pdflatex PG_3_7.tex 
	open PG_3_7.pdf




PG_3_8:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-cheat_sheet \
		-end
	pdflatex PG_3_8.tex 
	open PG_3_8.pdf


PG_3_16:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 16 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-cheat_sheet \
		-end
	pdflatex PG_3_16.tex 
	open PG_3_16.pdf




PG_3_25:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 25 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-cheat_sheet \
		-end
	pdflatex PG_3_25.tex 
	open PG_3_25.pdf




PG_4_3:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 3 -end \
		-define P -projective_space -n 4 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-cheat_sheet \
		-end
	pdflatex PG_4_3.tex 
	open PG_4_3.pdf


PG_8_2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define P -projective_space -n 8 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-cheat_sheet \
		-end
	pdflatex PG_8_2.tex 
	open PG_8_2.pdf




###############################################################################
# Section 4.2: Indexing Points

SECTION_INDEXING_POINTS:

test_4_2:
	make PG_2_4_rank_point
	make PG_2_4_unrank_point
	make elliptic_curve_b1_c3_q11.txt
	make PG_2_2_incidence_matrix
	make PG_2_4_incidence_matrix
	make PG_2_8_incidence_matrix


PG_2_4_rank_point:
	$(ORBITER) -v 2 \
		-define v -vector -dense "3,3,1" -format 1 -end \
		-define F -finite_field -q 4 -end \
		-with F -do -finite_field_activity \
			-rank_point_in_PG v -end

# geometry_global::do_rank_point_in_PG coeff: ( 3, 3, 1 ) has rank 20

PG_2_4_unrank_point:
	$(ORBITER) -v 2 \
		-define v -vector -dense "19,20" -end \
		-define F -finite_field -q 4 -end \
		-with F -do -finite_field_activity \
			-unrank_point_in_PG 2 v -end


elliptic_curve_b1_c3_q11.txt:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 11 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define EC -geometric_object P \
			-elliptic_curve 1 3 \
		-end \
		-with EC -do -combinatorial_object_activity -save \
		-end



PG_2_2_incidence_matrix:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-export_point_line_incidence_matrix \
		-end
	$(ORBITER) -v 2 \
		-define all_one -vector -repeat 1 7 -end \
		-draw_matrix \
			-input_csv_file PG_n2_q2_incidence_matrix.csv \
			-box_width 20 -bit_depth 8 \
			-partition 3 \
				all_one all_one \
		-end
	open PG_n2_q2_incidence_matrix_draw.bmp


PG_2_4_incidence_matrix:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-export_point_line_incidence_matrix \
		-end
	$(ORBITER) -v 2 \
		-define all_one -vector -repeat 1 21 -end \
		-draw_matrix \
			-input_csv_file PG_n2_q4_incidence_matrix.csv \
			-box_width 20 -bit_depth 8 \
			-partition 3 \
				all_one all_one \
		-end
	open PG_n2_q4_incidence_matrix_draw.bmp

# writes PG_n2_q4_incidence_matrix.csv



PG_2_8_incidence_matrix:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-export_point_line_incidence_matrix \
		-end
	$(ORBITER) -v 2 \
		-define all_one -vector -repeat 1 73 -end \
		-draw_matrix \
			-input_csv_file PG_n2_q8_incidence_matrix.csv \
			-box_width 20 -bit_depth 8 \
			-partition 3 \
				all_one all_one \
		-end
	open PG_n2_q8_incidence_matrix_draw.bmp





###############################################################################
# Section 4.3: Finite Desarguesian Projective Planes


SECTION_FINITE_DESARGUESIAN_PROJECTIVE_PLANES:


test_4_3:
	make PG_2_16
	make PG_2_4_with_decomposition
	make PG_2_4_incma_cyclic
	make PG_2_4_incma_singer_sub_3
	make PG_2_4_incma_singer_sub_7


PG_2_16:
	$(ORBITER) -v 2 \
		-draw_options -xin 20000 -yin 20000 \
		-radius 200 -line_width 0.3 -nodes_empty -end \
		-define F -finite_field -q 16 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-cheat_sheet \
		-end
	pdflatex PG_2_16.tex 
	open PG_2_16.pdf





PG_2_4_with_decomposition:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-decomposition_by_element_PG \
			1 "0,1,0, 0,0,1, 2,1,1, 0" \
			"PG_2_4_singer" \
		-end
	pdflatex PG_2_4_singer.tex
	open PG_2_4_singer.pdf


#PG_2_4_singer_incma_cyclic.csv
#PG_2_4_singer_incma_subgroup_index_3.csv
#PG_2_4_singer_incma_subgroup_index_7.csv



PG_2_4_incma_cyclic:
	$(ORBITER) -v 2 \
		-list_arguments \
		-define R -vector -repeat 1 21 -end \
		-define C -vector -repeat 1 21 -end \
		-draw_matrix \
		-input_csv_file PG_2_4_singer_incma_cyclic.csv \
		-box_width 40 -bit_depth 24 \
		-partition 3 R C \
		-end
	open PG_2_4_singer_incma_cyclic_draw.bmp


PG_2_4_incma_singer_sub_3:
	$(ORBITER) -v 2 \
		-list_arguments \
		-define R -vector -repeat 3 7 -end \
		-define C -vector -repeat 3 7 -end \
		-draw_matrix \
		-input_csv_file PG_2_4_singer_incma_subgroup_index_3.csv \
		-box_width 40 -bit_depth 24 \
		-partition 3 R C \
		-end
	open PG_2_4_singer_incma_subgroup_index_3_draw.bmp

PG_2_4_incma_singer_sub_7:
	$(ORBITER) -v 2 \
		-draw_matrix \
		-input_csv_file PG_2_4_singer_incma_subgroup_index_7.csv \
		-box_width 20 -bit_depth 24 \
		-partition 3 3,3,3,3,3,3,3 3,3,3,3,3,3,3 -end
	open PG_2_4_singer_incma_subgroup_index_7_draw.bmp










###############################################################################
# Section 4.4: The Grassmannian


SECTION_GRASSMANNIAN:



test_4_4:
	make GR_3_2_2
	make PG_3_3_rank_lines
	make PG_3_5_unrank_lines
	make planes_in_pencil





GR_3_2_2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-report_Grassmannian 2 \
		-end
	pdflatex Gr_3_2_2.tex 
	open Gr_3_2_2.pdf



PG_3_3_rank_lines:
	$(ORBITER) -v 2 \
		-define v1 -vector -format 3 \
		-dense "1,0,2,2,0,1,1,2, 1,0,2,0,0,1,1,2, 1,0,2,2,0,1,2,1" \
		-end \
		-define v2 -vector -format 3 \
		-dense "1,0,0,0,0,1,0,0, 1,0,0,0,0,0,0,1, 0,1,0,0,0,0,2,1" \
		-end \
		-define F -finite_field -q 3 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-rank_lines_in_PG v1 \
		-end \
		-with P -do \
		-projective_space_activity \
			-rank_lines_in_PG v2 \
		-end


PG_3_5_unrank_lines:
	$(ORBITER) -v 2 \
		-define v -vector \
			-dense "0,36,72,108,144,805" \
		-end \
		-define F -finite_field -q 5 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-unrank_lines_in_PG v \
		-end




planes_in_pencil:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-planes_through_line 0 \
		-end



###############################################################################
# Section 4.5: Algebraic Sets


SECTION_ALGEBRAIC_SETS:


test_4_5:
	make EC_11.txt
	make Hirschfeld_surface_q4.txt
	make Hirschfeld_surface_q16.txt


EC_11.txt:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 11 -end \
		-define R -polynomial_ring -field F \
			-number_of_variables 3 \
			-homogeneous_of_degree 3 \
			-end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define EC -geometric_object P \
			-projective_variety R \
				"EC_11" "EC\_11" \
				$(EC_11_EQUATION) \
			-end \
		-with EC -do -combinatorial_object_activity -save \
		-end




Hirschfeld_surface_q4.txt:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-define R -polynomial_ring -field F \
			-number_of_variables 4 \
			-homogeneous_of_degree 3 \
			-end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define H4 -geometric_object P \
			-projective_variety R \
				"Hirschfeld_surface_q4" \
				"Hirschfeld\_surface\_q4" \
				$(HIRSCHFELD_SURFACE_EQUATION) \
			-end \
		-with H4 -do -combinatorial_object_activity -save \
		-end

# creates Hirschfeld_surface_q4.txt

Hirschfeld_surface_q16.txt:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 16 -end \
		-define R -polynomial_ring -field F \
			-number_of_variables 4 \
			-homogeneous_of_degree 3 \
			-end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define H16 -geometric_object P \
			-projective_variety R \
				"Hirschfeld_surface_q16" \
				"Hirschfeld\_surface\_q16" \
				$(HIRSCHFELD_SURFACE_EQUATION) \
			-end \
		-with H16 -do -combinatorial_object_activity -save \
		-end


# the coefficient vector is given as a list of pairs. 
# 165 = binomial(11,3)



###############################################################################
# Section 4.6: The Klein Quadric and Pluecker coordinates


SECTION_KLEIN_QUADRIC_AND_PLUECKER_COORDINATES:


test_4_6:
	make GR_4_2_2


GR_4_2_2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-report_Grassmannian 2 \
		-end
	pdflatex Gr_4_2_2.tex 
	open Gr_4_2_2.pdf


###############################################################################
# Section 4.7: Orthogonal spaces


SECTION_ORTHOGONAL_SPACES:


test_4_7:
	make Op_4_2
	make O_5_2_incidence_matrix.csv
	make Op_6_2
	make Op_6_2_incidence_matrix.csv
	make Op_6_2_with_group
	make Op_6_8
	make Op_8_2
	make Op_6_64
	#make Op_6_64_line_rank_problem
	make Op_6_64_line_rank
	make Op_6_64_report
	make elliptic_quadric_subspace
	make BLT_database_7_1
	make BLT_database_7_1_print
	make Doily_W_2



Op_4_2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define O -orthogonal_space 1 4 F -without_group -end \
		-with O -do -orthogonal_space_activity \
			-cheat_sheet_orthogonal -end
	pdflatex O_1_4_2_report.tex 
	open O_1_4_2_report.pdf


O_5_2_incidence_matrix.csv:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define O -orthogonal_space 0 5 F -without_group -end \
		-with O -do -orthogonal_space_activity \
			-export_point_line_incidence_matrix \
		-end
	$(ORBITER) -v 2 \
		-define all_one_r -vector -repeat 1 15 -end \
		-define all_one_c -vector -repeat 1 15 -end \
		-draw_matrix \
			-input_csv_file O_5_2_incidence_matrix.csv \
			-box_width 20 -bit_depth 8 \
			-partition 2 \
				all_one_r all_one_c \
		-end
	open O_5_2_incidence_matrix_draw.bmp

#O(5,2) projectively = Q(4,2) = (dual of) W(3,2) = W(3,2) 
# recall that W(3,2) and Q(4,q) are self dual if q is even


Op_6_2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define O -orthogonal_space 1 6 F -without_group -end \
		-with O -do -orthogonal_space_activity \
			-cheat_sheet_orthogonal -end
	pdflatex O_1_6_2_report.tex 
	open O_1_6_2_report.pdf


Op_6_2_incidence_matrix.csv:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define O -orthogonal_space 1 6 F -without_group -end \
		-with O -do -orthogonal_space_activity \
			-export_point_line_incidence_matrix \
		-end
	$(ORBITER) -v 2 \
		-define all_one_r -vector -repeat 1 35 -end \
		-define all_one_c -vector -repeat 1 105 -end \
		-draw_matrix \
			-input_csv_file Op_6_2_incidence_matrix.csv \
			-box_width 20 -bit_depth 8 \
			-partition 2 \
				all_one_r all_one_c \
		-end
	open Op_6_2_incidence_matrix_draw.bmp


Op_6_2_with_group:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define O -orthogonal_space 1 6 F -end \
		-with O -do -orthogonal_space_activity \
			-cheat_sheet_orthogonal -end
	pdflatex O_1_6_2_report.tex 
	open O_1_6_2_report.pdf

# problem:
# error message:
#stabilizer_chain_base_data::allocate_base_data degree is too large


Op_6_8:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 8 -end \
		-define O -orthogonal_space 1 6 F -without_group -end \
		-with O -do -orthogonal_space_activity \
			-cheat_sheet_orthogonal \
		-end
	pdflatex O_1_6_8_report.tex
	open O_1_6_8_report.pdf


Op_8_2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define O -orthogonal_space 1 8 F -without_group -end \
		-with O -do -orthogonal_space_activity \
			-cheat_sheet_orthogonal -end
	pdflatex O_1_8_2_report.tex 
	open O_1_8_2_report.pdf


Op_6_64:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 64 -end \
		-define O -orthogonal_space 1 6 F -without_group -end \
		-with O -do -orthogonal_space_activity \
			-cheat_sheet_orthogonal -end
	pdflatex O_1_6_64_report.tex 
	open O_1_6_64_report.pdf


# problem, because we are trying to create PGL(6,64):

Op_6_64_line_rank_problem:
	$(ORBITER) -v 4 \
		-define F -finite_field -q 64 -end \
		-define O -orthogonal_space 1 6 F -end \
		-with O -do -orthogonal_space_activity \
			-unrank_line_through_two_points 15447347 15225451 \
		-end

# use option -without_group to skip the group. This will work:

Op_6_64_line_rank:
	$(ORBITER) -v 4 \
		-define F -finite_field -q 64 -end \
		-define O -orthogonal_space 1 6 F -without_group -end \
		-with O -do -orthogonal_space_activity \
			-unrank_line_through_two_points 15447347 15225451 \
		-end

# this will create a basic report without the group:

Op_6_64_report:
	$(ORBITER) -v 4 \
		-define F -finite_field -q 64 -end \
		-define O -orthogonal_space 1 6 F -without_group -end \
		-with O -do -orthogonal_space_activity \
			-cheat_sheet_orthogonal \
		-end
	pdflatex O_1_6_64_report.tex
	open O_1_6_64_report.pdf


elliptic_quadric_subspace:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 5 -end \
		-define v -vector -format 4 \
			-dense "1,3,0,0,0,0, 0,0,1,0,0,0, 0,0,0,1,0,0, 0,0,0,0,1,1" \
		-end \
		-define O -orthogonal_space 1 6 F -end \
		-with O -do -orthogonal_space_activity \
			-intersect_with_subspace v \
		-end

#We found that the intersection contains 26 points: 
#( 2, 3, 1572, 100, 98, 116, 132, 1570, 1588, 1604, 1631, 1688, 1704, 1706, 1747, 1745, 1847, 1845, 1856, 1888, 1904, 1931, 1988, 2004, 2022, 2020 )



BLT_database_7_1:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 7 -end \
		-define P -projective_space -n 4 -field F -v 0 -end \
		-define S -geometric_object P \
			-BLT_database 1 \
		-end \
		-with S -do -combinatorial_object_activity -save \
		-end

# writes BLT_7_1.txt

BLT_database_7_1_print:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 7 -end \
		-define O -orthogonal_space 0 5 F -without_group -end \
		-define S -set -file_orbiter_format BLT_7_1.txt -end \
		-with O -do -orthogonal_space_activity \
			-print_points S -end
	pdflatex S_set_report.tex
	open S_set_report.pdf

Doily_W_2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define O -orthogonal_space 0 5 F -without_group -end \
		-define W2_points -set -loop 0 15 1 -end \
		-define W2_lines -set -loop 0 15 1 -end \
		-with O -do \
		-orthogonal_space_activity \
			-print_points W2_points \
		-end \
		-with O -do \
		-orthogonal_space_activity \
			-print_lines W2_lines \
		-end
	pdflatex W2_points_set_report.tex
	open W2_points_set_report.pdf
	pdflatex W2_lines_set_of_lines_report.tex
	open W2_lines_set_of_lines_report.pdf


# the output defines doily.csv





###############################################################################
# Section 4.8: Hermitian varieties


SECTION_HERMITIAN_VARIETIES:

test_4_8:
	make H_2_4
	make H_2_9
	make H_3_4


H_2_4:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-with F -do -finite_field_activity \
			-cheat_sheet_hermitian 2 -end
	pdflatex H_2_4.tex 
	open H_2_4.pdf


H_2_9:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 9 -end \
		-with F -do -finite_field_activity \
			-cheat_sheet_hermitian 2 -end
	pdflatex H_2_9.tex 
	open H_2_9.pdf


# 28 points: 6, 11, 9, 7, 14, 19, 17, 15, 80, 75, 78, 74, 35, 30, 33, 29, 62, 57, 60, 56, 26, 21, 24, 3, 37, 82, 64, 46 


H_3_4:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-with F -do -finite_field_activity \
			-cheat_sheet_hermitian 3 -end
	pdflatex H_3_4.tex 
	open H_3_4.pdf


# H_3_4 = the Hirschfeld surface


###############################################################################
# Section 4.9: Projective Space Advanced Topics


SECTION_PROJECTIVE_SPACE_ADVANCED_TOPICS:


test_4_9:
	make fixed_objects_2A
	make fixed_objects_2B
	make fixed_objects_2C
	make PG_2_2_rank_lines
	make PG_2_2_unrank_lines
	make trans
	make del_Pezzo_F13ab_report
	make del_Pezzo_F13a_points.txt
	#make del_Pezzo_169



fixed_objects_2A:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-report_fixed_objects \
				"1,0,0,0, 0,1,0,0, 0,0,1,0, 0,0,0,1, 1" \
				fix_structure_2A.tex \
		-end 
	pdflatex fix_structure_2A.tex
	open fix_structure_2A.pdf


fixed_objects_2B:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-report_fixed_objects \
				"1,0,0,0, 1,1,0,0, 0,0,1,0, 0,0,0,1, 0" \
				fix_structure_2B.tex \
		-end 
	pdflatex fix_structure_2B.tex
	open fix_structure_2B.pdf


fixed_objects_2C:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-report_fixed_objects \
				"1,0,0,0, 1,1,0,0, 0,0,1,0, 0,0,1,1, 0" \
				fix_structure_2C.tex \
		-end 
	pdflatex fix_structure_2C.tex
	open fix_structure_2C.pdf


PG_2_2_rank_lines:
	$(ORBITER) -v 2 \
		-define v -vector -format 4 \
		-dense "1,0,0, 0,1,0, 1,0,0, 0,0,1, 1,1,1, 0,1,0, 1,1,1, 0,0,1" \
		-end \
		-define F -finite_field -q 2 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-rank_lines_in_PG v \
		-end \


PG_2_2_unrank_lines:
	$(ORBITER) -v 2 \
		-define v -vector -format 4 \
		-dense "0,1,2,3,4,5,6" \
		-end \
		-define F -finite_field -q 2 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-unrank_lines_in_PG v \
		-end \


trans:
	$(ORBITER) -v 5 \
		-define F -finite_field -q 16 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-move_two_lines_in_hyperplane_stabilizer_text \
				"1,0,0,0, 0,0,0,1" "1,1,0,2, 0,0,1,0" \
				"1,0,0,0, 0,0,0,1" "0,1,0,1, 0,0,1,0" \
		-end


PG_2_3_plane_pencil:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-planes_through_line 0 \
		-end \


del_Pezzo_F13ab_report:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 13 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define f3 -formula \
			"del_Pezzo_F13a" "del\_Pezzo\_F13a" "x,y,z" \
			"x*x*x*x+y*y*y*y+z*z*z*z+8*x*x*y*y+8*x*x*z*z+8*y*y*z*z" \
		-define f4 -formula \
			"del_Pezzo_F13b" "del\_Pezzo\_F13b" "x,y,z" \
			"x*x*x*x+y*y*y*y+z*z*z*z-x*x*y*y" \
		-define del_Pezzo13 -collection "f3,f4" \
	-with P -do \
		-projective_space_activity \
		-analyze_del_Pezzo_surface del_Pezzo13 "" \
	-end
	pdflatex del_Pezzo_F13b_report.tex
	open del_Pezzo_F13b_report.pdf




del_Pezzo_F13a_points.txt:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 13 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define f1 -formula "del_Pezzo_F9" \
			"del\_Pezzo\_F9" "x,y,z" \
			"x*x*x*x+y*y*y*y+z*z*z*z" \
		-define f2 -formula "del_Pezzo_F11" \
			"del\_Pezzo\_F11" "x,y,z" \
			"x*x*x*x+y*y*y*y+z*z*z*z+x*x*y*y+x*x*z*z+y*y*z*z" \
		-define f3 -formula "del_Pezzo_F13a" \
			"del\_Pezzo\_F13a" "x,y,z" \
			"x*x*x*x+y*y*y*y+z*z*z*z+8*x*x*y*y+8*x*x*z*z+8*y*y*z*z" \
		-define f4 -formula "del_Pezzo_F13b" \
			"del\_Pezzo\_F13b" "x,y,z" \
			"x*x*x*x+y*y*y*y+z*z*z*z-x*x*y*y" \
		-define del_Pezzo9 -collection "f1" \
		-define del_Pezzo11 -collection "f2" \
		-define del_Pezzo13 -collection "f3,f4" \
	-with P -do \
	-projective_space_activity \
	-analyze_del_Pezzo_surface del_Pezzo13 "" \
	-end
	pdflatex del_Pezzo_F13a_report.tex
	pdflatex del_Pezzo_F13b_report.tex
	open del_Pezzo_F13a_report.pdf
	open del_Pezzo_F13b_report.pdf
	#dot -Tpng del_Pezzo_F13a.gv >del_Pezzo_F13a.png
	#open del_Pezzo_F13a.png

# writes del_Pezzo_F13a_points.txt


# takes long time to initialize the polarity in the projective space object

#projective_space::projective_space_init N_points=4855540

# slow because of polarity

del_Pezzo_169:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 169 -end \
		-define P -projective_space -n 3 -field F -end \
		-define f3 -formula "del_Pezzo_F169a" \
			"del\_Pezzo\_F169a" "x,y,z" \
			"x*x*x*x+y*y*y*y+z*z*z*z+8*x*x*y*y+8*x*x*z*z+8*y*y*z*z" \
		-define f4 -formula "del_Pezzo_F169b" \
			"del\_Pezzo\_F169b" "x,y,z" \
			"x*x*x*x+y*y*y*y+z*z*z*z-x*x*y*y" \
		-define del_Pezzo13 -collection "f3,f4" \
		-with P -do \
			-projective_space_activity \
			-analyze_del_Pezzo_surface del_Pezzo13 "" \
		-end
	pdflatex del_Pezzo_F169a_report.tex
	pdflatex del_Pezzo_F169b_report.tex
	open del_Pezzo_F169a_report.pdf
	open del_Pezzo_F169b_report.pdf




###############################################################################
# Section 4.10: Geometric Objects


SECTION_GEOMETRIC_OBJECTS:



test_4_10:
	make elliptic_quadric_ovoid_q8
	make ovoid_ST_q8
	make Baer_PG_2_4
	make Baer_PG_3_4
	make BLT_database_5_0
	make BLT_database_7_0
	make BLT_database_7_0_print
	make BLT_database_67_4
	make Doily_disjoint_sets_graph_cliques_3
	make Doily_disjoint_sets_graph_cliques_5
	make PG_3_2_test
	make Edge_curve_17
	make Edge_curve_17_line_type
	make Edge_curve_q23_line_type



elliptic_quadric_ovoid_q8:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define O -geometric_object P \
			-elliptic_quadric_ovoid \
		-end \
		-with O -do -combinatorial_object_activity -save \
		-end

#ovoid_q8.txt
# 65 points

ovoid_ST_q8:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define O -geometric_object P \
			-ovoid_ST \
		-end \
		-with O -do -combinatorial_object_activity -save \
		-end

#ovoid_ST_q8.txt


Baer_PG_2_4:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define O -geometric_object P \
			-Baer_substructure \
		-end \
		-with O -do -combinatorial_object_activity -save \
		-end

Baer_PG_3_4:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define O -geometric_object P \
			-Baer_substructure \
		-end \
		-with O -do -combinatorial_object_activity -save \
		-end

BLT_database_5_0:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 5 -end \
		-define P -projective_space -n 4 -field F -v 0 -end \
		-define O -geometric_object P \
			-BLT_database 0 \
		-end \
		-with O -do -combinatorial_object_activity -save \
		-end

# writes BLT_5_0.txt


BLT_database_7_0:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 7 -end \
		-define P -projective_space -n 4 -field F -v 0 -end \
		-define O -geometric_object P \
			-BLT_database 0 \
		-end \
		-with O -do -combinatorial_object_activity -save \
		-end

# writes BLT_7_0.txt


BLT_database_7_0_print:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 7 -end \
		-define P -projective_space -n 4 -field F -v 0 -end \
		-define Obj -geometric_object P \
			-BLT_database 0 \
		-end \
		-with Obj -do -combinatorial_object_activity -save \
		-end \
		-define O -orthogonal_space 0 5 F -without_group -end \
		-define BLT_7_0 -set -file_orbiter_format BLT_7_0.txt -end \
		-with O -do -orthogonal_space_activity \
			-print_points BLT_7_0 -end
	pdflatex BLT_7_0_set_report.tex
	open BLT_7_0_set_report.pdf


BLT_database_67_4:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 67 -end \
		-define P -projective_space -n 4 -field F -v 0 -end \
		-define Obj -geometric_object P \
			-BLT_database 4 \
		-end \
		-with Obj -do -combinatorial_object_activity -save \
		-end \
		-define O -orthogonal_space 0 5 F -without_group -end \
		-define BLT_67_4 -set -file_orbiter_format BLT_67_4.txt -end \
		-with O -do -orthogonal_space_activity \
			-print_points BLT_67_4 -end
	pdflatex BLT_67_4_set_report.tex
	open BLT_67_4_set_report.pdf








Doily_disjoint_sets_graph_cliques_3:
	echo $(DOILY) >doily.csv
	$(ORBITER) -v 2 \
		-define G -graph -disjoint_sets_graph \
			doily.csv \
		-end \
		-with G -do \
			-graph_theoretic_activity \
			-find_cliques \
				-target_size 3 \
				-output_file doily_cliques \
			-end \
		-end \
		-print_symbols
	$(ORBITER) -v 2 \
		-union doily.csv doily_cliques.txt doily_cliques_union.csv

# 80 cliques

Doily_disjoint_sets_graph_cliques_5:
	echo $(DOILY) >doily.csv
	$(ORBITER) -v 2 \
		-define G -graph -disjoint_sets_graph \
			doily.csv \
		-end \
		-with G -do \
			-graph_theoretic_activity \
			-find_cliques \
				-target_size 5 \
				-output_file doily_cliques_5 \
			-end \
		-end \
		-print_symbols

# 6 cliques
# doily_cliques_5.csv


PG_3_2_test:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-cheat_sheet \
		-end
	pdflatex PG_3_2.tex
	open PG_3_2.pdf


Edge_curve_17:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 17 -end \
		-define R -polynomial_ring -field F \
			-number_of_variables 3 \
			-homogeneous_of_degree 4 \
			-end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define C -geometric_object P \
			-projective_variety R \
				"Edge_q17" "Edge\_q17" \
				$(EDGE_CURVE_Q17_EQUATION) \
		-end \
		-with C -do -combinatorial_object_activity -save \
		-end

#Edge_q17.txt
#combinatorial_object_create::init created a set of size 12








Edge_curve_17_line_type:
	echo $(FILE_Q17) >edge_q17.csv
	$(ORBITER) -v 2 \
		-define F -finite_field -q 17 -end \
		-define R -polynomial_ring -field F \
			-number_of_variables 3 \
			-homogeneous_of_degree 4 \
			-end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define C -geometric_object P \
			-projective_variety R \
				"Edge_q17" "Edge\_q17" \
				$(EDGE_CURVE_Q17_EQUATION) \
			-end \
		-with C -do \
		-combinatorial_object_activity \
			-line_type \
		-end \
		-print_symbols

#( 4^6, 2^30, 1^132, 0^139 )


Edge_curve_q23_line_type:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 23 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define E -geometric_object P \
			-set $(EDGE_CURVE_Q23_AS_POINTS) \
		-end \
		-with E -do \
		-combinatorial_object_activity \
			-save \
		-end \
		-with E -do \
		-combinatorial_object_activity \
			-line_type \
		-end \
		-print_symbols











###############################################################################
# Chapter 5 - Group Theory
###############################################################################


###############################################################################
# Section 5.1: Permutation groups


SECTION_PERMUTATION_GROUPS:

test_5_1:
	make Cyclic_6
	make Cyclic_6_group_table
	make Symmetric_3
	make Symmetric_3_group_table
	make Symmetric_3_elements
	make Symmetric_3_long
	make Symmetric_4
	make Symmetric_4_group_table
	make Symmetric_4_long
	make Group_8_1
	make Group_8_2
	make Group_8_3
	make Group_8_4
	make Group_8_5
	make Group_M12


Cyclic_6:
	$(ORBITER) -v 3 \
		-define G -permutation_group -cyclic_group 6 -end \
		-with G -do \
			-group_theoretic_activity \
			-report \
		-end
	pdflatex C_6_report.tex
	open C_6_report.pdf


Cyclic_6_group_table:
	$(ORBITER) -v 3 \
		-define G -permutation_group -cyclic_group 6 -end \
		-with G -do \
		-group_theoretic_activity \
			-export_group_table \
		-end
	$(ORBITER) -v 2 \
		-define all_one_r -vector -repeat 1 6 -end \
		-define all_one_c -vector -repeat 1 6 -end \
		-draw_matrix \
			-input_csv_file C_6_group_table.csv \
			-box_width 50 -bit_depth 24 \
			-partition 3 all_one_r all_one_c \
		-end
	open C_6_group_table_draw.bmp


Symmetric_3:
	$(ORBITER) -v 3 \
		-define G -permutation_group -symmetric_group 3 -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex Sym_3_report.tex
	open Sym_3_report.pdf


Symmetric_3_group_table:
	$(ORBITER) -v 3 \
		-define G -permutation_group -symmetric_group 3 -end \
		-with G -do \
		-group_theoretic_activity \
			-export_group_table \
		-end
	$(ORBITER) -v 2 \
		-define all_one_r -vector -repeat 1 6 -end \
		-define all_one_c -vector -repeat 1 6 -end \
		-draw_matrix \
			-input_csv_file Sym_3_group_table.csv \
			-box_width 50 -bit_depth 24 \
			-partition 3 all_one_r all_one_c \
		-end
	open Sym_3_group_table_draw.bmp

Symmetric_3_elements:
	$(ORBITER) -v 3 \
		-define G -permutation_group -symmetric_group 3 -end \
		-with G -do \
		-group_theoretic_activity \
			-save_elements_csv "Symmetric3_elts.csv" \
		-end
	$(ORBITER) -v 2 \
		-define Sym3_elts -vector -load_csv_data_column \
			Symmetric3_elts.csv 1 -end \
		-save_matrix_csv Sym3_elts 
	$(ORBITER) -v 2 \
		-define all_one_r -vector -repeat 1 6 -end \
		-define all_one_c -vector -repeat 1 3 -end \
		-draw_matrix \
			-input_csv_file Sym3_elts_matrix.csv \
			-box_width 50 -bit_depth 8 \
			-partition 3 \
				all_one_r all_one_c \
		-end
	open Sym3_elts_matrix_draw.bmp

Symmetric_3_long:
	$(ORBITER) -v 3 \
		-define G -permutation_group -symmetric_group 3 -end \
		-with G -do \
		-group_theoretic_activity \
			-export_orbiter \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-print_elements_tex \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-save_elements_csv "Symmetric3_elts.csv" \
		-end
	$(ORBITER) -v 3 \
		-draw_options \
			-nodes \
			-embedded -radius 250 \
			-xin 10000 -yin 10000 \
			-xout 1000000 -yout 600000 \
			-scale 0.3 -line_width 1.0 \
		-end \
		-tree_draw -file Sym_3_elements_tree.txt -end
	$(ORBITER) -v 2 \
		-define M -vector -load_csv_data_column \
			Symmetric3_elts.csv 1 -end \
		-save_matrix_csv M 
	$(ORBITER) -v 2 \
		-define all_one_r -vector -repeat 1 6 -end \
		-define all_one_c -vector -repeat 1 3 -end \
		-draw_matrix \
			-input_csv_file M_matrix.csv \
			-box_width 50 -bit_depth 8 \
			-partition 3 \
				all_one_r all_one_c \
		-end
	pdflatex Sym_3_elements_tree_draw.tex
	open Sym_3_elements_tree_draw.pdf
	#pdflatex Perm3_report.tex
	#open Perm3_report.pdf


Symmetric_4:
	$(ORBITER) -v 3 \
		-define G -permutation_group -symmetric_group 4 -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex Sym_4_report.tex
	open Sym_4_report.pdf


Symmetric_4_group_table:
	$(ORBITER) -v 3 \
		-define G -permutation_group -symmetric_group 4 -end \
		-with G -do \
		-group_theoretic_activity \
			-export_group_table \
		-end
	$(ORBITER) -v 2 \
		-define all_one_r -vector -repeat 1 24 -end \
		-define all_one_c -vector -repeat 1 24 -end \
		-draw_matrix \
			-input_csv_file Sym_4_group_table.csv \
			-box_width 50 -bit_depth 24 \
			-partition 3 all_one_r all_one_c \
		-end
	open Sym_4_group_table_draw.bmp



Symmetric_4_long:
	$(ORBITER) -v 3 \
		-define G -permutation_group -symmetric_group 4 -end \
		-with G -do \
		-group_theoretic_activity \
			-export_orbiter \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-export_group_table \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-print_elements_tex \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-save_elements_csv "Sym_4_elts.csv" \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-export_inversion_graphs "Sym_4_inversion_graphs.csv" \
		-end
	$(ORBITER) -v 2 \
		-draw_options \
			-nodes \
			-embedded -radius 175 \
			-xin 10000 -yin 10000 \
			-xout 1500000 -yout 600000 \
			-scale 0.3 -line_width 1.0 \
		-end \
		-tree_draw -file Sym_4_elements_tree.txt -end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file Sym_4_group_table.csv \
		-box_width 50 -bit_depth 24 -end
	$(ORBITER) -v 2 \
		-define M -vector -load_csv_data_column \
			Sym_4_elts.csv 1 -end \
		-save_matrix_csv M 
	$(ORBITER) -v 2 \
		-define all_one_r -vector -repeat 1 24 -end \
		-define all_one_c -vector -repeat 1 4 -end \
		-draw_matrix \
			-input_csv_file M_matrix.csv \
			-box_width 50 -bit_depth 8 \
			-partition 3 \
				all_one_r all_one_c \
		-end
	pdflatex Sym_4_elements_tree_draw.tex
	#open Sym_4_elements_tree_draw.pdf



# C8:

Group_8_1:
	$(ORBITER) -v 2 \
		-define gens -vector -dense \
			"1,2,3,4,5,6,7,0" \
		-end \
		-define G -permutation_group -symmetric_group 8 \
			-subgroup_by_generators G1 8 1 gens -end \
		-with G -do \
		-group_theoretic_activity \
			-export_group_table \
		-end
	$(ORBITER) -v 2 \
		-define all_one_r -vector -repeat 1 8 -end \
		-define all_one_c -vector -repeat 1 8 -end \
		-draw_matrix \
			-input_csv_file \
				Sym_8_Subgroup_G1_8_group_table.csv \
			-box_width 50 -bit_depth 24 \
			-partition 3 all_one_r all_one_c \
		-end
	convert Sym_8_Subgroup_G1_8_group_table_draw.bmp \
		Sym_8_Subgroup_G1_8_group_table_draw.png
	open Sym_8_Subgroup_G1_8_group_table_draw.png



# C4C2:

Group_8_2:
	$(ORBITER) -v 2 \
		-define gens -vector -dense \
			"1,2,3,0,4,5, 0,1,2,3,5,4" \
		-end \
		-define G -permutation_group -symmetric_group 6 \
			-subgroup_by_generators G2 8 2 gens -end \
		-with G -do \
		-group_theoretic_activity \
			-export_group_table \
		-end
	$(ORBITER) -v 2 \
		-define all_one_r -vector -repeat 1 8 -end \
		-define all_one_c -vector -repeat 1 8 -end \
		-draw_matrix \
			-input_csv_file \
				Sym_6_Subgroup_G2_8_group_table.csv \
			-box_width 50 -bit_depth 24 \
			-partition 3 all_one_r all_one_c \
		-end
	convert Sym_6_Subgroup_G2_8_group_table_draw.bmp \
		Sym_6_Subgroup_G2_8_group_table_draw.png
	open Sym_6_Subgroup_G2_8_group_table_draw.png


# Group C2C2C2:

Group_8_3:
	$(ORBITER) -v 2 \
		-define gens -vector -dense \
			"1,0,2,3,4,5, 0,1,3,2,4,5, 0,1,2,3,5,4" \
		-end \
		-define G -permutation_group -symmetric_group 6 \
			-subgroup_by_generators G3 8 3 gens -end \
		-with G -do \
		-group_theoretic_activity \
			-export_group_table \
		-end
	$(ORBITER) -v 2 \
		-define all_one_r -vector -repeat 1 8 -end \
		-define all_one_c -vector -repeat 1 8 -end \
		-draw_matrix \
			-input_csv_file \
				Sym_6_Subgroup_G3_8_group_table.csv \
			-box_width 50 -bit_depth 24 \
			-partition 3 all_one_r all_one_c \
		-end
	convert Sym_6_Subgroup_G3_8_group_table_draw.bmp \
		Sym_6_Subgroup_G3_8_group_table_draw.png
	open Sym_6_Subgroup_G3_8_group_table_draw.png


# Diehedral group D4 of order 8:

Group_8_4:
	$(ORBITER) -v 2 \
		-define gens -vector -dense \
			"1,2,3,0, 0,3,2,1" \
		-end \
		-define G -permutation_group -symmetric_group 4 \
			-subgroup_by_generators G4 8 2 gens -end \
		-with G -do \
		-group_theoretic_activity \
			-export_group_table \
		-end
	$(ORBITER) -v 2 \
		-define all_one_r -vector -repeat 1 8 -end \
		-define all_one_c -vector -repeat 1 8 -end \
		-draw_matrix \
			-input_csv_file \
				Sym_4_Subgroup_G4_8_group_table.csv \
			-box_width 50 -bit_depth 24 \
			-partition 3 all_one_r all_one_c \
		-end
	convert Sym_4_Subgroup_G4_8_group_table_draw.bmp \
		Sym_4_Subgroup_G4_8_group_table_draw.png
	open Sym_4_Subgroup_G4_8_group_table_draw.png

# Quaternion group: 

Group_8_5:
	$(ORBITER) -v 2 \
		-define gens -vector -dense \
			"2,3,1,0,6,7,5,4, 4,5,7,6,1,0,2,3" \
		-end \
		-define G -permutation_group -symmetric_group 8 \
			-subgroup_by_generators G5 8 2 gens -end \
		-with G -do \
		-group_theoretic_activity \
			-export_group_table \
		-end
	$(ORBITER) -v 2 \
		-define all_one_r -vector -repeat 1 8 -end \
		-define all_one_c -vector -repeat 1 8 -end \
		-draw_matrix \
			-input_csv_file \
				Sym_8_Subgroup_G5_8_group_table.csv \
			-box_width 50 -bit_depth 24 \
			-partition 3 all_one_r all_one_c \
		-end
	convert Sym_8_Subgroup_G5_8_group_table_draw.bmp \
		Sym_8_Subgroup_G5_8_group_table_draw.png
	open Sym_8_Subgroup_G5_8_group_table_draw.png



# M12 of order 95040:
#
#(1,4)(3,10)(5,11)(6,12)
#(1,8,9)(2,3,4)(5,12,11)(6,10,7)
#[3,1,9,0,10,11,6,7,8,2,4,5]
#[7,2,3,1,11,9,5,8,0,6,4,10]




Group_M12:
	$(ORBITER) -v 2 \
		-define gens -vector -dense $(GENERATORS_M12) -end \
		-define G -permutation_group -symmetric_group 12 \
			-subgroup_by_generators M12 95040 2 gens -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex Sym_12_Subgroup_M12_95040_report.tex
	open Sym_12_Subgroup_M12_95040_report.pdf



###############################################################################
# Section 5.2: Linear Groups


SECTION_LINEAR_GROUPS:

test_5_2:
	make PGL_3_2
	make PGL_4_2
	make PGL_4_2_export
	make PGL_4_2_generated
	make L_5_3
	make L_4_5
	make PGL_4_5
	make PGGL_3_4
	make PGGL_3_8
	make AGL_1_27
	make AGGL_2_27
	make SP_4_2
	make PSP_4_4
	make PGO_5_2
	make PGGO_5_4
	make PGOp_6_2
	make PGOm_6_2
	make PSP_6_2
	make PGO_7_2
	make NullPolarity_6_2



PGL_3_2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 3 F -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_3_2_report.tex
	open PGL_3_2_report.pdf


PGL_4_2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 4 F -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_4_2_report.tex
	open PGL_4_2_report.pdf



PGL_4_2_export:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 4 F -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-export_orbiter \
		-end
	pdflatex PGL_4_2_report.tex
	open PGL_4_2_report.pdf

# created by PGL_4_2_export

PGL_4_2_generated:
	$(ORBITER) -v 2 \
		-define gens -vector -file PGL_4_2_gens.csv -end \
		-define G -permutation_group \
		-bsgs PGL_4_2 "{\rm PGL}(4,2)" 15 20160 "0,1,2,3" 6 gens -end \



L_5_3:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 3 -end \
		-define G -linear_group -PSL 5 F -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PSL_5_3_report.tex
	open PSL_5_3_report.pdf

#PSL(5,3): Order 237783237120 = 121 * 120 * 117 * 108 * 81 * 16



L_4_5:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 5 -end \
		-define G -linear_group -PSL 4 F -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PSL_4_5_report.tex
	open PSL_4_5_report.pdf

#PSL(4,5): Order 7254000000









PGL_4_5:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 5 -end \
		-define G -linear_group -PGL 4 F -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_4_5_report.tex
	open PGL_4_5_report.pdf



PGGL_3_4:
	$(ORBITER) -v 2 \
		-define G -linear_group -PGGL 3 4 -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
			-report_sylow \
			-report_classes \
		-end
	pdflatex PGGL_3_4_report.tex
	open PGGL_3_4_report.pdf



PGGL_3_8:
	$(ORBITER) -v 2 \
		-define G -linear_group -PGGL 3 8 -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
			-report_sylow \
			-report_classes \
		-end
	pdflatex PGGL_3_8_report.tex
	open PGGL_3_8_report.pdf




AGL_1_27:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 27 -end \
		-define G -linear_group -AGL 1 F -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex AGL_1_27_report.tex
	open AGL_1_27_report.pdf


AGGL_2_27:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 27 -end \
		-define G -linear_group -AGGL 2 F -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex AGGL_2_27_report.tex
	open AGGL_2_27_report.pdf




SP_4_2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -GL 4 F \
			-symplectic_group \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex GL_4_2_Sp_4_2_report.tex
	open GL_4_2_Sp_4_2_report.pdf

# order 720


PSP_4_4:
	$(ORBITER) -v 5 \
		-define F -finite_field -q 4 -end \
		-define G -linear_group -PGL 4 F \
			-symplectic_group \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_4_4_Sp_4_4_report.tex
	open PGL_4_4_Sp_4_4_report.pdf

#order 979200





PGO_5_2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGO 5 F -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGO_5_2_report.tex
	open PGO_5_2_report.pdf

PGGO_5_4:
	$(ORBITER) -v 2 \
		-define F4 -finite_field -q 4 -end \
		-define G -linear_group -PGGO 5 F4 -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGGO_5_4_report.tex
	open PGGO_5_4_report.pdf



PGOp_6_2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGOp 6 F -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGOp_6_2_report.tex
	open PGOp_6_2_report.pdf

PGOm_6_2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGOm 6 F -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGOm_6_2_report.tex
	open PGOm_6_2_report.pdf





# the following two groups are isomorphic:

PSP_6_2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 6 F \
			-symplectic_group \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_6_2_Sp_6_2_report.tex
	open PGL_6_2_Sp_6_2_report.pdf

# group order 1451520, acting on 63 points


PGO_7_2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGO 7 F -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGO_7_2_report.tex
	open PGO_7_2_report.pdf


# group order 1451520, acting on 63 points





NullPolarity_6_2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 6 F \
			-null_polarity_group \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_6_2_NullPolarity_6_2_report.tex
	open PGL_6_2_NullPolarity_6_2_report.pdf

# group order 23040, acting on 63 points



###############################################################################
# Section 5.3: Subgroups

SECTION_SUBGROUPS:


test_5_3:
	make C13
	make C13_generated
	make C13_as_subgroup
	make J1
	make PGL_3_11_singer
	make PGL_3_11_singer_and_frobenius
	make PG_2_4_order_21
	make quaternion
	make cube_group
	make tetra_group
	make Hesse_group
	make Weyl_E8
	make test_subgroup
	make coset_reps
	make coset_reps_read
	make SP_6_2_point_stab_subgroup
	make PGOp_6_2_report
	make PGOm_6_2_report
	make PGOm_6_2_export_magma
	make PGOp_6_2_point_stab_subgroup
	make PGOp_6_2_linear
	make PGOp_6_2_linear_stab_6




C13:
	$(ORBITER) -v 2 \
		-define gens -vector -dense $(GEN_C13) -end \
		-define G -permutation_group \
			-bsgs C13 C_{13} 13 13 0 1 \
				gens \
			-end \
		-with G -do \
		-group_theoretic_activity \
			-export_orbiter \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-export_group_table \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-save_elements_csv "C13_elts.csv" \
		-end
	pdflatex C13_report.tex
	open C13_report.pdf


C13_generated:
	$(ORBITER) -v 2 \
		-define gens -vector -file C13_gens.csv -end \
		-define G -permutation_group \
		-bsgs C13 "C_{13}" 13 13 "0" 1 gens -end \


C13_as_subgroup:
	$(ORBITER) -v 2 \
		-define G -permutation_group -symmetric_group 13 \
			-subgroup_by_generators C13 13 1 $(GEN_C13) -end \
		-with G -do \
		-group_theoretic_activity \
			-export_orbiter \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-save_elements_csv "C13_elts.csv" \
		-end
	#pdflatex Perm13_Subgroup_C13_13_report.tex
	#open Perm13_Subgroup_C13_13_report.pdf




J1:
	$(ORBITER) -v 2 \
		-define G -linear_group -PGL 7 11 -Janko1 -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_7_11_Subgroup_Janko1_report.tex
	open PGL_7_11_Subgroup_Janko1_report.pdf

PGL_3_11_singer:
	$(ORBITER) -v 2 \
		-define G -linear_group -PGL 3 11 -singer 19 -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_3_11_Singer_3_11_19_report.tex
	open PGL_3_11_Singer_3_11_19_report.pdf


PGL_3_11_singer_and_frobenius:
	$(ORBITER) -v 2 \
		-define G -linear_group -PGL 3 11 -singer_and_frobenius 19 -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
		pdflatex PGL_3_11_Singer_and_Frob3_11_19_report.tex
		open PGL_3_11_Singer_and_Frob3_11_19_report.pdf

PG_2_4_order_21:
	$(ORBITER) -v 2 \
		-define G -linear_group -PGL 3 4 -end \
		-with G -do \
		-group_theoretic_activity \
			-search_element_of_order 21 \
		-end




quaternion:
	$(ORBITER) -v 2 \
		-define G -linear_group -SL 2 3 \
		-subgroup_by_generators "quaternion" "8" 3 \
			"1,1,1,2, 2,1,1,1, 0,2,1,0" \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-print_elements_tex \
			-report_group_table \
			-report \
		-end
	pdflatex GL_2_3_Subgroup_quaternion_8_report.tex
	open GL_2_3_Subgroup_quaternion_8_report.pdf


cube_group:
	$(ORBITER) -v 2 \
		-define gens -vector -dense \
			"0,1,0,2,0,0,0,0,1, \
			0,0,1,0,1,0,2,0,0, \
			2,0,0,0,1,0,0,0,1" \
		-end \
		-define G -linear_group -GL 3 3 \
		-subgroup_by_generators "cube" "48" 3 \
			gens \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-print_elements_tex \
			-report \
		-end
	pdflatex GL_3_3_Subgroup_cube_48_report.tex
	open GL_3_3_Subgroup_cube_48_report.pdf


tetra_group:
	$(ORBITER) -v 3 \
		-define G -linear_group -GL 3 3 \
		-subgroup_by_generators "tetra" "12" 2 \
			"0,1,0,0,0,1,1,0,0, 0,0,1,2,0,0,0,2,0" \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-print_elements_tex \
			-report \
		-end
	pdflatex GL_3_3_Subgroup_tetra_12_report.tex
	open GL_3_3_Subgroup_tetra_12_report.pdf



Hesse_group:
	$(ORBITER) -v 3 \
		-define gens -vector -compact \
			$(GENERATORS_HESSE_GROUP) \
		-end \
		-define G -linear_group -PGGL 3 4 \
		-subgroup_by_generators "Hesse" "432" 7 gens \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-print_elements_tex \
			-report \
		-end
	pdflatex PGGL_3_4_Subgroup_Hesse_432_report.tex
	open PGGL_3_4_Subgroup_Hesse_432_report.pdf



Weyl_E8:
	$(ORBITER) -v 3 \
		-define gens -vector -dense \
			$(GENERATORS_WEYL_GROUP_E8) \
		-end \
		-define G -linear_group -GL 8 3 \
		-subgroup_by_generators \
			"Weyl_E8" "696729600" 2 gens  \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex GL_8_3_Subgroup_Weyl_E8_696729600_report.tex
	open GL_8_3_Subgroup_Weyl_E8_696729600_report.pdf

# group generators from http://www.math.rwth-aachen.de/~Gabriele.Nebe/LATTICES/E8.b.html



test_subgroup:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G1 -linear_group -PGOp 6 F -end \
		-define G2 -linear_group -PGL 6 F \
			-symplectic_group \
		-end \
		-with G1 -and G2 -do \
		-group_theoretic_activity \
			-is_subgroup_of \
		-end


coset_reps:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G1 -linear_group -PGOp 6 F -end \
		-define G2 -linear_group -PGL 6 F \
			-symplectic_group \
		-end \
		-with G1 -and G2 -do \
		-group_theoretic_activity \
			-coset_reps \
		-end
	pdflatex PGOp_6_2_coset_reps.tex
	open PGOp_6_2_coset_reps.pdf

coset_reps_read:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G1 -linear_group -PGOp 6 F -end \
		-define G2 -linear_group -PGL 6 F \
			-symplectic_group \
		-end \
		-define CR -vector_ge -action G2 \
			-read_csv \
			PGOp_6_2_coset_reps.csv Element \
		-end

SP_6_2_point_stab_subgroup:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 6 F \
			-symplectic_group \
		-end \
		-define G0 -modified_group -from G \
			-point_stabilizer 0 \
		-end \
		-with G0 -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_6_2_Sp_6_2_Stab0_report.tex
	open PGL_6_2_Sp_6_2_Stab0_report.pdf


# group of order 23040


PGOp_6_2_report:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGOp 6 F -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGOp_6_2_report.tex
	open PGOp_6_2_report.pdf

# group order 40320


PGOm_6_2_report:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGOm 6 F -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGOm_6_2_report.tex
	open PGOm_6_2_report.pdf



PGOm_6_2_export_magma:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGOm 6 F -end \
		-with G -do \
		-group_theoretic_activity \
			-export_magma \
		-end



PGOp_6_2_point_stab_subgroup:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGOp 6 F -end \
		-define G0 -modified_group -from G \
			-point_stabilizer 0 \
		-end \
		-with G0 -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGOp_6_2_report.tex
	open PGOp_6_2_report.pdf


# group of order 1152

PGOp_6_2_GENS="\
1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0, \
1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,0,1,0,0,1,0,0,1,0,1,0, \
1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,0, \
1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,1,0,0, \
1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,0,1, \
1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1,0,1,0,0,0,0,1,1,0,1,0,0,0,1,0,0,1,0,0, \
1,0,0,0,0,0,0,1,0,1,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1, \
0,1,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,1,1,0,0,1, \
0,0,1,1,1,1,1,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,0,1,0,1,0,1,1,0, \
0,0,0,0,1,0,1,0,1,1,1,1,1,0,1,0,1,0,1,0,0,1,1,0,1,0,0,0,0,0,1,1,1,1,1,0,"

PGOp_6_2_linear:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 6 F \
			-subgroup_by_generators PGOp_6_2 \
				40320 10 $(PGOp_6_2_GENS) \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_6_2_Subgroup_PGOp_6_2_40320_report.tex
	open PGL_6_2_Subgroup_PGOp_6_2_40320_report.pdf



PGOp_6_2_linear_stab_6:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 6 F \
			-subgroup_by_generators PGOp_6_2 \
				40320 10 $(PGOp_6_2_GENS) \
		-end \
		-define G6 -modified_group -from G \
			-point_stabilizer 6 \
		-end \
		-with G6 -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_6_2_Subgroup_PGOp_6_2_40320_Stab6_report.tex
	open PGL_6_2_Subgroup_PGOp_6_2_40320_Stab6_report.pdf


# group of order 1440, of index 28 in PGOp(6,2)



###############################################################################
# Section 5.4: Linear Groups, Advanced Topics


SECTION_LINEAR_GROUPS_ADVANCED_TOPICS:

test_5_4:
	make U_3_3
	make PGL_2_3
	make Co3
	#make Ree_27


U_3_3:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 9 \
			-override_polynomial "17" \
		-end \
		-define G -linear_group -PGL 3 F \
			-subgroup_by_generators \
			"U_3_3" "6048" 2 \
			"1,6,4, 5,0,6, 8,5,1, \
			6,2,1, 7,8,4, 0,6,6" \
			-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_3_9_Subgroup_U_3_3_6048_report.tex
	#open PGL_3_9_Subgroup_U_3_3_6048_report.pdf





PGL_2_3:
	$(ORBITER) -v 3 \
		-define G -linear_group -PGL 2 3 -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
			-report_group_table \
		-end
	pdflatex PGL_2_3_report.tex
	open PGL_2_3_report.pdf
	#pdflatex PGL_2_3_group_table_order_24.tex
	#open PGL_2_3_group_table_order_24.pdf
	#open PGL_2_3_report.pdf






#Co3 from Conway et al., 1985 (ATLAS)
#order = 495766656000
#Co3 from the paper by Suleiman and Wilson 1997


Co3:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define g1 -vector -field F -format 22 -compact $(CONWAY_GEN1) -end \
		-define g2 -vector -field F -format 22 -compact $(CONWAY_GEN2) -end \
		-define gens -vector -concatenate g1 -concatenate g2 -end \
		-define G -linear_group -PGL 22 2 \
			-subgroup_by_generators "Co3" "495766656000" 2 gens \
			-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_22_2_Subgroup_Co3_495766656000_report.tex
	#open PGL_22_2_Subgroup_Co3_495766656000_report.pdf

# needs a lot of memory to run!

Ree_27:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 27 \
			-override_polynomial "34" \
		-end \
		-define g1 -vector -field F -format 7 -dense $(Ree_gen1) -end \
		-define g2 -vector -field F -format 7 -dense $(Ree_gen2) -end \
		-define gens -vector -concatenate g1 -concatenate g2 -end \
		-define G -linear_group -PGL 7 F \
			-subgroup_by_generators "Ree_27" "10073444472" 2 gens \
			-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end

# needs a lot of memory to run!


###############################################################################
# Section 5.5: New Actions from Old


SECTION_NEW_ACTIONS_FROM_OLD:


test_5_5:
	make Symmetric_4_on_pairs
	make Group_M11
	make surface_q13_Eckardt
	make surface_q13_Eckardt_on_tritangent_planes
	make Hirschfeld_stab_projectivity_group
	make on_planes
	make on_planes_restricted
	make T3_on_tensors
	make T3r1
	make T4_on_tensors
	make T4r1
	#make PGGL_2_8_on_conic
	make PGL_4_2_wd
	make PGL_4_2_wd_reverse




Symmetric_4_on_pairs:
	$(ORBITER) -v 3 \
		-define G -permutation_group -symmetric_group 4 -end \
		-define G_on_2subsets -modified_group -from G \
			-on_k_subsets 2 \
		-end \
		-with G_on_2subsets -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex Sym_4_OnSubsets_2_report.tex
	open Sym_4_OnSubsets_2_report.pdf


Group_M11:
	$(ORBITER) -v 2 \
		-define gens -vector -dense $(GENERATORS_M12) -end \
		-define G -permutation_group -symmetric_group 12 \
			-subgroup_by_generators M12 95040 2 gens -end \
		-define G0 -modified_group -from G \
			-point_stabilizer 0 \
		-end \
		-with G0 -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex Sym_12_Subgroup_M12_95040_Stab0_report.tex
	open Sym_12_Subgroup_M12_95040_Stab0_report.pdf



surface_q13_Eckardt:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 13 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define S -cubic_surface -space P -arc_lifting "0,1,2,3,43,113" -end \
		-with S -do \
		-cubic_surface_activity \
			-report \
		-end \
		-with S -do \
		-cubic_surface_activity \
			-export_something tritangent_planes \
		-end
	pdflatex surface_arc_lifting_trihedral_q13_arc0_1_2_3_43_113_report.tex
	open surface_arc_lifting_trihedral_q13_arc0_1_2_3_43_113_report.pdf


SURFACE_Q13_STAB_GENS="1,0,0,0,9,12,0,0,10,0,12,0,9,0,0,12, \
1,0,0,0,0,12,12,6,6,0,0,7,1,0,2,0, \
0,1,1,7,3,9,9,11,2,10,10,3,9,9,1,11"


surface_q13_Eckardt_on_tritangent_planes:
	$(ORBITER) -v 2 \
		-orbiter_path $(ORBITER_PATH) \
		-draw_options -embedded -end \
		-define F -finite_field -q 13 -end \
		-define gens -vector -field F \
			-dense $(SURFACE_Q13_STAB_GENS) \
		-end \
		-define TriP -set -file \
			surface_arc_lifting_trihedral_q13_arc0_1_2_3_43_113_tritangent_planes.csv \
		-end \
		-define G -linear_group -PGL 4 F \
			-subgroup_by_generators "stab" \
				24 3 gens \
			-end \
		-define G_on_planes -modified_group -from G \
			-on_k_subspaces 3 \
		-end \
		-define Gr -modified_group -from G_on_planes \
			-restricted_action TriP \
		-end \
		-with Gr -do \
		-group_theoretic_activity \
			-report \
		-end \
		-define Orb -orbits -group Gr \
			-on_points \
		-end \
		-with Orb -do -orbits_activity \
			-report \
		-end \
		-with Orb -do -orbits_activity \
			-draw_tree 0 \
		-end \
		-with Orb -do -orbits_activity \
			-draw_tree 1 \
		-end \
		-with Orb -do -orbits_activity \
			-stabilizer 36 \
		-end
	pdflatex PGL_4_13_Gr_4_3_res45_orbits_report.tex
	open PGL_4_13_Gr_4_3_res45_orbits_report.pdf


Hirschfeld_stab_projectivity_group:
	$(ORBITER) -v 4 \
		-orbiter_path $(ORBITER_PATH) \
		-define G -linear_group -PGGL 4 4 \
			-subgroup_by_generators "Hirschfeld_Stab" \
			51840 6 $(HIRSCHFELD_STAB_GENERATORS) \
			-end \
		-define G0 -modified_group -from G \
			-projectivity_subgroup \
		-end \
		-with G0 -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGGL_4_4_Subgroup_Hirschfeld_Stab_51840_ProjectivitySubgroup_report.tex
	open PGGL_4_4_Subgroup_Hirschfeld_Stab_51840_ProjectivitySubgroup_report.pdf






# related to planes_in_pencil:
# we are computing the action on the planes through the line 0.



on_planes:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define G -linear_group -PGL 4 F -end \
		-define G_on_planes -modified_group -from G \
			-on_k_subspaces 3 \
		-end \
		-with G_on_planes -do \
		-group_theoretic_activity \
			-apply "0,8,1,6,4,3,7,2,5" \
			"1,0,0,0, 0,1,0,0, 0,0,0,2, 0,0,1,1" \
		-end
	pdflatex PGL_4_8_Gr_4_3_apply.tex
	open PGL_4_8_Gr_4_3_apply.pdf


on_planes_restricted:
	$(ORBITER) -v 2 \
		-define planes -vector -dense "0,8,1,6,4,3,7,2,5" -end \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define G -linear_group -PGL 4 F \
			-subgroup_by_generators "cyclic" \
			9 1 "1,0,0,0, 0,1,0,0, 0,0,0,2, 0,0,1,1" \
			-end \
		-define G_on_planes -modified_group -from G \
			-on_k_subspaces 3 \
		-end \
		-define Gr -modified_group -from G_on_planes \
			-restricted_action planes \
		-end \
		-with Gr -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_4_8_Gr_4_3_report.tex
	open PGL_4_8_Gr_4_3_report.pdf


T3_on_tensors:
	$(ORBITER) -v 2 \
		-define G \
		-linear_group -GL_d_q_wr_Sym_n 2 2 3 \
			-on_tensors -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex GL_2_2_wreath_Sym3_report.tex
	open GL_2_2_wreath_Sym3_report.pdf
	


T3r1:
	$(ORBITER) -v 4 \
		-define G \
		-linear_group -GL_d_q_wr_Sym_n 2 2 3 \
			-on_rank_one_tensors -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex GL_2_2_wreath_Sym3_report.tex
	open GL_2_2_wreath_Sym3_report.pdf





T4_on_tensors:
	$(ORBITER) -v 4 \
		-define G \
		-linear_group -GL_d_q_wr_Sym_n 2 2 4 \
			-on_tensors -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex GL_2_2_wreath_Sym4_report.tex
	open GL_2_2_wreath_Sym4_report.pdf
	
	
T4r1:
	$(ORBITER) -v 4 \
		-define G \
		-linear_group -GL_d_q_wr_Sym_n 2 2 4 \
			-on_rank_one_tensors -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex GL_2_2_wreath_Sym4_report.tex
	open GL_2_2_wreath_Sym4_report.pdf


# ToDo

PGGL_2_8_on_conic:
	$(ORBITER) -v 4 \
		-define G -linear_group \
			-PGGL 2 8 -PGL2OnConic \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	#pdflatex PGGL_2_8_OnConic_2_8_report.tex
	#open PGGL_2_8_OnConic_2_8_report.pdf





PGL_4_2_wd:
	$(ORBITER) -v 3 \
		-define G -linear_group -PGL 4 2 -wedge_detached -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_6_2_Wedge_4_2_detached_report.tex
	open PGL_6_2_Wedge_4_2_detached_report.pdf




PGL_4_2_wd_reverse:
	$(ORBITER) -v 3 \
		-define G -linear_group -PGL 4 2 -wedge_detached -end \
		-with G -do \
		-group_theoretic_activity \
			-reverse_isomorphism_exterior_square \
		-end





###############################################################################
# Section 5.6: Group Theoretic Activities


SECTION_GROUP_THEORETIC_ACTIVITIES:


test_5_6:
	make PGL_3_2_elements
	make Sym_3_elements
	make Cycle_13_power
	make Cycle_12_power
	make PGL_3_4_singer
	make GL_2_8_multiply
	make GL_2_7_multiply
	make GL_2_7_inv
	make GL_2_7_power
	make PGL_3_2_classes
	make PGL_4_2_classes_based_on_normal_form
	make PGL_10_2_classes_based_on_normal_form
	make normal_forms_PGL_4_4
	make PGL_4_4_2A_rank
	make PGL_4_4_2A_unrank
	make PGL_4_5_3B_rank
	make PGL_4_5_3B_unrank
	make normal_forms_PGL_4_5
	make on_planes
	make PGL_4_2_random_element



PGL_3_2_elements:
	$(ORBITER) -v 5 \
		-define G -linear_group -PGL 3 2 -end \
		-with G -do \
		-group_theoretic_activity \
			-save_elements_csv "PGL_3_2_elements.csv" \
		-end

# creates PGL_3_2_elements.csv


Sym_3_elements:
	$(ORBITER) -v 3 \
		-define G -permutation_group -symmetric_group 3 -end \
		-with G -do \
		-group_theoretic_activity \
			-print_elements_tex \
		-end
	$(ORBITER) -v 2 \
		-draw_options \
			-nodes \
			-embedded -radius 250 \
			-xin 10000 -yin 10000 \
			-xout 1000000 -yout 600000 \
			-scale 0.3 -line_width 1.0 \
		-end \
		-tree_draw -file Sym_3_elements_tree.txt -end
	pdflatex Sym_3_elements_tree_draw.tex
	open Sym_3_elements_tree_draw.pdf



Cycle_13_power:
	$(ORBITER) -v 5 \
		-define G -permutation_group -symmetric_group 13 -end \
		-with G -do \
		-group_theoretic_activity \
			-consecutive_powers \
			"1,2,3,4,5,6,7,8,9,10,11,12,0" 13 \
		-end
	pdflatex Sym_13_all_powers.tex
	open Sym_13_all_powers.pdf


Cycle_12_power:
	$(ORBITER) -v 5 \
		-define G -permutation_group -symmetric_group 12 -end \
		-with G -do \
		-group_theoretic_activity \
			-consecutive_powers \
			"1,2,3,4,5,6,7,8,9,10,11,0" 12 \
		-end
	pdflatex Sym_12_all_powers.tex
	open Sym_12_all_powers.pdf




PGL_3_4_singer:
	$(ORBITER) -v 5 \
		-define G -linear_group -PGL 3 4 -end \
		-with G -do \
		-group_theoretic_activity \
			-find_singer_cycle \
		-end


GL_2_8_multiply:
	$(ORBITER) -v 5 \
		-define G -linear_group -GL 2 8 -end \
		-with G -do \
		-group_theoretic_activity \
			-multiply "0,1,2,3" "4,5,6,7" \
		-end
	pdflatex GL_2_8_mult.tex
	open GL_2_8_mult.pdf


GL_2_7_multiply:
	$(ORBITER) -v 5 \
		-define G -linear_group -GL 2 7 -end \
		-with G -do \
		-group_theoretic_activity \
			-multiply "0,1,2,3" "4,5,6,0" \
		-end
	pdflatex GL_2_7_mult.tex
	open GL_2_7_mult.pdf


GL_2_7_inv:
	$(ORBITER) -v 5 \
		-define G -linear_group -GL 2 7 -end \
		-with G -do \
		-group_theoretic_activity \
			-inverse "0,1,2,3" \
		-end
	pdflatex GL_2_7_inv.tex
	open GL_2_7_inv.pdf

GL_2_7_power:
	$(ORBITER) -v 5 \
		-define G -linear_group -GL 2 7 -end \
		-with G -do \
		-group_theoretic_activity \
			-raise_to_the_power "0,1,2,3" 2 \
		-end
	pdflatex GL_2_7_power.tex
	open GL_2_7_power.pdf


PGL_3_2_classes:
	$(ORBITER) -v 3 \
		-define G -linear_group -PGL 3 2 -end \
		-with G -do \
		-group_theoretic_activity \
			-classes_based_on_normal_form \
		-end
	pdflatex PGL_3_2_classes_normal_form.tex
	open PGL_3_2_classes_normal_form.pdf
	#pdflatex PGL_3_2_classes_out.tex
	#open PGL_3_2_classes_out.pdf

#		-classes \


PGL_4_2_classes_based_on_normal_form:
	$(ORBITER) -v 3 \
		-define G -linear_group -PGL 4 2 -end \
		-with G -do \
		-group_theoretic_activity \
			-classes_based_on_normal_form \
		-end
	pdflatex PGL_4_2_classes_normal_form.tex
	open PGL_4_2_classes_normal_form.pdf


PGL_10_2_classes_based_on_normal_form:
	$(ORBITER) -v 3 \
		-define G -linear_group -PGL 10 2 -end \
		-with G -do \
		-group_theoretic_activity \
			-classes_based_on_normal_form \
		-end
	pdflatex PGL_10_2_classes_normal_form.tex
	open PGL_10_2_classes_normal_form.pdf



normal_forms_PGL_4_4:
	$(ORBITER) -v 7 \
		-define G -linear_group -PGGL 4 4 -end \
		-with G -do \
		-group_theoretic_activity \
			-classes_based_on_normal_form \
		-end
	pdflatex PGGL_4_4_classes_normal_form.tex
	open PGGL_4_4_classes_normal_form.pdf




PGL_4_4_2A_rank:
	$(ORBITER) -v 6 \
		-define G -linear_group -PGGL 4 4 -end \
		-with G -do \
		-group_theoretic_activity \
			-element_rank \
			"1,0,0,0, 0,1,0,0, 0,0,1,0, 0,0,0,1, 1" \
		-end


PGL_4_4_2A_unrank:
	$(ORBITER) -v 6 \
		-define G -linear_group -PGGL 4 4 -end \
		-with G -do \
		-group_theoretic_activity \
			-element_unrank "1" \
		-end
		






PGL_4_5_3B_rank:
	$(ORBITER) -v 6 \
		-define G -linear_group -PGL 4 5 -end \
		-with G -do \
		-group_theoretic_activity \
			-element_rank "0,0,0,1, 2,3,0,1, 0,3,4,4, 0,1,2,1" \
		-end


PGL_4_5_3B_unrank:
	$(ORBITER) -v 6 \
		-define G -linear_group -PGL 4 5 -end \
		-with G -do \
		-group_theoretic_activity \
			-element_unrank "701459351" \
		-end
		



normal_forms_PGL_4_5:
	$(ORBITER) -v 7 \
		-define G -linear_group -PGL 4 5 -end \
		-with G -do \
		-group_theoretic_activity \
			-classes_based_on_normal_form \
		-end
	pdflatex PGL_4_5_classes_normal_form.tex
	open PGL_4_5_classes_normal_form.pdf



PGL_4_2_random_element:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 4 F -end \
		-with G -do \
		-group_theoretic_activity \
			-random_element r1 \
		-end \
	-print_symbols


#group order H = 20160
#Element :
#1 0 1 1 
#0 1 1 0 
#0 1 0 1 
#1 0 1 0 


#coded: ( 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0 )
#Element as permutation:
#(0, 13, 1, 7, 12, 4, 2, 10, 5, 11, 14, 9, 3, 6, 8)
#In list notation:
#( 13, 7, 10, 6, 2, 11, 8, 12, 0, 3, 5, 14, 4, 1, 9 )
#The rank of the element is 9883

#\{0,1,2,3,4\} -> \{13,7,10,6,2\} = \{2,6,7,10,13\}


###############################################################################
# Section 5.7: Group Theoretic Activities Based on Magma


SECTION_GROUP_THEORETIC_ACTIVITIES_BASED_ON_MAGMA:


test_5_7:
	make PSP_4_4_export_magma
	make PGGL_2_4_export_magma
	make Hirschfeld_stab_export_magma
	make PGGL_2_4_classes
	make PGL_7_2_classes
	make PGL_8_2_classes
	make Hirschfeld_stab_classes
	make PGGL_2_4_cent_2A
	make Normalizer_of_H5
	make PGGL_3_4_classes
	make classes_PGGL_4_4
	make subgroups_PGL_4_5
	make classes_PGL_4_5
	#make PGL_4_5_3B_class_again
	make search_primitive_poly_q5_deg3
	make GL_3_5_singer_power
	make PGL_4_5_norm_31
	make Normalizer_of_Z22_in_PGL_2_9
	make PGOm_6_2_classes
	make PGOm_6_2_Class_2A
	make PGOm_6_2_Class_2A_print
	make PGOm_6_2_Class_2A_centralizer
	make PGOm_6_2_Class_2A_centralizer_recover




PSP_4_4_export_magma:
	$(ORBITER) -v 5 \
		-define F -finite_field -q 4 -end \
		-define G -linear_group -PGL 4 F \
			-symplectic_group \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-export_magma \
		-end

PGGL_2_4_export_magma:
	$(ORBITER) -v 20 \
		-define F -finite_field -q 4 \
			-compute_related_fields \
		-end \
		-define G -linear_group -PGGL 2 F \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-export_magma \
		-end
	pdflatex PGGL_2_4_report.tex
	open PGGL_2_4_report.pdf




Hirschfeld_stab_export_magma:
	$(ORBITER) -v 9 \
		-orbiter_path $(ORBITER_PATH) \
		-define F -finite_field -q 4 \
			-compute_related_fields \
		-end \
		-define G -linear_group -PGGL 4 F \
			-subgroup_by_generators "Hirschfeld_Stab" \
			51840 6 $(HIRSCHFELD_STAB_GENERATORS) \
			-end \
		-with G -do \
		-group_theoretic_activity \
			-export_magma \
		-end


PGGL_2_4_classes:
	$(ORBITER) -v 3 \
		-define G \
		-linear_group -PGGL 2 4 \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-classes \
		-end
	$(MAGMA_PATH)magma PGGL_2_4_classes.magma
	$(ORBITER) -v 3 \
		-define G \
		-linear_group -PGGL 2 4 \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-classes \
		-end
	pdflatex PGGL_2_4_classes_out.tex
	open PGGL_2_4_classes_out.pdf
	open PGGL_2_4_classes_out.csv



PGL_7_2_classes:
	$(ORBITER) -v 3 \
		-define G \
		-linear_group -PGL 7 2 \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-classes \
		-end
	$(MAGMA_PATH)magma PGL_7_2_classes.magma
	$(ORBITER) -v 3 \
		-define G \
		-linear_group -PGL 7 2 \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-classes \
		-end


PGL_8_2_classes:
	$(ORBITER) -v 3 \
		-define G \
		-linear_group -PGL 8 2 \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-classes \
		-end
	$(MAGMA_PATH)magma PGL_8_2_classes.magma
	$(ORBITER) -v 3 \
		-define G \
		-linear_group -PGL 8 2 \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-classes \
		-end





Hirschfeld_stab_classes:
	$(ORBITER) -v 9 \
		-orbiter_path $(ORBITER_PATH) \
		-define G -linear_group -PGGL 4 4 \
			-subgroup_by_generators "Hirschfeld_Stab" \
			51840 6 $(HIRSCHFELD_STAB_GENERATORS) \
			-end \
		-with G -do \
		-group_theoretic_activity \
			-classes \
		-end
	$(ORBITER) -v 9 \
		-orbiter_path $(ORBITER_PATH) \
		-define G -linear_group -PGGL 4 4 \
			-subgroup_by_generators "Hirschfeld_Stab" \
			51840 6 $(HIRSCHFELD_STAB_GENERATORS) \
			-end \
		-with G -do \
		-group_theoretic_activity \
			-classes \
		-end
	pdflatex PGGL_4_4_Subgroup_Hirschfeld_Stab_51840_classes_out.tex
	open PGGL_4_4_Subgroup_Hirschfeld_Stab_51840_classes_out.pdf



PGGL_2_4_cent_2A:
	$(ORBITER) -v 3 \
		-define G \
		-linear_group -PGGL 2 4 -end \
		-with G -do \
		-group_theoretic_activity \
			-centralizer_of_element "2A" "1,0, 0,1, 1" \
			-report \
		-end
	$(MAGMA_PATH)magma element_2A_centralizer.magma
	$(ORBITER) -v 6 \
		-define G \
		-linear_group -PGGL 2 4 -end \
		-with G -do \
		-group_theoretic_activity \
			-centralizer_of_element "2A" "1,0, 0,1, 1" \
			-report \
		-end
	pdflatex PGGL_2_4_elt_2A_centralizer.tex
	open PGGL_2_4_elt_2A_centralizer.pdf
	


Normalizer_of_H5:
	$(ORBITER) -v 2 \
		-define G -permutation_group -symmetric_group 13 \
			-subgroup_by_generators H5 5 1 \
				$(GENERATORS_H5) -end \
		-with G -do \
		-group_theoretic_activity \
			-normalizer \
		-end
	pdflatex Sym_13_Subgroup_H5_5_normalizer.tex
	open Sym_13_Subgroup_H5_5_normalizer.pdf




PGGL_3_4_classes:
	$(ORBITER) -v 3 \
		-define G \
		-linear_group -PGGL 3 4 \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-classes \
		-end
	pdflatex PGGL_3_4_classes_out.tex
	open PGGL_3_4_classes_out.pdf







classes_PGGL_4_4:
	$(ORBITER) -v 3 \
		-magma_path $(MAGMA_PATH) \
		-define G -linear_group -PGGL 4 4 -end \
		-with G -do \
		-group_theoretic_activity \
			-classes \
		-end

# group order 1974067200 = 2^13 * 3^4 * 5^2 * 7 * 17





# the -find_subgroup command is too specialized

subgroups_PGL_4_5:
	$(ORBITER) -v 6 \
		-define G \
		-linear_group -PGL 4 5 -end \
		-with G -do \
		-group_theoretic_activity \
			-find_subgroup 3 \
		-end
	pdflatex PGL_4_5_report.tex
	open PGL_4_5_report.pdf


classes_PGL_4_5:
	$(ORBITER) -v 6 \
		-define G \
		-linear_group -PGL 4 5 -end \
		-with G -do \
		-group_theoretic_activity \
			-classes \
		-end
	pdflatex PGL_4_5_classes_out.tex
	open PGL_4_5_classes_out.pdf
	
# 163 classes


# two classes of elements of order 3
#Order of element = 3 Class size = 310000 Centralizer order = 93600 Normalizer order = 187200
#of order 3 and with 0 fixed points.
#0,1,0,2,0,1,2,1,4,2,3,1,2,0,4,3,

#Class size = 10075000 Centralizer order = 2880 Normalizer order = 5760
#of order 3 and with 6 fixed points.
#0,0,0,1,2,3,0,1,0,3,4,4,0,1,2,1,


PGL_4_5_3B_class_again:
	$(ORBITER) -v 6 \
		-define G -linear_group -PGL 4 5 -end \
		-with G -do \
		-group_theoretic_activity \
			-conjugacy_class_of \
			"3B" "0,0,0,1, 2,3,0,1, 0,3,4,4, 0,1,2,1" \
		-end

# very slow


search_primitive_poly_q5_deg3:
	$(ORBITER) -v 6 \
		-define F -finite_field -q 5 -end \
		-with F -do \
		-finite_field_activity \
		-get_primitive_polynomial 3 -end


#OK, we found an irreducible and primitive polynomial X^{3} + X^{2} + 2

GL_3_5_singer_power:
	$(ORBITER) -v 6 -define G \
		-linear_group -GL 3 5 -end \
		-with G -do \
		-group_theoretic_activity \
			-raise_to_the_power \
			"0,1,0, 0,0,1, 3,0,4" 31 \
		-end
	pdflatex GL_3_5_power.tex
	open GL_3_5_power.pdf



PGL_4_5_norm_31:
	$(ORBITER) -v 6 -define G \
		-linear_group -PGL 4 5 -end \
		-with G -do \
		-group_theoretic_activity \
			-normalizer_of_cyclic_subgroup "31" \
			"2,0,0,0, 0,0,1,0, 0,0,0,1, 0,3,0,4"
		-end
	pdflatex normalizer_of_31_in_PGL_4_5.tex
	open normalizer_of_31_in_PGL_4_5.pdf



Normalizer_of_Z22_in_PGL_2_9:
	$(ORBITER) -v 2 \
		-define G -linear_group -PGL 2 9 \
		-subgroup_by_generators Z22 4 2 \
			"2,0,0,1, 0,1,1,0" -end \
		-with G -do \
		-group_theoretic_activity \
			-normalizer \
		-end
	pdflatex PGL_2_9_Subgroup_Z22_4_normalizer.tex
	open PGL_2_9_Subgroup_Z22_4_normalizer.pdf




PGOm_6_2_classes:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGOm 6 F -end \
		-with G -do \
		-group_theoretic_activity \
			-classes \
		-end
	pdflatex PGOm_6_2_classes_out.tex
	open PGOm_6_2_classes_out.pdf

PGOM_6_2_CLASS_2A_REP="1,0,0,0,0,0,0,1,0,0,\
0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,0,1,0,0,1,0,0,1,0,1,0"

PGOm_6_2_Class_2A:
	$(ORBITER) -v 9 \
		-orbiter_path $(ORBITER_PATH) \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGOm 6 F -end \
		-with G -do \
		-group_theoretic_activity \
			-conjugacy_class_of "2A" $(PGOM_6_2_CLASS_2A_REP) \
		-end


#PGOm_6_2_class_of_2A.csv


FILE_NAME_PGOM_6_2_CLASS_2A="PGOm_6_2_class_of_2A.csv"

PGOm_6_2_Class_2A_print:
	$(ORBITER) -v 9 \
		-orbiter_path $(ORBITER_PATH) \
		-define PGOm_6_2_Class2A -vector \
			-file $(FILE_NAME_PGOM_6_2_CLASS_2A) -end \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGOm 6 F -end \
		-with G -do \
		-group_theoretic_activity \
			-element_processing \
				-input PGOm_6_2_Class2A \
				-print \
			-end \
		-end
	pdflatex PGOm_6_2_Class2A_elements.tex
	open PGOm_6_2_Class2A_elements.pdf


PGOM_6_2_CLASS_2A_REP_CLEAN="1,0,0,0,0,0,0,1,0,0,\
0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1"


PGOm_6_2_Class_2A_centralizer:
	$(ORBITER) -v 9 \
		-orbiter_path $(ORBITER_PATH) \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGOm 6 F -end \
		-with G -do \
		-group_theoretic_activity \
			-centralizer_of_element \
				"2Arep" $(PGOM_6_2_CLASS_2A_REP_CLEAN) \
		-end
	pdflatex PGOm_6_2_elt_2Arep_centralizer.tex
	open PGOm_6_2_elt_2Arep_centralizer.pdf

PGOM_6_2_CLASS_2A_CENTRALIZER_GENS="\
1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1, \
1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0, \
1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1, \
1,0,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,1, \
1,0,0,0,0,0,1,1,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,1,1, \
1,0,0,0,0,0,1,1,1,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1, \
0,1,1,1,1,0,1,0,1,1,1,0,1,1,0,1,1,0,1,1,1,0,1,0,0,0,0,0,1,0,1,1,1,1,1,1, \
1,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,1,1,0,0,0,0,0,1, \
0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1"


PGOm_6_2_Class_2A_centralizer_recover:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define Class2A_cent_gens -vector \
			-dense $(PGOM_6_2_CLASS_2A_CENTRALIZER_GENS) -end \
		-define G -linear_group -PGL 6 2 \
			-subgroup_by_generators "2ACent" \
			1440 9 Class2A_cent_gens \
			-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_6_2_Subgroup_2ACent_1440_report.tex
	open PGL_6_2_Subgroup_2ACent_1440_report.pdf


###############################################################################
# Section 5.8: The GAP Interface


SECTION_GAP_INTERFACE:

test_5_8:
	make Hirschfeld_stab_export_fining
	make Cyclic_6_canonical_image
	make Edge_qurve_q17_canonical_image


Hirschfeld_stab_export_gap:
	$(ORBITER) -v 9 \
		-orbiter_path $(ORBITER_PATH) \
		-define G -linear_group -PGGL 4 4 \
			-subgroup_by_generators "Hirschfeld_Stab" \
			51840 6 $(HIRSCHFELD_STAB_GENERATORS) \
			-end \
		-with G -do \
		-group_theoretic_activity \
			-export_gap \
		-end



Cyclic_6_canonical_image:
	$(ORBITER) -v 3 \
		-define G -permutation_group -cyclic_group 6 -end \
		-with G -do -group_theoretic_activity \
			-canonical_image 3,5 \
		-end



Edge_qurve_q17_canonical_image:
	$(ORBITER) -v 3 \
		-define G -linear_group -PGL 3 17 -end \
		-with G -do -group_theoretic_activity \
			-canonical_image $(EDGE_CURVE_Q17_AS_POINTS) \
		-end

#PGL_3_17_canonical_image.gap


###############################################################################
# Chapter 6 - Orbit Algorithms
###############################################################################


###############################################################################
# Section 6.1: Orbit Algorithms


SECTION_ORBIT_ALGORITHMS_SCHREIER_TREES:


test_6_1:
	make orbits_PGL_4_2_on_points_draw_tree
	make orbits_PGL_4_2_on_points_export_trees
	make T3r1_orbits
	#make T3r1_orbits_draw
	make 2C_orbit_under_PGGL_4_4_elements_coded.csv
	make orbits_on_conics_q13
	make orbits_cubic_curves_q2
	make orbits_cubic_curves_q2_with_draw_tree
	make poly_orbits_d3_n3_q2.csv
	make poly_orbits_d3_n3_q2_get_ranks
	make T4_orbits
	#make T4r1_orbits
	#make T4r1_orbits_draw
	make T4r1_orbits_4
	#make PGGL_2_8_on_conic_orbits
	make PGGL_7_8_orbits



orbits_PGL_4_2_on_points_draw_tree:
	$(ORBITER) -v 4 \
		-draw_options -embedded -end \
		-define G -linear_group -PGL 4 2 -end \
		-define Orb -orbits -group G \
			-on_points \
		-end \
		-with Orb -do -orbits_activity \
			-report \
		-end \
		-with Orb -do -orbits_activity \
			-export_something "orbit" 0 \
		-end
		-with Orb -do -orbits_activity \
			-draw_tree 0 \
		-end
	pdflatex PGL_4_2_orbits_report.tex
	open PGL_4_2_orbits_report.pdf


orbits_PGL_4_2_on_points_export_trees:
	$(ORBITER) -v 4 \
		-draw_options -embedded -end \
		-define G -linear_group -PGL 4 2 -end \
		-define Orb -orbits -group G \
			-on_points \
		-end \
		-with Orb -do -orbits_activity \
			-report \
		-end \
		-with Orb -do -orbits_activity \
			-export_trees \
		-end
	$(ORBITER) -v 3 \
		-draw_layered_graph \
			orbit_PGL_4_2_0.layered_graph \
		-radius 500 -spanning_tree -embedded \
			-line_width 1.1 -x_stretch 1.4 -scale 0.25 \
		-end
	pdflatex orbit_PGL_4_2_0_draw.tex
	open orbit_PGL_4_2_0_draw.pdf



T3r1_orbits:
	$(ORBITER) -v 4 \
		-draw_options -embedded -end \
		-define G \
		-linear_group -GL_d_q_wr_Sym_n 2 2 3 \
			-on_rank_one_tensors -end \
		-define Orb -orbits -group G \
			-on_points \
		-end \
		-with Orb -do -orbits_activity \
			-report \
		-end \
		-with Orb -do -orbits_activity \
			-draw_tree 0 \
		-end
	pdflatex GL_2_2_wreath_Sym3_orbit_0_tree.tex
	open GL_2_2_wreath_Sym3_orbit_0_tree.pdf


# ToDo: layered_graph file is not written

T3r1_orbits_draw:
	$(ORBITER) -v 3 \
		-draw_layered_graph \
			GL_2_2_wreath_Sym3_res27_0.layered_graph \
		-radius 500 -spanning_tree -embedded \
			-line_width 1.1 -x_stretch 1.4 -scale 0.25 \
		-end
	#pdflatex GL_2_2_wreath_Sym3_report.tex
	#open GL_2_2_wreath_Sym3_report.pdf
	pdflatex GL_2_2_wreath_Sym3_res27_0_draw.tex
	open GL_2_2_wreath_Sym3_res27_0_draw.pdf


# write GL_2_2_wreath_Sym3_res27_0.layered_graph



2C_orbit_under_PGGL_4_4_elements_coded.csv: 
	$(ORBITER) -v 6 \
		-define G -linear_group -PGGL 4 4 -end \
		-with G -do \
		-group_theoretic_activity \
			-conjugacy_class_of \
			"2C" "1,0,0,0, 1,1,0,0, 0,0,1,0, 0,0,1,1, 0" \
		-end

# class of size 64260
# creates:
# PGGL_4_4_class_of_2C.csv
# 1:33 on Mac
#User time: 2:59 on Mac
# now 1:02 on new Mac




orbits_on_conics_q13:
	$(ORBITER) -v 4 \
		-define G -linear_group -PGL 3 13 -end \
		-define Orb -orbits -group G \
			-on_polynomials 2 \
		-end
	#pdflatex poly_orbits_d2_n2_q13.tex
	#open poly_orbits_d2_n2_q13.pdf


orbits_cubic_curves_q2:
	$(ORBITER) -v 4 \
		-define G -linear_group -PGL 3 2 -end \
		-define Orb -orbits -group G \
			-on_polynomials 3 \
		-end
	#pdflatex poly_orbits_d3_n3_q2.tex
	#open poly_orbits_d3_n3_q2.pdf


orbits_cubic_curves_q2_with_draw_tree:
	$(ORBITER) -v 4 \
		-draw_options -yout 500000 -radius 150 -nodes_empty \
			-line_width 0.5 -y_stretch 0.25 -embedded -end \
		-define G -linear_group -PGL 3 2 -end \
		-define Orb -orbits -group G \
			-on_polynomials 3 \
		-end \
		-with Orb -do -orbits_activity \
			-draw_tree 6 \
		-end
	pdflatex PGL_3_2_orbit_6_tree.tex
	open PGL_3_2_orbit_6_tree.pdf




poly_orbits_d3_n3_q2.csv:
	$(ORBITER) -v 4 \
		-draw_options -yout 500000 -radius 15 -nodes_empty \
			-line_width 0.5 -y_stretch 0.25 -embedded -end \
		-define G -linear_group -PGL 4 2 -end \
		-define Orb -orbits -group G \
			-on_polynomials 3 \
		-end \
		-with Orb -do -orbits_activity \
			-report \
		-end \
		-with Orb -do -orbits_activity \
			-draw_tree 6 \
		-end
	pdflatex PGL_4_2_orbit_6_tree.tex
	open PGL_4_2_orbit_6_tree.pdf

#written file PGL_4_2_orbit_6_tree.tex of size 79891


poly_orbits_d3_n3_q2_get_ranks:
	$(ORBITER) -v 4 \
		-csv_file_select_cols poly_orbits_d3_n3_q2.csv 0
	#pdflatex poly_orbits_d3_n3_q2.tex
	#open poly_orbits_d3_n3_q2.pdf



T4_orbits:
	$(ORBITER) -v 4 \
		-define G \
		-linear_group -GL_d_q_wr_Sym_n 2 2 4 \
			-on_tensors -end \
		-define Orb -orbits -group G \
			-on_points \
		-end
	#pdflatex GL_2_2_wreath_Sym4_res65535_orbits.tex
	#open GL_2_2_wreath_Sym4_res65535_orbits.pdf
	#pdflatex GL_2_2_wreath_Sym4_report.tex
	#open GL_2_2_wreath_Sym4_report.pdf



# ToDo

T4r1_orbits:
	$(ORBITER) -v 4 \
		-define G -linear_group -GL_d_q_wr_Sym_n 2 2 4 \
			-on_rank_one_tensors -end \
		-define Orb -orbits -group G \
			-on_points \
		-end \
		-with Orb -do -orbits_activity \
			-export_trees \
		-end


# problem in export_trees


T4r1_orbits_draw:
	$(ORBITER) -v 3 \
		-draw_layered_graph \
			orbit_GL_2_2_wreath_Sym4_res81_0.layered_graph \
		-radius 400 -spanning_tree -embedded \
			-line_width 1.1 -x_stretch 2.5 -scale 0.15 \
		-end
	pdflatex orbit_GL_2_2_wreath_Sym4_res81_0_draw.tex
	open orbit_GL_2_2_wreath_Sym4_res81_0_draw.pdf


T4r1_orbits_4:
	$(ORBITER) -v 4 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label T4r1 -W \
			-draw_options -end \
		-end \
		-define G -linear_group -GL_d_q_wr_Sym_n 2 2 4 \
			-on_rank_one_tensors -end \
		-define Orb -orbits -group G \
			-on_subsets 4 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex T4r1_poset.tex
	open T4r1_poset.pdf



# ToDo

PGGL_2_8_on_conic_orbits:
	$(ORBITER) -v 4 \
		-define G \
		-linear_group -PGGL 2 8 -PGL2OnConic -end \
		-define Orb -orbits -group G \
			-on_points \
		-end

#any_group::init_linear_group !LG->f_has_strong_generators


# example from the Fining manual, page 107:

PGGL_7_8_orbits:
	$(ORBITER) -v 4 \
		-define G \
		-linear_group -PGGL 7 8 -end \
		-define Orb -orbits -group G \
			-on_points \
		-end

# 0:42






###############################################################################
# Section 6.2: Poset Classification


SECTION_POSET_CLASSIFICATION:

test_6_2:
	make poset_of_4subsets
	make poset_of_4subsets_draw
	make poset_of_5subsets
	make poset_of_5subsets_draw
	make Symmetric_4_on_pairs_poset
	make V_3_2_trivial
	make V_4_2_trivial


poset_of_4subsets:
	$(ORBITER) -v 3 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label poset_4 \
			-W -depth 4 \
		-end \
		-define G -permutation_group -identity_group 4 -end \
		-define Orb -orbits -group G \
			-on_subsets 4 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex poset_4_poset.tex
	open poset_4_poset.pdf



poset_of_4subsets_draw:
	$(ORBITER) -v 3 \
		-draw_layered_graph \
			poset_4_poset_lvl_4.layered_graph \
			-radius 300 -embedded -line_width 1.1 \
			-y_stretch 0.9 -scale 0.25 \
		-end
	pdflatex poset_4_poset_lvl_4_draw.tex
	open poset_4_poset_lvl_4_draw.pdf


poset_of_5subsets:
	$(ORBITER) -v 3 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label poset_5 \
			-W -depth 5 \
			-draw_options -radius 150 -end \
		-end \
		-define G -permutation_group -identity_group 5 -end \
		-define Orb -orbits -group G \
			-on_subsets 5 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex poset_5_poset.tex
	open poset_5_poset.pdf


poset_of_5subsets_draw:
	$(ORBITER) -v 3 \
		-draw_layered_graph \
			poset_5_poset_lvl_5.layered_graph \
			-radius 300 -embedded \
			-line_width 1.1 -y_stretch 0.9 \
			-scale 0.25 \
		-end
	pdflatex poset_5_poset_lvl_5_draw.tex
	open poset_5_poset_lvl_5_draw.pdf



Symmetric_4_on_pairs_poset:
	$(ORBITER) -v 3 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label Sym4_on2 \
			-W -depth 6 \
			-draw_options -radius 150 -end \
		-end \
		-define G -permutation_group -symmetric_group 4 -end \
		-define G_on_2subsets -modified_group -from G \
			-on_k_subsets 2 \
		-end \
		-define Orb -orbits -group G_on_2subsets \
			-on_subsets 6 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex Sym4_on2_poset.tex
	open Sym4_on2_poset.pdf


V_3_2_trivial:
	$(ORBITER) -v 5 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label V_3_2_trivial \
			-W -depth 3 \
			-draw_options \
				-radius 200 -embedded \
			-end \
		-end \
		-define G -linear_group -PGL 3 2 -identity_group -end \
		-define Orb -orbits -group G \
			-on_subspaces 3 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex PGL_3_2_Identity_3_2_poset.tex
	open PGL_3_2_Identity_3_2_poset.pdf



V_4_2_trivial:
	$(ORBITER) -v 5 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label V_4_2_trivial \
			-W -depth 3 \
			-draw_options \
				-radius 200 -embedded \
			-end \
		-end \
		-define G -linear_group -PGL 4 2 -identity_group -end \
		-define Orb -orbits -group G \
			-on_subspaces 4 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 



###############################################################################
# Section 6.3: Orbits on Subsets


SECTION_ORBITS_ON_SUBSETS:


test_6_3:
	make PG_2_2_subsets
	make PG_3_2_subsets
	make PGL_3_2_singer
	make PGL_3_2_on_lines
	make PGL_2_5_on_subsets
	make PGL_2_7_on_subsets
	make PGGL_2_8_on_subsets
	make PGGL_2_9_on_subsets
	make PGL_2_11_on_subsets
	make PGGL_2_16_on_subsets
	make PGGL_2_32_on_subsets
	make PG_3_4_subsets
	make PGGL_2_9_orbits
	make PGO_5_2_on_subsets



PG_2_2_subsets:
	$(ORBITER) -v 3 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label PGL_3_2 \
			-depth 7 \
			-draw_options \
				-radius 200 -embedded \
			-end \
		-end \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 3 F -end \
		-define Orb -orbits -group G \
			-on_subsets 7 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex PGL_3_2_poset_lvl_7.tex
	open PGL_3_2_poset_lvl_7.pdf
	pdflatex PGL_3_2_poset.tex
	open PGL_3_2_poset.pdf
	#pdflatex PGL_3_2_poset_detailed_lvl_7.tex
	#open PGL_3_2_poset_detailed_lvl_7.pdf


# PG(3,2) has 2^3+2^2+2^1+1 = 15 points:
# PG(3,3) has 3^3+3^2+3^1+1 = 27 + 9 + 3 + 1 = 40 points.





PG_3_2_subsets:
	$(ORBITER) -v 3 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label PGL_4_2 \
			-depth 15 \
			-draw_options \
				-radius 200 -embedded \
			-end \
		-end \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 4 F -end \
		-define Orb -orbits -group G \
			-on_subsets 15 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex PGL_4_2_poset.tex
	open PGL_4_2_poset.pdf

PGL_3_2_singer:
	$(ORBITER) -v 3 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label PGL_3_2_singer_1 \
			-W -depth 7 \
			-draw_options \
				-radius 200 -embedded \
			-end \
		-end \
		-define G -linear_group -PGL 3 2 -singer 1 -end \
		-define Orb -orbits -group G \
			-on_subsets 7 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex PGL_3_2_singer_1_poset.tex
	open PGL_3_2_singer_1_poset.pdf



PGL_3_2_on_lines:
	$(ORBITER) -v 3 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label PGL_3_2_lines \
			-W -depth 7 \
		-end \
		-define G -linear_group -PGL 3 2 -end \
		-define G_on_lines -modified_group -from G \
			-on_k_subspaces 2 \
		-end \
		-define Orb -orbits -group G_on_lines \
			-on_subsets 7 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex PGL_3_2_lines_poset.tex
	open PGL_3_2_lines_poset.pdf



PGL_2_5_on_subsets:
	$(ORBITER) -v 5 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label PGL_2_5 \
			-W -depth 6 \
		-end \
		-define G -linear_group -PGL 2 5 -end \
		-define Orb -orbits -group G \
			-on_subsets 6 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex PGL_2_5_poset.tex
	open PGL_2_5_poset.pdf

PGL_2_7_on_subsets:
	$(ORBITER) -v 10 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label PGL_2_7 \
			-W -depth 8 \
		-end \
		-define G -linear_group -PGL 2 7 -end \
		-define Orb -orbits -group G \
			-on_subsets 8 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex PGL_2_7_poset.tex
	open PGL_2_7_poset.pdf

PGGL_2_8_on_subsets:
	$(ORBITER) -v 10 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label PGGL_2_8 \
			-W -depth 9 \
		-end \
		-define G -linear_group -PGGL 2 8 -end \
		-define Orb -orbits -group G \
			-on_subsets 9 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex PGGL_2_8_poset.tex
	open PGGL_2_8_poset.pdf


PGGL_2_9_on_subsets:
	$(ORBITER) -v 10 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label PGGL_2_9 \
			-W -depth 10 \
		-end \
		-define G -linear_group -PGGL 2 9 -end \
		-define Orb -orbits -group G \
			-on_subsets 10 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex PGGL_2_9_poset.tex
	open PGGL_2_9_poset.pdf


PGL_2_11_on_subsets:
	$(ORBITER) -v 10 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label PGL_2_11 \
			-W -depth 12 \
		-end \
		-define G -linear_group -PGL 2 11 -end \
		-define Orb -orbits -group G \
			-on_subsets 12 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex PGL_2_11_poset.tex
	open PGL_2_11_poset.pdf



PGGL_2_16_on_subsets:
	$(ORBITER) -v 3 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label PGGL_2_16 \
			-W -depth 10 \
		-end \
		-define G -linear_group -PGGL 2 16 -end \
		-define Orb -orbits -group G \
			-on_subsets 10 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex PGGL_2_16_poset.tex
	open PGGL_2_16_poset.pdf


PGGL_2_32_on_subsets:
	$(ORBITER) -v 3 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label PGGL_2_32 \
			-W -depth 8 \
		-end \
		-define G -linear_group -PGGL 2 32 -end \
		-define Orb -orbits -group G \
			-on_subsets 8 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex PGGL_2_32_poset.tex
	open PGGL_2_32_poset.pdf


PG_3_4_subsets:
	$(ORBITER) -v 3 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label PGGL_4_4 \
			-depth 5 \
			-draw_options \
				-radius 200 \
			-end \
		-end \
		-define G -linear_group -PGGL 4 4 -end \
		-define Orb -orbits -group G \
			-on_subsets 5 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex PGGL_4_4_poset.tex
	open PGGL_4_4_poset.pdf


PGGL_2_9_orbits:
	$(ORBITER) -v 3 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label PGGL_2_9 -W -depth 5 \
			-draw_options -radius 200 -end \
		-end \
		-define G -linear_group -PGGL 2 9 -end \
		-define Orb -orbits -group G \
			-on_subsets 5 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex PGGL_2_9_poset.tex
	open PGGL_2_9_poset.pdf




PGO_5_2_on_subsets:
	$(ORBITER) -v 3 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label PGO_5_2 \
			-depth 15 \
			-w \
		-end \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGO 5 F -end \
		-define Orb -orbits -group G \
			-on_subsets 15 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex PGO_5_2_poset.tex
	open PGO_5_2_poset.pdf




###############################################################################
# Section 6.4: Orbits on Subspaces


SECTION_ORBITS_ON_SUBSPACES:


test_6_4:
	make subspaces_Op_4_2
	make PGL_4_2_on_subspaces
	make PGL_4_2_singer_on_subspaces
	make PGL_8_2_singer_on_subspaces
	make Op_6_2_orbits_on_subspaces
	make Op_6_3_orbits_on_subspaces
	make Op_6_11_orbits_on_subspaces
	make Op_8_2_orbits_on_subspaces
	make PGO_7_2_on_subspaces


subspaces_Op_4_2:
	$(ORBITER) -v 5 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-draw_options -radius 200 -end \
			-problem_label Op_4_2 -W -depth 4 \
		-end \
		-define G -linear_group -PGL 4 2 -orthogonal 1 -end \
		-define Orb -orbits -group G \
			-on_subspaces 4 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex PGL_4_2_Orthogonal_plus_4_2_poset.tex
	open PGL_4_2_Orthogonal_plus_4_2_poset.pdf



PGL_4_2_on_subspaces:
	$(ORBITER) -v 5 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label PGL_4_2 \
			-W -depth 4 \
		-end \
		-define G -linear_group -PGL 4 2 -end \
		-define Orb -orbits -group G \
			-on_subspaces 4 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex PGL_4_2_poset.tex
	open PGL_4_2_poset.pdf




PGL_4_2_singer_on_subspaces:
	$(ORBITER) -v 5 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-draw_options -end \
			-problem_label PGL_4_2_singer \
			-W -depth 4 \
		-end \
		-define G -linear_group -PGL 4 2 -singer 1 -end \
		-define Orb -orbits -group G \
			-on_subspaces 4 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	pdflatex PGL_4_2_Singer_4_2_1_poset.tex
	open PGL_4_2_Singer_4_2_1_poset.pdf




PGL_8_2_singer_on_subspaces:
	$(ORBITER) -v 5 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-draw_options -radius 150 -end \
			-problem_label PGL_8_2_singer \
			-W -depth 8 \
		-end \
		-define G -linear_group -PGL 8 2 -singer 1 -end \
		-define Orb -orbits -group G \
			-on_subspaces 8 Control \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 

# May 7, 2020: 16 sec on Mac
# 1643 orbits in total

Op_6_2_orbits_on_subspaces:
	$(ORBITER) -v 5 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-draw_options -radius 200 -end \
			-problem_label Op_6_2 -W \
			-depth 6 \
		-end \
		-define G -linear_group -PGL 6 2 -orthogonal 1 -end \
		-define Orb -orbits -group G \
			-on_subspaces 6 Control \
		-end



Op_6_3_orbits_on_subspaces:
	$(ORBITER) -v 5 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-draw_options -radius 200 -end \
			-problem_label Op_6_3 -W \
			-depth 6 \
		-end \
		-define G -linear_group -PGL 6 3 -orthogonal 1 -end \
		-define Orb -orbits -group G \
			-on_subspaces 6 Control \
		-end

# June 3, 2020 on Mac: 0 sec



Op_6_11_orbits_on_subspaces:
	$(ORBITER) -v 5 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-draw_options -radius 200 -end \
			-problem_label Op_6_11 -W \
			-depth 6 \
		-end \
		-define G -linear_group -PGL 6 11 -orthogonal 1 -end \
		-define Orb -orbits -group G \
			-on_subspaces 6 Control \
		-end


# June 3, 2020 on Mac: 12 sec


Op_8_2_orbits_on_subspaces:
	$(ORBITER) -v 5 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-draw_options -radius 200 -end \
			-problem_label Op_8_2 -W -depth 8 \
		-end \
		-define G -linear_group -PGL 8 2 -orthogonal 1 -end \
		-define Orb -orbits -group G \
			-on_subspaces 8 Control \
		-end


PGO_7_2_on_subspaces:
	$(ORBITER) -v 6 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-draw_options -radius 200 -end \
			-problem_label O_7_2 \
			-W -depth 7 \
		-end \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 7 F -orthogonal 0 -end \
		-define Orb -orbits -group G \
			-on_subspaces 7 Control \
		-end



###############################################################################
# Section 6.5: Orbits on set partitions


SECTION_ORBITS_ON_SET_PARTITIONS:



test_6_5:
	make C6_on_partition
	make PGL_2_17_on_partition


C6_on_partition:
	$(ORBITER) -v 5 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label C6 \
			-depth 2 \
			-W \
			-draw_options \
				-radius 200 -embedded \
			-end \
		-end \
		-define G -permutation_group -cyclic_group 6 -end \
		-define Orb -orbits -group G \
			-on_partition 2 Control \
		-end


PGL_2_17_on_partition:
	$(ORBITER) -v 5 \
		-define Control -poset_classification_control \
			-problem_label PGL_2_17 \
			-depth 6 \
			-W \
		-end \
		-define G -linear_group -PGL 2 17 -end \
		-define Orb -orbits -group G \
			-on_partition 6 Control \
		-end



###############################################################################
# Section 6.6: Arcs and Caps in Projective Spaces


SECTION_ARCS_AND_CAPS_IN_PROJECTIVE_SPACES:



test_6_6:
	make PGL_3_27
	make hyperoval_4_classify
	make hyperoval_8_classify
	make hyperoval_16_classify
	make hyperoval_16_1_conic_type
	make hyperoval_16_1_nonconical_type
	make hyperoval_16_2_nonconical_type
	#make hyperoval_16_stab_0_disjoint_sets_graph
	#make nc_arcs_16
	make five_arcs_q13




PGL_3_27:
	$(ORBITER) -v 5 \
		-define G \
		-linear_group -PGL 3 27 -end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_3_27_report.tex
	open PGL_3_27_report.pdf
	




hyperoval_4_classify:
	$(ORBITER) -v 4 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define Control -poset_classification_control \
			-problem_label hyperoval_q4 \
			-W -depth 6 \
		-end \
		-with P -do \
		-projective_space_activity \
			-classify_arcs \
				-control Control \
				-target_size 6 \
				-d 2 \
			-end \
		-end
	#pdflatex hyperoval_q4_poset.tex
	#open hyperoval_q4_poset.pdf




hyperoval_8_classify:
	$(ORBITER) -v 4 \
		-orbiter_path $(ORBITER_PATH) \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define Control -poset_classification_control \
			-problem_label hyperoval_q8 \
			-W -depth 10 \
			-draw_options \
				-radius 200 \
			-end \
		-end \
		-with P -do \
		-projective_space_activity \
			-classify_arcs \
				-control Control \
				-target_size 10 \
				-d 2 \
			-end \
		-end
	#pdflatex hyperoval_q8_poset.tex
	#open hyperoval_q8_poset.pdf






hyperoval_16_classify:
	$(ORBITER) -v 4 \
		-orbiter_path $(ORBITER_PATH) \
		-define F -finite_field -q 16 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define Control -poset_classification_control \
			-problem_label hyperoval_q16 \
			-W -depth 18 \
			-draw_options \
				-radius 200 \
			-end \
		-end \
		-with P -do \
		-projective_space_activity \
			-classify_arcs \
				-control Control \
				-target_size 18 \
				-d 2 \
			-end \
		-end


	#pdflatex hyperoval_q16_poset.tex
	#open hyperoval_q16_poset.pdf





hyperoval_16_1_conic_type:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 16 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define H_16_1 -geometric_object P \
			-set $(HYPEROVAL_16_144) \
		-end \
		-with H_16_1 -do \
		-combinatorial_object_activity \
			-save \
		-end \
		-with H_16_1 -do \
		-combinatorial_object_activity \
			-conic_type 6 \
		-end \
		-print_symbols

hyperoval_16_1_nonconical_type:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 16 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define H_16_1 -geometric_object P \
			-set $(HYPEROVAL_16_144) \
		-end \
		-with H_16_1 -do \
		-combinatorial_object_activity \
			-save \
		-end \
		-with H_16_1 -do \
		-combinatorial_object_activity \
			-non_conical_type \
		-end \
		-print_symbols


#We found 17028 non-conical 6 subsets
#Eckardt point number distribution : $13^{252},\,$ $9^{720},\,$ $5^{2304},\,$ $3^{13752}$ 


hyperoval_16_2_nonconical_type:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 16 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define H_16_2 -geometric_object P \
			-set $(HYPEROVAL_16_16320) \
		-end \
		-with H_16_2 -do \
		-combinatorial_object_activity \
			-save \
		-end \
		-with H_16_2 -do \
		-combinatorial_object_activity \
			-non_conical_type \
		-end \
		-print_symbols

#We found 6188 = {17 choose 5} non-conical 6 subsets
#Eckardt point number distribution : $45^{68},\,$ $13^{2040},\,$ $5^{4080}$ 

#neighbors_of_0_with_4_removed.csv
#Row,C0,C1,C2,C3
#0,2,3,9,10
#1,1,3,7,8
#2,10,12,13,15
#3,1,5,10,11
#4,3,5,6,13
#5,8,9,11,12
#6,7,11,13,17
#7,7,10,14,16
#8,1,9,13,16
#9,2,8,13,14
#10,1,2,15,17
#11,6,8,10,17
#12,6,7,9,15
#13,2,6,11,16
#14,5,9,14,17
#15,5,8,15,16
#16,1,6,12,14
#17,2,5,7,12
#18,3,12,16,17
#19,3,11,14,15
#END


# ToDo neighbors_of_0_with_4_removed.csv is missing

hyperoval_16_stab_0_disjoint_sets_graph:
	$(ORBITER) -v 2 \
		-define G -graph -disjoint_sets_graph \
			neighbors_of_0_with_4_removed.csv \
		-end \
		-with G -do \
			-graph_theoretic_activity \
			-find_cliques \
				-target_size 4 \
			-end \
		-end \
		-print_symbols


# 5 cliques of size 4
#ROW,C0,C1,C2,C3
#0,0,6,15,16
#1,1,2,13,14
#2,3,9,12,18
#3,4,5,7,10
#4,8,11,17,19
#END

#clique 0:
#0,2,3,9,10
#6,7,11,13,17
#15,5,8,15,16
#16,1,6,12,14
# partition: (1,6,12,14|2,3,9,10|5,8,15,16|7,11,13,17)
# 4 is missing, it is the nucleus
# 0 is missing is the chosen point







# nonconical 6-arcs are used for classifying cubic surfaces:





nc_arcs_16:
	$(ORBITER) -v 4 \
		-define F -finite_field -q 16 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define Control -poset_classification_control \
			-problem_label nc_arcs_q16_d2 \
			-W -depth 6 \
		-end \
		-with P -do \
		-projective_space_activity \
			-classify_arcs \
				-control Control \
				-target_size 6 \
				-d 2 \
				-conic_test \
			-end \
		-end
	#pdflatex nc_arcs_q16_d2_poset.tex
	#open nc_arcs_q16_d2_poset.pdf


#User time: 0:00



five_arcs_q13:
	$(ORBITER) -v 4 \
		-define F -finite_field -q 13 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define Control -poset_classification_control \
			-problem_label five_arcs_q13 -W -depth 5 \
		-end \
		-with P -do \
		-projective_space_activity \
			-classify_arcs \
				-control Control \
				-target_size 5 \
				-d 2 \
			-end \
		-end
	#pdflatex five_arcs_q13_poset.tex
	#open five_arcs_q13_poset.pdf







###############################################################################
# Section 6.7: Cubic Curves

SECTION_CUBIC_CURVES:



test_6_7:
	make cubic_curves_PG_2_4
	#make cubic_curves_PG_2_4_draw
	make cubic_curves_PG_2_8
	#make cubic_curves_PG_2_8_draw



cubic_curves_PG_2_4:
	$(ORBITER) -v 3 \
		-orbiter_path $(ORBITER_PATH) \
		-define F -finite_field -q 3 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define Control -poset_classification_control \
			-problem_label cc_4 -W -depth 9 \
			-draw_options -radius 200 -embedded -end \
		-end \
		-with P -do \
		-projective_space_activity \
			-classify_cubic_curves \
				-control Control \
				-target_size 9 -d 3 \
			-end

	#pdflatex cc_4_poset.tex
	#open cc_4_poset.pdf
	#pdflatex cc_4_poset_lvl_9.tex
	#open cc_4_poset_lvl_9.pdf
	#pdflatex Cubic_curves_q4.tex
	#open Cubic_curves_q4.pdf


# ToDo
#graphical_output::draw_layered_graph_from_file file cc_4_poset_lvl_9.layered_graph does not exist


cubic_curves_PG_2_4_draw:
	$(ORBITER) -v 3 \
		-draw_layered_graph cc_4_poset_lvl_9.layered_graph \
			-radius 300 -embedded -line_width 1.1 \
			-y_stretch 0.9 -scale 0.25 \
			-paths_in_between 6 4 9 0 \
		-end
	pdflatex cc_4_poset_lvl_9_draw.tex
	open cc_4_poset_lvl_9_draw.pdf


cubic_curves_PG_2_8:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define Control -poset_classification_control \
			-problem_label cc_8 -W -depth 9 \
			-draw_options -radius 200 -embedded -end \
		-end \
		-with P -do \
		-projective_space_activity \
		-classify_cubic_curves \
			-control Control \
			-target_size 9 -d 3 \
		-end



	#pdflatex Cubic_curves_q8.tex
	#open Cubic_curves_q8.pdf
	#pdflatex cc_8_tree_lvl_9.tex
	#open cc_8_tree_lvl_9.pdf
	
# the 6-set is orbit 7
# the 9-set is orbit 1
#				-recognize "0,1,2,3,35,28" \
#				-recognize "1,2,3,51,28,61,46,71,40" \


# todo:
#graphical_output::draw_layered_graph_from_file file cc_8_poset_lvl_9.layered_graph does not exist


cubic_curves_PG_2_8_draw:
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file cc_8_KM_6_9.csv \
		-box_width 50 -bit_depth 8 -end
	$(ORBITER) -v 3 \
		-draw_layered_graph \
			cc_8_poset_lvl_9.layered_graph \
			-radius 2 -embedded -line_width 0.01 \
			-y_stretch 1.3 -scale 0.5 \
			-paths_in_between 6 7 9 1 \
		-end
	pdflatex cc_8_poset_lvl_9_draw.tex
	open cc_8_poset_lvl_9_draw.pdf






###############################################################################
# Chapter 7 - Cubic Surfaces
###############################################################################



###############################################################################
# Section 7.1: Cubic Surfaces Creation


SECTION_CUBIC_SURFACES_CREATION:



test_7_1:
	make surface_4_0
	make Hirschfeld_surface_get_incidence_matrix_40_40
	make Hirschfeld_surface_incma_40_40_c
	make surface_7_0
	make Family_general_F7
	make surface_eckardt_13_4_12
	make surface_8_0_catalogue
	make surface_8_0_clean
	make surface_8_0b
	make Eckardt_13
	make surface_13_0
	make surface_16_0
	make G13_8
	make F13_8
	make F13_16
	make F13_32
	#make F13_64a
	#make F13_64b
	#make Colorado1
	#make Colorado2
	#make Colorado3
	#make F13_128a
	#make F13_128b
	#make F13_128c
	make move_two_lines
	make F_alpha_beta_gamma_delta
	make surface_F_abcd_q7
	make surface_F_abcd_Eckardt_q31
	make surface_F_abcd_sweep_4_27_q7
	make surface_11_random
	make surface_11_1



surface_4_0:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -end \
		-define S -cubic_surface -space P -catalogue 0 -end \
		-with S -do \
		-cubic_surface_activity \
			-report \
		-end \
		-with S -do \
		-cubic_surface_activity \
			-export_something "points" \
		-end \
		-with S -do \
		-cubic_surface_activity \
			-export_something "points_off" \
		-end \
		-with S -do \
		-cubic_surface_activity \
			-export_something "lines" \
		-end \
		-with S -do \
		-cubic_surface_activity \
			-export_something "Hesse_planes" \
		-end
	pdflatex surface_catalogue_q4_iso0_report.tex
	open surface_catalogue_q4_iso0_report.pdf





# points:
#0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,23,26,27,30,31,34,35,38,39,42,47,48,51,52,53,54,59,60,61,62,67,68,69,70,75,76,79,80,81,82

# points off:
#15,16,17,18,19,20,21,22,24,25,28,29,32,33,36,37,40,41,43,44,45,46,49,50,55,56,57,58,63,64,65,66,71,72,73,74,77,78,83,84

HIRSCHFELD_SURFACE_POINTS_OFF="15,16,17,18,19,20,21,22,24,25,28,29,32,33,36,37,40,41,43,44,45,46,49,50,55,56,57,58,63,64,65,66,71,72,73,74,77,78,83,84"

#Hesse planes:
#7,8,11,13,14,16,17,19,28,29,32,34,35,37,38,40,42,43,44,45,47,48,52,54,56,57,60,61,63,64,65,66,68,69,73,75,77,78,81,82

HIRSCHFELD_SURFACE_HESSE_PLANES="7,8,11,13,14,16,17,19,28,29,32,34,35,37,38,40,42,43,44,45,47,48,52,54,56,57,60,61,63,64,65,66,68,69,73,75,77,78,81,82"

Hirschfeld_surface_get_incidence_matrix_40_40:
	$(ORBITER) -v 3 \
		-define points -vector -dense $(HIRSCHFELD_SURFACE_POINTS_OFF) -end \
		-define planes -vector -dense $(HIRSCHFELD_SURFACE_HESSE_PLANES) -end \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-restricted_incidence_matrix 1 3 points planes "H_incma_40_40" \
		-end \



Hirschfeld_surface_incma_40_40_c:
	$(ORBITER) -v 10 \
		-draw_incidence_structure_description \
			-width 60 -width_10 6 -end \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries H_incma_40_40.inc 40 40 480 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form \
				-classification_prefix H_incma_40_40 \
				-label H_incma_40_40 \
				-save_ago \
				-save_transversal \
			-end \
			-report \
				-prefix H_incma_40_40 \
				-export_flag_orbits \
				-show_incidence_matrices \
				-export_group_GAP \
			-end \
		-end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file H_incma_40_40_object0_TDA_flag_orbits.csv \
		-secondary_input_csv_file H_incma_40_40_object0_TDA.csv \
		-box_width 32 -bit_depth 24 \
		-end
	pdflatex H_incma_40_40_classification.tex
	open H_incma_40_40_classification.pdf

surface_4_0_plane_type_of_lines_on_Klein_quadric:
	$(ORBITER) -v 6 \
		-define L -vector -file surface_catalogue_q4_iso0_lines.csv -end \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-plane_intersection_type_of_klein_image 4 L \
		-end 

#The plane intersection type is (0^244496, 1^112914, 2^15120, 3^4005, 5^270)
#The plane intersection type is (5^270)
#L_highest_weight_objects.csv


surface_4_0_lines_vs_lines:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -end \
		-with P -do \
		-projective_space_activity \
			-export_cubic_surface_line_vs_line_incidence_matrix \
		-end


# PG_3_4_lines_vs_lines_incma.csv


surface_4_0_lines_vs_tritangent_planes:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -end \
		-with P -do \
		-projective_space_activity \
			-export_cubic_surface_line_tritangent_plane_incidence_matrix \
		-end \

surface_4_0_dot_products_columns:
	$(ORBITER) -v 3 \
		-define line_vs_trit -vector \
			-file PG_3_4_lines_tritplanes_incma.csv \
		-end \
		-dot_product_of_columns line_vs_trit


surface_4_0_export_double_sixes:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -end \
		-with P -do \
		-projective_space_activity \
			-export_double_sixes \
		-end \


surface_4_0_multiply_half_double_six_vs_lines:
	$(ORBITER) -v 3 \
		-define lines_vs_lines -vector \
			-file PG_3_4_lines_vs_lines_incma.csv \
		-end \
		-define single_six -vector \
			-file PG_3_4_single_sixes_char_vec.csv \
		-end \
		-matrix_multiply_over_Z single_six lines_vs_lines

# single_six_times_lines_vs_lines.csv

surface_4_0_multiply_half_double_six_vs_incma:
	$(ORBITER) -v 3 \
		-define line_vs_trit -vector \
			-file PG_3_4_lines_tritplanes_incma.csv \
		-end \
		-define single_six -vector \
			-file PG_3_4_single_sixes_char_vec.csv \
		-end \
		-matrix_multiply_over_Z single_six line_vs_trit

surface_4_0_dot_products_rows:
	$(ORBITER) -v 3 \
		-define single_six_vs_trit_planes -vector \
			-file single_six_times_line_vs_trit.csv \
		-end \
		-dot_product_of_rows single_six_vs_trit_planes


surface_4_0_dot_products_rowspan:
	$(ORBITER) -v 3 \
		-define single_six_vs_trit_planes -vector \
			-file single_six_times_line_vs_trit.csv \
		-end \
		-rowspan_over_R single_six_vs_trit_planes

surface_4_0_single_six_times_lines_vs_lines_rowspan:
	$(ORBITER) -v 3 \
		-define M -vector \
			-file single_six_times_lines_vs_lines.csv \
		-end \
		-rowspan_over_R M



surface_4_0_roots:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define S -cubic_surface -space P -catalogue 0 -end \
		-with S -do \
		-cubic_surface_activity \
			-export_something "roots" \
		-end


surface_7_0:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 7 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define S -cubic_surface -space P -catalogue 0 -end \
		-with S -do \
		-cubic_surface_activity \
			-report \
			-all_quartic_curves \
		-end \
		-with S -do \
		-cubic_surface_activity \
			-export_something "lines" \
		-end
	pdflatex surface_catalogue_q7_iso0_report.tex
	open surface_catalogue_q7_iso0_report.pdf


surface_7_0_roots:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 7 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define S -cubic_surface -space P -catalogue 0 -end \
		-with S -do \
		-cubic_surface_activity \
			-export_something "roots" \
		-end


surface_7_0_plane_type_of_lines_on_Klein_quadric:
	$(ORBITER) -v 6 \
		-define L_7_0 -vector \
			-file surface_catalogue_q7_iso0_lines.csv -end \
		-define F -finite_field -q 7 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-plane_intersection_type_of_klein_image 4 L_7_0 \
		-end 

# Time: 4:50
#The plane intersection type is (0^44526575, 1^3529170, 2^112563, 3^8541, 4^324, 5^27)
#The plane intersection type is (4^324, 5^27)
#L_7_0_highest_weight_objects.csv


Family_general_F7:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 7 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define S7_abcd_2_3_3_4 -cubic_surface \
			-space P -family_general_abcd 2 3 3 4 \
		-end \
		-with S7_abcd_2_3_3_4 -do \
		-cubic_surface_activity \
			-report \
		-end
	pdflatex surface_family_general_abcd_q7_a2_b3_c3_d4_report.tex
	open surface_family_general_abcd_q7_a2_b3_c3_d4_report.pdf
		
# Fermat with 18 Eckardt points
# no automorphism group


surface_8_0:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define S -cubic_surface -space P -catalogue 0 -end \
		-with S -do \
		-cubic_surface_activity \
			-report \
			-all_quartic_curves \
		-end \
		-with S -do \
		-cubic_surface_activity \
			-export_something "lines" \
		-end \

surface_8_0_plane_type_of_lines_on_Klein_quadric:
	$(ORBITER) -v 6 \
		-define L_8_0 -vector -file surface_catalogue_q8_iso0_lines.csv -end \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-plane_intersection_type_of_klein_image 4 L_8_0 \
		-end 

#L_8_0_highest_weight_objects.csv
#intersection numbers: ( 0, 0, 0, 0, 192, 30 )
# time: 15:48






surface_8_0_catalogue:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define S8_0 -cubic_surface -space P -catalogue 0 -end \
		-with S8_0 -do \
		-cubic_surface_activity \
			-report \
		-end
	pdflatex surface_catalogue_q8_iso0_report.tex
	open surface_catalogue_q8_iso0_report.pdf



surface_8_0_clean:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define S8_0 -cubic_surface -space P -catalogue 0 \
			-select_double_six "15,11,22,19,24,5,16,10,23,20,25,4" \
			-select_double_six "3,2,1,0,5,4,9,8,7,6,11,10" \
			-transform_inverse "1,4,4,0,6,0,0,0,6,2,0,1,7,0,4,0,0" \
			-transform "4,4,0,0, 0,0,1,0, 1,0,0,0, 0,0,0,1, 0" \
			-transform_inverse "2,0,0,0,0,2,0,0,0,0,2,0,1,1,2,3,0" \
			-end \
		-with S8_0 -do \
		-cubic_surface_activity \
			-report \
		-end
	pdflatex surface_catalogue_q8_iso0_report.tex
	open surface_catalogue_q8_iso0_report.pdf



# clean equation for Tekirdag-1:

surface_8_0b:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define S8_0 -cubic_surface -space P -catalogue 0 \
			-select_double_six "15,11,22,19,24,5,16,10,23,20,25,4" \
			-select_double_six "3,2,1,0,5,4,9,8,7,6,11,10" \
			-transform "1,0,0,0,0,1,0,6,0,0,1,6,0,0,0,1,0" \
			-transform_inverse "3,1,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0" \
			-transform_inverse "2,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0" \
		-end \
		-with S8_0 -do \
		-cubic_surface_activity \
			-report \
		-end






surface_9_0:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 9 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define S -cubic_surface -space P -catalogue 0 -end \
		-with S -do \
		-cubic_surface_activity \
			-report \
			-all_quartic_curves \
		-end \
		-with S -do \
		-cubic_surface_activity \
			-export_something "lines" \
		-end

surface_9_0_plane_type_of_lines_on_Klein_quadric:
	$(ORBITER) -v 6 \
		-define L_9_0 -vector -file surface_catalogue_q9_iso0_lines.csv -end \
		-define F -finite_field -q 9 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-plane_intersection_type_of_klein_image 4 L_9_0 \
		-end 


#intersection numbers: ( 0, 0, 0, 0, 180, 15 )
#time: 44:42


surface_9_1:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 9 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define S -cubic_surface -space P -catalogue 1 -end \
		-with S -do \
		-cubic_surface_activity \
			-report \
			-all_quartic_curves \
		-end \
		-with S -do \
		-cubic_surface_activity \
			-export_something "lines" \
		-end \

surface_9_1_plane_type_of_lines_on_Klein_quadric:
	$(ORBITER) -v 6 \
		-define L_9_1 -vector -file surface_catalogue_q9_iso1_lines.csv -end \
		-define F -finite_field -q 9 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-plane_intersection_type_of_klein_image 4 L_9_1 \
		-end 

#intersection numbers: ( 0, 0, 0, 0, 216 )

#44:36


# Joel:

surface_eckardt_13_4_12:
	$(ORBITER) -v 6 \
		-define F -finite_field -q 13 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define Eckardt_4_12 -cubic_surface \
			-space P -family_Eckardt 4 12 \
		-end \
		-with Eckardt_4_12 -do \
		-cubic_surface_activity \
			-report \
		-end







# 13_0 has 4 Eckardt points
# 13_1 has 6 Eckardt points
# 13_2 has 9 Eckardt points
# 13_3 has 18 Eckardt points
#




Eckardt_13:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 13 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define Eckardt_3_1 -cubic_surface \
			-space P -family_Eckardt 3 1 \
		-end \
		-with Eckardt_3_1 -do \
		-cubic_surface_activity \
			-report \
		-end



surface_13_0:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 13 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define S13_0 -cubic_surface -space P -catalogue 0 -end \
		-with S13_0 -do \
		-cubic_surface_activity \
			-report \
		-end


# clean equation for Tekirdag-2:


surface_16_0:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 16 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define S16_0 -cubic_surface -space P -catalogue 0 \
			-transform "1,0,0,0,0,1,0,12,0,0,1,12,0,0,0,1,0" \
			-transform "15,11,4,0,0,0,12,0,0,12,0,0,0,0,0,1,3" \
		-end \
		-with S16_0 -do \
		-cubic_surface_activity \
			-report \
		-end


#		-transform_inverse "3,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0" \
#		-transform_inverse "13,12,1,0,12,13,1,0,0,0,1,0,0,0,0,1,0" \
#		-transform_inverse "1,0,0,0,0,1,0,0,12,12,1,0,0,0,0,1,0" \
#		-transform_inverse "12,0,0,0,0,12,0,0,0,0,1,0,0,0,0,1,0" 

# rank of lines ( 66591, 26737, 4093, 69904, 28376, 26470, 70160, 69855, 26208, 5847, 369, 32230, 529, 30293, 70068, 2178, 261, 28666, 8575, 105, 31694, 0, 51784, 25209, 22193, 49862, 274 )
# Rank of points on Klein quadric: ( 29181, 4677, 29950, 33, 62496, 429, 1, 9205, 37, 29964, 29364, 21501, 4656, 54735, 5425, 30105, 754, 6680, 13354, 758, 30106, 0, 29209, 48736, 25595, 33780, 4657 )


# ai: 29181, 4677, 29950, 33, 62496, 429
# bi: 1, 9205, 37, 29964, 29364, 21501

# Tekirdag-1:

G13_8:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define T1 -cubic_surface -space P -family_G13 2 -end \
		-with T1 -do \
		-cubic_surface_activity \
			-report \
		-end


F13_8:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define T1 -cubic_surface -space P -family_F13 2 -end \
		-with T1 -do \
		-cubic_surface_activity \
			-report \
		-end




# Tekirdag-2:

F13_16:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 16 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define T2 -cubic_surface -space P -family_F13 2 -end \
		-with T2 -do \
		-cubic_surface_activity \
			-report \
		-end


# Tekirdag-3:

F13_32:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 32 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define T3 -cubic_surface -space P -family_F13 2 -end \
		-with T3 -do \
		-cubic_surface_activity \
			-report \
		-end


# Kapadokya-1:

F13_64a:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 64 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define K1 -cubic_surface -space P -family_F13 2 -end \
		-with K1 -do \
		-cubic_surface_activity \
			-report \
		-end


# Kapadokya-2:

F13_64b:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 64 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define K2 -cubic_surface -space P -family_F13 18 -end \
		-with K2 -do \
		-cubic_surface_activity \
			-report \
		-end


Colorado1:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 128 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define CO-1 -cubic_surface -space P -catalogue 0 \
			-transform_inverse "1,0,0,0,0,1,0,96,0,0,1,96,0,0,0,1,0" \
		-end \
		-with CO-1 -do \
		-cubic_surface_activity \
			-report \
		-end


# recognize the arcs from Colorado-1,2,3:



Colorado2:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 128 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define CO-2 -cubic_surface -space P -catalogue 926 \
			-transform_inverse "1,0,0,0,0,1,0,32,0,0,1,32,0,0,0,1,0" \
		-end \
		-with CO-2 -do \
		-cubic_surface_activity \
			-report \
		-end

Colorado3:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 128 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define CO-3 -cubic_surface -space P -catalogue 928 \
			-transform_inverse "1,0,0,0,0,1,0,59,0,0,1,59,0,0,0,1,0" \
		-end \
		-with CO-3 -do \
		-cubic_surface_activity \
			-report \
		-end


# Colorado-1:

F13_128a:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 128 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define CO-1 -cubic_surface -space P -family_F13 2 -end \
		-with CO-1 -do \
		-cubic_surface_activity \
			-report \
		-end

# Colorado-2:

F13_128b:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 128 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define CO-2 -cubic_surface -space P -family_F13 6 -end \
		-with CO-2 -do \
		-cubic_surface_activity \
			-report \
		-end

# Colorado-3:

F13_128c:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 128 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define CO-3 -cubic_surface -space P -family_F13 14 -end \
		-with CO-3 -do \
		-cubic_surface_activity \
			-report \
		-end


move_two_lines:
	$(ORBITER) -v 5 \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-move_two_lines_in_hyperplane_stabilizer \
			65 4680 72 657 \
		-end




F_alpha_beta_gamma_delta:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 7 -end \
		-with F -do -finite_field_activity \
		-parse_and_evaluate \
		"F_alpha_beta_gamma_delta" "x0,x1,x2,x3" \
			$(F_ALPHA_BETA_GAMMA_DELTA) \
			"alpha=2,beta=3,gamma=4,delta=5" \
		-end
	dot -Tpng F_alpha_beta_gamma_delta.gv >F_alpha_beta_gamma_delta.png


surface_F_abcd_q7:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 7 -end \
		-with F -do \
		-finite_field_activity \
		-parse_and_evaluate "Fabcd" "X0,X1,X2,X3" \
			$(F_abcd_eqn_no_exponents) "a=4,b=2,c=2,d=4" \
		-end

#dot -Tpng F_alpha_beta_gamma_delta.gv >F_alpha_beta_gamma_delta.png

surface_F_abcd_Eckardt_q31:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 31 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define F_abcd -cubic_surface -space P \
			-by_equation "F_abcd" \
			"\DF_{a,b,c,d}\D" "X0,X1,X2,X3" \
			$(F_abcd_eqn_no_exponents) \
			"a=2,b=30,c=30,d=2" \
			"\Da=2,b=30,c=30,d=2\D" \
		-end \
		-with F_abcd -do \
		-cubic_surface_activity \
			-report \
		-end







surface_F_abcd_sweep_4_27_q7:
	$(ORBITER) -v 10 \
		-define F -finite_field -q 7 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
		-sweep_4_27 sweep_4_27_q7 \
			-space P \
			-by_equation "F_abcd" \
			"\DF_{a,b,c,d}\D" "X0,X1,X2,X3" \
			$(F_abcd_eqn_no_exponents) \
			"a=2,b=3,c=4,d=5" \
			"\Da=2,b=3,c=4,d=5\D" \
		-end \
		-end \




surface_11_random:
	$(ORBITER) -v 12 \
		-define F -finite_field -q 11 -end \
		-define P -projective_space -n 3 -field F -end \
		-define S -cubic_surface -space P -random -end \
		-with S -do \
		-cubic_surface_activity \
			-report \
		-end
	pdflatex surface_random_q11_report.tex
	open surface_random_q11_report.pdf

surface_11_1:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 11 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define S -cubic_surface -space P -catalogue 1 -end \
		-with S -do \
		-cubic_surface_activity \
			-report \
		-end
	pdflatex surface_catalogue_q11_iso1_report.tex
	open surface_catalogue_q11_iso1_report.pdf



###############################################################################
# Section 7.2: Cubic Surfaces and Quartic Curves 


SECTION_CUBIC_SURFACES_AND_QUARTIC_CURVES:


test_7_2:
	make quartic_curve_9_0_report
	make quartic_curve_13_0_report
	make PG_2_13_rank_lines
	make PG_2_13_orbits_on_lines
	make quartic_curve_13_1_report
	make quartic_curves_19_report
	make quartic_curve_q9_1
	make quartic_curves_q7
	make quartic_curves_q13
	make quartic_curves_q13_combine
	make quartic_curves_q13_classify
	make quartic_curves_q19
	make quartic_curves_q19_combine
	make quartic_curves_q19_classify


quartic_curve_9_0_report: 
	$(ORBITER) -v 3 \
		-define F -finite_field -q 9 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define C -quartic_curve -space P -catalogue 0 -end \
		-with C -do \
			-quartic_curve_activity \
				-report \
			-end
	pdflatex quartic_curve_catalogue_q9_iso0_report.tex
	open quartic_curve_catalogue_q9_iso0_report.pdf




quartic_curve_13_0_report: 
	$(ORBITER) -v 3 \
		-define F -finite_field -q 13 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define C -quartic_curve -space P -catalogue 0 \
			-transform "10,4,1,11,5,11,4,1,1" \
			-transform_inverse "9,1,0,12,9,0,2,10,11" \
		-end \
		-with C -do \
			-quartic_curve_activity \
				-report \
			-end \
		-with C -do \
			-quartic_curve_activity \
				-extract_orbit_on_bitangents_by_length 4 \
			-end
	#pdflatex quartic_curve_catalogue_q13_iso0_report.tex
	#open quartic_curve_catalogue_q13_iso0_report.pdf

# 170, 111, 140, 2


PG_2_13_rank_lines:
	$(ORBITER) -v 2 \
		-define v -vector -format 4 \
		-dense "1,0,0, 0,1,0, 1,0,0, 0,0,1, 1,1,1, 0,1,0, 1,1,1, 0,0,1" \
		-end \
		-define F -finite_field -q 23 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-rank_lines_in_PG v \
		-end \


PG_2_13_orbits_on_lines:
	$(ORBITER) -v 5 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label PGL_3_13 \
			-depth 4 \
			-draw_options -radius 200 -end  \
		-end \
		-define G -linear_group -PGL 3 13 -end \
		-define G_on_lines -modified_group -from G \
			-on_k_subspaces 2 \
		-end \
		-define Orb -orbits -group G_on_lines \
			-on_subsets 4 Control \
		-end \
		-with Orb -do -orbits_activity \
			-recognize "170, 111, 140, 2" \
			-recognize "0,23,24,47" \
		-end
	#pdflatex PGL_3_13_poset.tex
	#open PGL_3_13_poset.pdf

# stabilizer of {0,23,24,47}
#1,0,0,7,9,0,9,5,3,
#1,3,0,1,12,0,10,9,2,
#1,1,11,7,9,6,10,5,2,
#1,4,11,12,1,8,10,4,2,

quartic_curve_13_1_report: 
	$(ORBITER) -v 3 \
		-define F -finite_field -q 13 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define C -quartic_curve -space P -catalogue 1 -end \
		-with C -do \
			-quartic_curve_activity \
				-report \
			-end
	pdflatex quartic_curve_catalogue_q13_iso1_report.tex
	open quartic_curve_catalogue_q13_iso1_report.pdf


NB_QUARTIC_CURVES_Q19=14

quartic_curves_19_report: 
	$(ORBITER) -v 3 \
		-define F -finite_field -q 19 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-loop L 0 $(NB_QUARTIC_CURVES_Q19) 1 \
		-define C -quartic_curve -space P -catalogue %L -end \
		-with C -do \
			-quartic_curve_activity \
				-report \
			-end \
		-end_loop L
		pdflatex quartic_curve_catalogue_q19_iso0_report.tex
		pdflatex quartic_curve_catalogue_q19_iso1_report.tex
		pdflatex quartic_curve_catalogue_q19_iso2_report.tex
		pdflatex quartic_curve_catalogue_q19_iso3_report.tex
		pdflatex quartic_curve_catalogue_q19_iso4_report.tex
		pdflatex quartic_curve_catalogue_q19_iso5_report.tex
		pdflatex quartic_curve_catalogue_q19_iso6_report.tex
		pdflatex quartic_curve_catalogue_q19_iso7_report.tex
		pdflatex quartic_curve_catalogue_q19_iso8_report.tex
		pdflatex quartic_curve_catalogue_q19_iso9_report.tex
		pdflatex quartic_curve_catalogue_q19_iso10_report.tex
		pdflatex quartic_curve_catalogue_q19_iso11_report.tex
		pdflatex quartic_curve_catalogue_q19_iso12_report.tex
		pdflatex quartic_curve_catalogue_q19_iso13_report.tex



quartic_curve_q9_1:
	$(ORBITER_PATH)orbiter.out -v 3 \
		-define F -finite_field -q 9 -end \
		-define P2 -projective_space -n 2 -field F -end \
		-define P3 -projective_space -n 3 -field F -end \
		-define S9_1 -cubic_surface -space P3 -catalogue 1 -end \
		-define C -quartic_curve -space P2 -from_cubic_surface S9_1 0 -end \
		-with C -do \
			-quartic_curve_activity \
				-report \
			-end
	pdflatex quartic_curve_surface_surface_pt_orb_0_report.tex
	open quartic_curve_surface_surface_pt_orb_0_report.pdf


#The points by rank are: ( 5, 18, 25, 36, 39, 40, 42, 43, 47, 50, 51, 54, 55, 58, 59, 62, 68, 69, 70, 71, 76, 77, 79, 81, 85, 87, 89, 90 )

#eqn15:
#(1,1,1,1,5,1,7,7,5,0,0,0,0,0,0)


# the 27 single points (of the surface) are:
#6, 17, 81, 118, 146, 192, 229, 265, 332, 351, 362, 386, 412, 432, 488, 505, 531, 544, 576, 666, 715, 717, 723, 739, 760, 762, 805


NB_CUBIC_SURFACES_Q7=1

quartic_curves_q7:
	$(ORBITER_PATH)orbiter.out -v 3 \
		-define F -finite_field -q 7 -end \
		-define P -projective_space -n 3 -field F -end \
		-loop L 0 $(NB_CUBIC_SURFACES_Q7) 1 \
			-define S_%L -cubic_surface -space P -catalogue %L -end \
		-end_loop L \
		-print_symbols \
		-loop L 0 $(NB_CUBIC_SURFACES_Q7) 1 \
			-with S_%L -do \
			-cubic_surface_activity \
				-export_all_quartic_curves \
			-end \
		-end_loop L \
		-print_symbols



NB_CUBIC_SURFACES_Q13=4

quartic_curves_q13:
	$(ORBITER_PATH)orbiter.out -v 3 \
		-define F -finite_field -q 13 -end \
		-define P -projective_space -n 3 -field F -end \
		-loop L 0 $(NB_CUBIC_SURFACES_Q13) 1 \
			-define S_%L -cubic_surface -space P -catalogue %L -end \
		-end_loop L \
		-print_symbols \
		-loop L 0 $(NB_CUBIC_SURFACES_Q13) 1 \
			-with S_%L -do \
			-cubic_surface_activity \
				-export_all_quartic_curves \
			-end \
		-end_loop L \
		-print_symbols

quartic_curves_q13_combine:
	$(ORBITER_PATH)orbiter.out -v 3 \
		-csv_file_concatenate_from_mask $(NB_CUBIC_SURFACES_Q13) \
			surface_catalogue_q13_iso%ld_quartics.csv \
			quartics_q13.csv


quartic_curves_q13_classify:
	$(ORBITER) -v 30 \
		-define F -finite_field -q 13 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define O -orbits -classification_by_canonical_form \
			-space P \
			-input_fname_mask quartics_q13.csv \
			-nb_files 1 \
			-output_fname quartic_curves_q13_classified \
			-label_po "PO" \
			-label_so "orbit" \
			-label_equation "curve" \
			-label_points "pts_on_curve" \
			-label_lines "bitangents" \
			-degree 4 \
			-algorithm_substructure \
			-substructure_size 4 \
			-end \
		-end \
	-with O -do -orbits_activity \
		-report \
		-report_options \
			-fname quartics_q13 \
		-end \
	-end
	pdflatex quartics_q13_orbits.tex
	open quartics_q13_orbits.pdf



NB_CUBIC_SURFACES_Q19=10

quartic_curves_q19:
	$(ORBITER_PATH)orbiter.out -v 3 \
		-define F -finite_field -q 19 -end \
		-define P -projective_space -n 3 -field F -end \
		-loop L 0 $(NB_CUBIC_SURFACES_Q19) 1 \
			-define S_%L -cubic_surface -space P -catalogue %L -end \
		-end_loop L \
		-print_symbols \
		-loop L 0 $(NB_CUBIC_SURFACES_Q19) 1 \
			-with S_%L -do \
			-cubic_surface_activity \
				-export_all_quartic_curves \
			-end \
		-end_loop L \
		-print_symbols


quartic_curves_q19_combine:
	$(ORBITER_PATH)orbiter.out -v 3 \
		-csv_file_concatenate_from_mask $(NB_CUBIC_SURFACES_Q19) \
			surface_catalogue_q19_iso%ld_quartics.csv \
			quartics_q19.csv



quartic_curves_q19_classify:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 19 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define O -orbits -classification_by_canonical_form \
			-space P \
			-input_fname_mask quartics_q19.csv \
			-nb_files 1 \
			-output_fname quartic_curves_q19_classified \
			-label_po "PO" \
			-label_so "orbit" \
			-label_equation "curve" \
			-label_points "pts_on_curve" \
			-label_lines "bitangents" \
			-degree 4 \
			-algorithm_substructure \
			-substructure_size 4 \
			-end \
		-end \
	-with O -do -orbits_activity \
		-report \
		-report_options \
			-fname quartics_q19 \
		-end \
	-end
	pdflatex quartics_q19_orbits.tex
	open quartics_q19_orbits.pdf






###############################################################################
# Section 7.3: Classification of Cubic Surfaces with 27 lines


SECTION_CLASSIFICATION_OF_CUBIC_SURFACES_WITH_27_LINES:


test_7_3:
	make surface_classify_q4
	#make surface_classify_q4_arc_lifting_two_lines
	make surface_classify_q7
	make surface_classify_q9
	make surface_classify_q11
	make surface_classify_q13


surface_classify_q4:
	$(ORBITER) -v 5 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define Control -poset_classification_control -W -end \
		-with P -do \
		-projective_space_activity \
			-classify_surfaces_with_double_sixes Surf27 Control \
		-end \
		-with Surf27 -do \
		-classification_of_cubic_surfaces_with_double_sixes_activity \
			-report -end \
		-end \
		-with Surf27 -do \
		-classification_of_cubic_surfaces_with_double_sixes_activity \
			-create_source_code \
		-end \
		-print_symbols
	pdflatex Surfaces_q4.tex
	open Surfaces_q4.pdf

# time: 0:00


# ToDo

surface_classify_q4_arc_lifting_two_lines:
	$(ORBITER) -v 10 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-control_six_arcs -problem_label sixarcs_q4 -end \
			-classify_surfaces_through_arcs_and_two_lines \
		-end
	pdflatex surfaces_arc_lifting_4.tex
	open surfaces_arc_lifting_4.pdf




surface_classify_q7:
	$(ORBITER) -v 5 \
		-define F -finite_field -q 7 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define Control -poset_classification_control -W -end \
		-with P -do \
		-projective_space_activity \
			-classify_surfaces_with_double_sixes Surf27 Control \
		-end \
		-with Surf27 -do \
		-classification_of_cubic_surfaces_with_double_sixes_activity \
			-report -end \
		-end \
		-print_symbols
	pdflatex Surfaces_q7.tex
	open Surfaces_q7.pdf


surface_classify_q9:
	$(ORBITER) -v 15 \
		-define F -finite_field -q 9 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define Control -poset_classification_control -W -end \
		-with P -do \
		-projective_space_activity \
			-classify_surfaces_with_double_sixes Surf27 Control \
		-end \
		-with Surf27 -do \
		-classification_of_cubic_surfaces_with_double_sixes_activity \
			-report -end \
		-end \
		-print_symbols
	pdflatex Surfaces_q9.tex
	open Surfaces_q9.pdf


surface_classify_q11:
	$(ORBITER) -v 5 \
		-define F -finite_field -q 11 -end \
		-define P -projective_space -n 3 -field F -end \
		-define Control -poset_classification_control -W -end \
		-with P -do \
		-projective_space_activity \
			-classify_surfaces_with_double_sixes C Control \
		-end \
		-with C -do \
		-classification_of_cubic_surfaces_with_double_sixes_activity \
			-report -end \
		-end \
		-with C -do \
		-classification_of_cubic_surfaces_with_double_sixes_activity \
			-create_source_code \
		-end \
		-print_symbols
	pdflatex Surfaces_q11.tex
	open Surfaces_q11.pdf



surface_classify_q13:
	$(ORBITER) -v 5 \
		-define F -finite_field -q 13 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define Control -poset_classification_control -W -end \
		-with P -do \
		-projective_space_activity \
			-classify_surfaces_with_double_sixes C Control \
		-end \
		-with C -do \
		-classification_of_cubic_surfaces_with_double_sixes_activity \
			-report -end \
		-end \
		-print_symbols
	pdflatex Surfaces_q13.tex
	open Surfaces_q13.pdf



###############################################################################
# Section 7.4: Interfaces

SECTION_CUBIC_SURFACES_INTERFACES:


test_7_4:
	make surface_4_0_export_gap

surface_4_0_export_gap:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -end \
		-define S -cubic_surface -space P -catalogue 0 -end \
		-with S -do \
		-cubic_surface_activity \
			-export_gap \
		-end



###############################################################################
# Chapter 8 - Ring Theory
###############################################################################





###############################################################################
# Section 8.1: Polynomials over Finite Fields

SECTION_POLYNOMIALS:


test_8_1:
	make sift_polynomials_deg3_q2
	make sift_polynomials_deg4_q2
	make poly_division
	make poly_division2
	make poly_gcd
	make poly_mult_mod1
	make poly_mult_mod2
	make poly_mult_mod_F4
	make mult_polynomials_2_5_7
	make polynomial_division_ranked_2_27_13
	make mult_polynomials_2_8_15
	make polynomial_division_ranked_2_120_25
	make mult_polynomials_2_7_7
	make mult_polynomials_2_4_6
	make polynomial_division_ranked_2_24_13
	make mult_polynomials_1024_999_997
	make polynomial_division_ranked_2_349147_1033
	make mult_polynomials_1024_999_997_check
	make mult_polynomials_17_12
	make polynomial_division_ranked_2_204_37
	make Berlekamp_matrix_crc32
	make power_mod_inverse
	make mult_mod_to_get_one
	make Berlekamp_matrix_2_3
	make Berlekamp_matrix_2_4
	make Berlekamp_matrix_4_3a
	make Berlekamp_matrix_4_3b
	make find_roots_a
	make find_roots_b
	make find_roots_c
	make find_roots_d
	make find_roots_e
	make roots_over_F2
	make roots_over_F8
	make irred_3_2
	make irred_4_2
	make irred_5_2
	make irred_6_2
	make irred_7_2
	make irred_8_2
	make irred_9_2
	make irred_10_2
	make irred_2_4
	make irred_3_4
	make F2_get_primitive_poly_of_deg_10
	make F2_get_primitive_poly_range_2_10


# check which polynomials are irreducible and which are primitive:

sift_polynomials_deg3_q2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity -sift_polynomials 8 16 -end



sift_polynomials_deg4_q2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity -sift_polynomials 16 32 -end




poly_division:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_division "1,0,0,0,0,0,0,0,0,0,1" "1,0,1,1" -end

poly_division2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define A -vector -field F -sparse 11 "1,0,1,10" -end \
		-define B -vector -field F -dense "1,0,1,1" -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_division A B -end


poly_gcd:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
		-extended_gcd_for_polynomials "1,0,0,0,0,0,0,0,0,0,1" "1,0,1,1" -end

poly_mult_mod1:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 7 -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_mult_mod "1,2,3" "3,4,5" "6,0,0,1" -end

poly_mult_mod2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 7 -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_mult_mod "3,1,2" "5,3,4" "6,0,0,1" -end



poly_mult_mod_F4:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_mult_mod "1,1" "1,1" "1,1,1" -end
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_mult_mod "0,1" "1,1" "1,1,1" -end
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_mult_mod "0,1" "0,1" "1,1,1" -end





mult_polynomials_2_5_7:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity -mult_polynomials 5 7 -end
	pdflatex polynomial_mult_5_7.tex
	open polynomial_mult_5_7.pdf

polynomial_division_ranked_2_27_13:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
			-polynomial_division_ranked 27 13 \
		-end
	pdflatex polynomial_division_27_13.tex
	open polynomial_division_27_13.pdf




mult_polynomials_2_8_15:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity -mult_polynomials 8 15 -end
	pdflatex polynomial_mult_8_15.tex
	open polynomial_mult_8_15.pdf

polynomial_division_ranked_2_120_25:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
			-polynomial_division_ranked 120 25 \
		-end
	pdflatex polynomial_division_120_25.tex
	open polynomial_division_120_25.pdf

# the answer is 5


mult_polynomials_2_7_7:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
		-mult_polynomials 7 7 -end
	pdflatex polynomial_mult_7_7.tex
	open polynomial_mult_7_7.pdf



mult_polynomials_2_4_6:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
		-mult_polynomials 4 6 -end
	pdflatex polynomial_mult_4_6.tex
	open polynomial_mult_4_6.pdf

polynomial_division_ranked_2_24_13:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
			-polynomial_division_ranked 24 13 \
		-end
	pdflatex polynomial_division_24_13.tex
	open polynomial_division_24_13.pdf



mult_polynomials_1024_999_997:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
			-mult_polynomials 999 997 \
		-end
	pdflatex polynomial_mult_999_997.tex
	open polynomial_mult_999_997.pdf


polynomial_division_ranked_2_349147_1033:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_division_ranked 349147 1033 \
		-end
	pdflatex polynomial_division_349147_1033.tex
	open polynomial_division_349147_1033.pdf



mult_polynomials_1024_999_997_check:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 1024 -end \
		-with F -do \
		-finite_field_activity -parse_and_evaluate \
		"test" "" "a*b" "a=999,b=997" -end

# evaluates to 61


mult_polynomials_17_12:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
		-mult_polynomials 17 12 -end
	pdflatex polynomial_mult_17_12.tex
	open polynomial_mult_17_12.pdf
	
# gives 204

polynomial_division_ranked_2_204_37:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
			-polynomial_division_ranked 204 37 \
		-end
	pdflatex polynomial_division_204_37.tex
	open polynomial_division_204_37.pdf
	
# answer is 18
	
	




CRC32_SPARSE="1,32,1,26,1,23,1,22,1,16,1,12,1,11,\
1,10,1,8,1,7,1,5,1,4,1,2,1,1,1,0"


#ToDo:

#test_crc32:
#	$(ORBITER) -v 3 \
#		-crc32 "123456789"


Berlekamp_matrix_crc32:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -field F -sparse 33 $(CRC32_SPARSE) -end \
		-with F -do \
		-finite_field_activity \
		-Berlekamp_matrix v -end


# N = 2^32-1 = 3 * 5 * 17 * 257 * 65537
# N / 3 = 1431655765
# N / 5 = 858993459
# N / 17 = 252645135
# N / 257 = 16711935
# N / 65537 = 65535

TWO_TO_THE_32_MINUS_2=4294967294

power_mod_inverse:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define M -vector -field F -sparse 33 $(CRC32_SPARSE) -end \
		-define A -vector -field F -sparse 2 "1,1" -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_power_mod A $(TWO_TO_THE_32_MINUS_2) M \
		-end

INVERSE_SPARSE="1,31,1,25,1,22,1,21,1,15,\
1,11,1,10,1,9,1,7,1,6,1,4,1,3,1,1,1,0"

#A(X)=X^{31} + X^{25} + X^{22} + X^{21} + X^{15} 
#+ X^{11} + X^{10} + X^{9} + X^{7} + X^{6} + X^{4} + X^{3} + X + 1

mult_mod_to_get_one:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define M -vector -field F -sparse 33 $(CRC32_SPARSE) -end \
		-define A -vector -field F -sparse 2 "1,1" -end \
		-define B -vector -field F -sparse 33 $(INVERSE_SPARSE) -end \
		-with F -do \
		-finite_field_activity \
			-polynomial_mult_mod A B M \
		-end

#C(X)=1







Berlekamp_matrix_2_3:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -field F -dense "1,1,0,1" -end \
		-with F -do \
		-finite_field_activity \
		-Berlekamp_matrix v -end

# the polynomial X^3+X+1 is irreducible over GF(2) because the rank of the Berlekamp matrix is 2.

Berlekamp_matrix_2_4:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -field F -dense "1,1,0,0,1" -end \
		-with F -do \
		-finite_field_activity \
		-Berlekamp_matrix v -end

# the polynomial X^4+X+1 is irreducible over GF(2) because the rank of the Berlekamp matrix is 3.


Berlekamp_matrix_4_3a:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-define v -vector -field F -dense "1,3,0,1" -end \
		-with F -do \
		-finite_field_activity \
		-Berlekamp_matrix v -end

Berlekamp_matrix_4_3b:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-define v -vector -field F -dense "1,3,1,1" -end \
		-with F -do \
		-finite_field_activity \
		-Berlekamp_matrix v -end




find_roots_a:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 19 -end \
		-define v -vector -field F -dense "18,1,1" -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_find_roots v -end

find_roots_b:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 19 -end \
		-define v -vector -field F -dense "1,3,1" -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_find_roots v -end

find_roots_c:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 19 -end \
		-define v -vector -field F -dense "1,16,1" -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_find_roots v -end

find_roots_d:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 19 -end \
		-define v -vector -field F -dense "1,18,1" -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_find_roots v -end

find_roots_e:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 19 -end \
		-define v -vector -field F -dense "1,16,3" -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_find_roots v -end


roots_over_F2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2  -end \
		-define v -vector -field F -dense "0,1,0,1,1,1" -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_find_roots v -end



roots_over_F8:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 8 -override_polynomial 11 -end \
		-define v -vector -field F -dense "0,1,0,1,1,1" -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_find_roots v -end




# degree and then order of the field of coefficients:

irred_3_2:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
		-make_table_of_irreducible_polynomials 3 -end
	pdflatex Irred_q2_d3.tex
	open Irred_q2_d3.pdf


irred_4_2:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
		-make_table_of_irreducible_polynomials 4 -end
	pdflatex Irred_q2_d4.tex
	open Irred_q2_d4.pdf

# 3 polys

irred_5_2:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
		-make_table_of_irreducible_polynomials 5 -end
	pdflatex Irred_q2_d5.tex
	open Irred_q2_d5.pdf

# 6 polys

irred_6_2:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
		-make_table_of_irreducible_polynomials 6 -end
	pdflatex Irred_q2_d6.tex
	open Irred_q2_d6.pdf

# 9 polys: 97, 73, 67, 115, 117, 109, 91, 87, 103.

irred_7_2:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
		-make_table_of_irreducible_polynomials 7 -end
	pdflatex Irred_q2_d7.tex
	open Irred_q2_d7.pdf

# 18 polys

irred_8_2:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
		-make_table_of_irreducible_polynomials 8 -end
	pdflatex Irred_q2_d8.tex
	open Irred_q2_d8.pdf

# 30 polys

irred_9_2:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
		-make_table_of_irreducible_polynomials 9 -end
	pdflatex Irred_q2_d9.tex
	open Irred_q2_d9.pdf

# 56 polys

irred_10_2:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
		-make_table_of_irreducible_polynomials 10 -end
	pdflatex Irred_q2_d10.tex
	open Irred_q2_d10.pdf

# 99 polys

irred_2_4:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 4 -end \
		-with F -do \
		-finite_field_activity \
		-make_table_of_irreducible_polynomials 2 -end
	pdflatex Irred_q4_d2.tex
	open Irred_q4_d2.pdf

# 6 polys


irred_3_4:
	$(ORBITER) -v 6 \
		-define F -finite_field -q 4 -end \
		-with F -do \
		-finite_field_activity \
		-make_table_of_irreducible_polynomials 3 -end
	pdflatex Irred_q4_d3.tex
	open Irred_q4_d3.pdf

# 20 polys


F2_get_primitive_poly_of_deg_10:
	$(ORBITER) -v 6 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
		-get_primitive_polynomial 10 -end


F2_get_primitive_poly_range_2_10:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
		-get_primitive_polynomial_in_range 2 10 -end

#| grep //
# for degree 61, it gets stuck in factoring 2^61-1 (which is prime)





###############################################################################
# Section 8.2: Multivariate Polynomials



SECTION_MULTIVARIATE_POLYNOMIALS:


test_8_2:
	make Cremona_map
	make arcs_5_2_q11
	make arcs_5_2_q11_ideal
	make surface_9lines_4E_ideal
	make F_9_q7
	make random_k_subsets_PG_2_11
	make line_type_in_PG_2_11
	make random_arc_5_2_q11_ideal
	make Endrass_F7.txt
	make octic_prepare


CREMONA_MAP_Y0="3*y0*y0*y0*y0*y0*y2+4*y0*y0*y0*y1*y1*y2\
+2*y0*y0*y0*y2*y2*y2+y0*y1*y1*y1*y1*y2\
+6*y0*y1*y1*y2*y2*y2+9*y0*y2*y2*y2*y2*y2"

CREMONA_MAP_Y1="y0*y0*y0*y0*y0*y1+5*y0*y0*y0*y1*y1*y1\
+12*y0*y0*y0*y1*y2*y2+3*y0*y1*y1*y1*y1*y1\
+5*y0*y1*y1*y1*y2*y2+y0*y1*y2*y2*y2*y2"

CREMONA_MAP_Y2="10*y0*y0*y0*y0*y0*y0+11*y0*y0*y0*y0*y1*y1\
+11*y0*y0*y0*y0*y2*y2+4*y0*y0*y1*y1*y1*y1\
+9*y0*y0*y1*y1*y2*y2+4*y0*y0*y2*y2*y2*y2"

CREMONA_MAP_Y3="0"



Cremona_map:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 13 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define R -polynomial_ring \
			-field F \
			-number_of_variables 3 \
			-homogeneous_of_degree 6 \
			-monomial_ordering_lex \
			-variables "y0,y1,y2" "y_0,y_1,y_2" \
			-end \
		-define Y0 -formula \
			"y0" "y_0" "y0,y1,y2" \
			$(CREMONA_MAP_Y0) \
		-define Y1 -formula \
			"y1" "y_1" "y0,y1,y2" \
			$(CREMONA_MAP_Y1) \
		-define Y2 -formula \
			"y2" "y_2" "y0,y1,y2" \
			$(CREMONA_MAP_Y2) \
		-define Cremona -collection "Y0,Y1,Y2" \
		-with P -do \
		-projective_space_activity \
			-map R Cremona "" \
		-end




arcs_5_2_q11:
	$(ORBITER) -v 4 \
		-define F -finite_field -q 11 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define Control -poset_classification_control \
			-problem_label arcs_5_2_q11 \
			-W -depth 5 \
		-end \
		-with P -do \
		-projective_space_activity \
			-classify_arcs \
				-control Control \
				-target_size 5 \
				-d 2 \
			-end \
		-end
	#pdflatex arcs_5_2_q11_poset.tex
	#open arcs_5_2_q11_poset.pdf


# 2 orbits: 
# 0 1 2 3 37
# 0 1 2 3 49


arcs_5_2_q11_ideal:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 11 -end \
		-define R -polynomial_ring \
			-field F \
			-number_of_variables 3 \
			-homogeneous_of_degree 2 \
			-monomial_ordering_lex \
			-variables "x0,x1,x2" "x_0,x_1,x_2" \
			-end \
		-define C -combinatorial_objects \
			-file_of_points arcs_5_2_q11_lvl_5 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-ideal R \
		-end

#( 0, 1, 2, 3, 37 )
#generator 0 / 1 is 7*x0*x1 + 5*x0*x2 + 10*x1*x2
#We found 12 points on the generator of the ideal
#They are : ( 0, 1, 2, 3, 37, 54, 74, 80, 93, 105, 121, 128 )

#( 0, 1, 2, 3, 49 )
#generator 0 / 1 is 4*x0*x1 + 8*x0*x2 + 10*x1*x2
#looping over all generators of the ideal:
#generator 0 / 1 is ( 0, 4, 8, 0, 10, 0 ) : 
#We found 12 points on the generator of the ideal
#They are : ( 0, 1, 2, 3, 41, 49, 58, 77, 83, 95, 109, 130 )



PTS_OF_SURFACE_ORBIT211_Q3_L9_E4="\
0,1,2,5,7,8,10,14,9,12, \
15,3,16,37,31,34,20,19,17,32,36,33"


surface_9lines_4E_ideal:
	$(ORBITER) -v 2 \
		-define Pts -vector -dense \
			$(PTS_OF_SURFACE_ORBIT211_Q3_L9_E4) \
			-end \
		-define F -finite_field -q 3 -end \
		-define R -polynomial_ring \
			-field F \
			-number_of_variables 4 \
			-homogeneous_of_degree 3 \
			-monomial_ordering_lex \
			-variables "x0,x1,x2,x3" "x_0,x_1,x_2,x_3" \
			-end \
		-with R -do \
			-ring_theoretic_activity \
			-ideal "surf_eqn" "surf\_eqn" Pts \
			-end 


#The ideal has dimension 2
#generators for the ideal:
#0 1 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 
#0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 
#x0*x0*x1 + 2*x0*x1*x1 + 2*x0*x1*x3
#2*x2*x2*x3 + 2*x2*x3*x3


SURFACE_F_9="x0*x0*x1 - x0*x1*x1 -x0*x1*x3 -x2*x2*x3 - x2*x3*x3"

F_9_q7:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 7 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define F_9 -cubic_surface -space P \
			-by_equation "F_9" \
			"\DF_9\D" "x0,x1,x2,x3" \
			$(SURFACE_F_9) \
			"" \
			"\Dno parameters\D" \
		-end \
		-with F_9 -do \
		-cubic_surface_activity \
			-report \
		-end
	pdflatex surface_equation_F_9_q7_report.tex
	open surface_equation_F_9_q7_report.pdf




# we create 20 5-subsets of PG(2,11) at random. Note that PG(2,11) has 133 points.

random_k_subsets_PG_2_11:
	$(ORBITER) -v 4 \
		-create_random_k_subsets 133 5 20


#random_k_subsets_n133_k5_nb20.csv


# We compute the line intersections:

line_type_in_PG_2_11:
	$(ORBITER) -v 3 \
		-orbiter_path $(ORBITER_PATH) \
		-define F -finite_field -q 11 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define C -combinatorial_objects \
			-file_of_points random_k_subsets_n133_k5_nb20.csv \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-line_type P random_sets \


# the second one is an arc: 3,33,40,83,102

# we compute the ideal:


random_arc_5_2_q11_ideal:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 11 -end \
		-define R -polynomial_ring \
			-field F \
			-number_of_variables 3 \
			-homogeneous_of_degree 2 \
			-monomial_ordering_lex \
			-variables "x0,x1,x2" "x_0,x_1,x_2" \
			-end \
		-define C -combinatorial_objects \
			-set_of_points "3,33,40,83,102" \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-ideal R \
		-end

#generator 0 / 1 is 10*x0*x0 + 3*x0*x1 + 8*x0*x2 + 2*x1*x1 + 10*x2*x2
#We found 12 points on the generator of the ideal
#They are : ( 3, 15, 19, 33, 40, 42, 46, 50, 83, 88, 102, 108 )




Endrass_F7.txt:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 7 -end \
		-define R -polynomial_ring -field F \
			-number_of_variables 4 \
			-homogeneous_of_degree 8 \
			-end \
		-define eqn -vector -field F -sparse 165 \
			$(ENDRASS_SPARSE) -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define Endrass_F7 -geometric_object P \
			-projective_variety R \
				"Endrass_F7" \
				"Endrass\_F7" \
				eqn \
		-end \
		-with Endrass_F7 -do \
		-combinatorial_object_activity -save \
		-end



# we created a set of 33 points, called Endrass_F7.txt



octic_prepare:
	$(ORBITER) -v 4 \
		-define A -vector -format 1 -dense "1,1,1,1" -end \
		-define D -diophant \
			-label octic_monomials \
			-coefficient_matrix A \
			-RHS "8,8,1" \
			-x_min_global 0 -x_max_global 8 \
		-end \
		-with D -do \
			-diophant_activity -solve_mckay \
		-end
	sort -r octic_monomials.sol >octic_monomials_sorted.txt

#Found 165 solutions with 210 backtrack steps
# 165=binomial(11,3)





###############################################################################
# Chapter 9 - Applications
###############################################################################


###############################################################################
# Section 9.1: Number Theory


SECTION_NUMBER_THEORY:


test_9_1:
	make inverse_mod_a
	make jacobi_35_41
	make jacobi_33_41
	make jacobi_a
	make jacobi_5_19
	make sqrt_mod_7817


inverse_mod_26_99:
	$(ORBITER) -v 2 -inverse_mod 26 99


inverse_mod_a:
	$(ORBITER) -v 2 -inverse_mod 18059241 58014043


jacobi_35_41:
	$(ORBITER) -v 5 -jacobi 35 41
	pdflatex jacobi_35_41.tex
	open jacobi_35_41.pdf


jacobi_33_41:
	$(ORBITER) -v 5 -jacobi 33 41
	pdflatex jacobi_33_41.tex
	open jacobi_33_41.pdf


jacobi_a:
	$(ORBITER) -v 5 -jacobi 2221 7817

jacobi_5_19:
	$(ORBITER) -v 5 -jacobi 5 19

sqrt_mod_7817:
		$(ORBITER) -v 2 -square_root_mod 2221 7817








###############################################################################
# Section 9.2: Representation Theory

SECTION_REPRESENTATION_THEORY:


test_9_2:
	make representation_on_polynomials_of_degree_3
	make representation_tetrahedral_group_on_polynomials_of_degree_3


representation_on_polynomials_of_degree_3:
	$(ORBITER) -v 4 \
		-define G -linear_group -PGL 4 3 -end \
		-with G -do \
		-group_theoretic_activity \
			-representation_on_polynomials 3 \
		-end 
	$(ORBITER) -v 2 \
		-loop L 0 9 1 -draw_matrix \
			-input_csv_file PGL_4_3_rep_3_%L.csv \
			-box_width 40 -bit_depth 24 -partition 3 20 20 -end \
		-end_loop L




representation_tetrahedral_group_on_polynomials_of_degree_3:
	$(ORBITER) -v 4 \
		-define G -linear_group -GL 3 3 \
		-subgroup_by_generators "tetra" "12" 2 \
		"0,1,0,0,0,1,1,0,0, 0,0,1,2,0,0,0,2,0" \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-representation_on_polynomials 3 \
		-end 
	$(ORBITER) -v 2 -loop L 0 2 1 -draw_matrix \
		-input_csv_file GL_3_3_Subgroup_tetra_12_rep_3_%L.csv \
		-box_width 40 -bit_depth 24 -partition 3 10 10 -end -end_loop L
	open GL_3_3_Subgroup_tetra_12_rep_3_0_draw.bmp
	open GL_3_3_Subgroup_tetra_12_rep_3_1_draw.bmp

# write GL_3_3_Subgroup_tetra_12_rep_3_0.csv


###############################################################################
# Section 9.3: Cryptography 


SECTION_CRYPTOGRAPHY:



test_9_3:
	make EC_add
	make EC_cyclic_subgroup
	make EC_points_13
	make EC_points_199
	make EC_Koblitz_encoding
	make EC_bsgs
	make EC_bsgs_decode
	make NTRU_Alice1
	make NTRU_Alice2
	make NTRU_Alice_public_key
	make NTRU_encrypt
	make NTRU_decrypt1
	make NTRU_decrypt2
	make NTRU_decrypt3
	make NTRU_decrypt4
	make NTRU_decrypt5
	make inv_59_mod
	make RSA_e
	make RSA_d
	make im1
	make RSA_e1
	make RSA_d1
	make im1061
	make RSA_e2
	make RSA_d2
	make im3
	make RSA_e3
	make RSA_d3
	make im4
	make RSA_e4
	make RSA_d4
	make im5
	make RSA_e5
	make RSA_d5
	make RSA_d6
	make smooth
	make im7
	make RSA_e7
	make im8
	make RSA_e8
	make sqrt_big
	make sqrt_mod_33_41
	#make quadratic_sieve
	make pseudoprime3
	make pseudoprime10
	make PR10_test1
	make pseudoprime11
	make pseudoprime20
	make PR10
	make pseudoprime50
	make pseudoprime51
	make pseudoprime30
	make pseudoprime31
	make pseudoprime33
	make pseudoprime34
	make pseudoprime35
	make pseudoprime36
	make MATH360_hw2
	make F_256_Rijndahl
	make all_square_roots_mod_n_1549411
	make power_mod_211



EC_add:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 11 -end \
		-with F -do \
		-finite_field_activity \
		-EC_add 1 3 "1,4" "1,4" -end

EC_cyclic_subgroup:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 11 -end \
		-with F -do \
		-finite_field_activity \
		-EC_cyclic_subgroup 1 3 "1,4" -end


EC_points_13:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 13 -end \
		-with F -do \
		-finite_field_activity \
		-EC_points "EC_2_5_q13" 2 5 -end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file EC_2_5_q13_points_xy.csv \
		-box_width 20 -bit_depth 24 \
		-partition 2 "1,1,1,1,1,1,1,1,1,1,1,1,1" "1,1,1,1,1,1,1,1,1,1,1,1,1" -end




EC_points_199:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 199 -end \
		-with F -do \
		-finite_field_activity \
		-EC_points "EC_5_7_q199" 5 7 -end
	$(ORBITER) -v 2 \
		-draw_matrix -input_csv_file EC_5_7_q199_points_xy.csv \
		-box_width 10 -bit_depth 24 \
		-partition 2 199 199 -end

EC_Koblitz_encoding:
	$(ORBITER) -v 6 -seed 17 \
		-define F -finite_field -q 199 -end \
		-with F -do \
		-finite_field_activity \
		-EC_Koblitz_encoding 5 7 67 "147,164" "DEADBEEF" \
		-end

EC_bsgs:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 199 -end \
		-with F -do \
		-finite_field_activity \
		-EC_bsgs 5 7 "147,164" 212 \
		"172,158,45,195,50,22,10,103,55,33,50,22,\
		145,105,31,74,73,155,67,60,25,6" \
		-end

EC_bsgs_decode:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 199 -end \
		-with F -do \
		-finite_field_activity \
		-EC_bsgs_decode 5 7 "129,176" 212 \
		"127,188,51,141,85,29,106,90,41,105,179,71,\
		171,2,16,197,183,72,27,129,37,10" \
		"50,179,169,13,153,169,115,116,188,110,176" \
		-end





NTRU_N=7

NTRU_P=3

NTRU_Q=41

NTRU_D=2

NTRU_XN1="-1,0,0,0,0,0,0,1,"

# D + 1 plus ones and D minus ones

ALICE_PRIVATE_F="-1,0,1,1,-1,0,1"

# D plus ones and D minus ones

ALICE_PRIVATE_G="0,-1,-1,0,1,0,1"

NTRU_Alice1:
	$(ORBITER) -v 2 \
		-define F -finite_field -q $(NTRU_Q) -end \
		-with F -do \
		-finite_field_activity \
		-extended_gcd_for_polynomials \
			$(NTRU_XN1) $(ALICE_PRIVATE_F) \
		-end

#F_q(x) = 8X^{6} + 26X^{5} + 31X^{4} + 21X^{3} + 40X^{2} + 2X + 37
ALICE_PRIVATE_FQ="37,2,40,21,31,26,8"


NTRU_Alice2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q $(NTRU_P) -end \
		-with F -do \
		-finite_field_activity \
		-extended_gcd_for_polynomials \
			$(NTRU_XN1) $(ALICE_PRIVATE_F) \
		-end

#F_p(x) = X^{6} + 2X^{5} + X^{3} + X^{2} + X + 1
ALICE_PRIVATE_FP="1,1,1,1,0,2,1"

NTRU_Alice_public_key:
	$(ORBITER) -v 2 \
		-define F -finite_field -q $(NTRU_Q) -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_mult_mod $(ALICE_PRIVATE_F) \
			$(ALICE_PRIVATE_G) $(NTRU_XN1) \
		-end

#C(X)=20X^{6} + 40X^{5} + 2X^{4} + 38X^{3} + 8X^{2} + 26X + 30
ALICE_PUBLIC_KEY="30,26,8,38,2,40,20"

BOB_MESSAGE="1,-1,1,1,0,-1"

BOB_ONE_TIME_KEY="-1,1,0,0,0,-1,1"


NTRU_encrypt:
	$(ORBITER) -v 2 \
		-define F -finite_field -q $(NTRU_Q) -end \
		-with F -do \
		-finite_field_activity \
		-NTRU_encrypt $(NTRU_N) $(NTRU_P) $(ALICE_PUBLIC_KEY) \
		$(BOB_ONE_TIME_KEY) $(BOB_MESSAGE) -end

# E(X) = 31X^{6} + 19X^{5} + 4X^{4} + 2X^{3} + 40X^{2} + 3X + 25
BOB_ENCRYPT= "25,3,40,2,4,19,31"


NTRU_decrypt1:
	$(ORBITER) -v 2 \
		-define F -finite_field -q $(NTRU_Q) -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_mult_mod $(ALICE_PRIVATE_F) \
			$(BOB_ENCRYPT) $(NTRU_XN1) \
		-end

#C(X)=X^{6} + 10X^{5} + 33X^{4} + 40X^{3} + 40X^{2} + X + 40
ALICE_C1="40,1,40,40,33,10,1"

NTRU_decrypt2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q $(NTRU_Q) -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_center_lift $(ALICE_C1) -end

#A(X)=X^{6} + 10X^{5} - 8X^{4} - X^{3} - X^{2} + X - 1
ALICE_C2="-1,1,-1,-1,-8,10,1"

NTRU_decrypt3:
	$(ORBITER) -v 2 \
		-define F -finite_field -q $(NTRU_P) -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_reduce_mod_p $(ALICE_C2) -end

#A(X)=X^{6} + X^{5} + X^{4} + 2X^{3} + 2X^{2} + X + 2
ALICE_C3="2,1,2,2,1,1,1"

NTRU_decrypt4:
	$(ORBITER) -v 2 \
		-define F -finite_field -q $(NTRU_Q) -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_mult_mod $(ALICE_PRIVATE_FP) \
			$(ALICE_C3) $(NTRU_XN1) \
		-end

#C(X)=2X^{5} + X^{3} + X^{2} + 2X + 1
ALICE_C4="1,2,1,1,0,2"


NTRU_decrypt5:
	$(ORBITER) -v 2 \
		-define F -finite_field -q $(NTRU_P) -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_center_lift $(ALICE_C4) -end

#A(X)= - X^{5} + X^{3} + X^{2} - X + 1
#plaintext BOB_MESSAGE



######


inv_59_mod:
	$(ORBITER) -v 2 -inverse_mod 59 10200

# the inverse of 59 mod 10200 is 2939



RSA_e:
	$(ORBITER) -v 2 \
		-RSA 59 10403 2 "1921,1605,1804,2116,0518"


RSA_d:
	$(ORBITER) -v 2 \
		-RSA 2939 10403 2 "902,3509,9833,3548,5181"


im1:
	$(ORBITER) -v 2 -inverse_mod 869 1843488

#the inverse of 869 mod 1843488 is 386093


# FUNFACTOR:

RSA_e1:
	$(ORBITER) -v 2 \
		-RSA 386093 1846303 3 "62114,60103,201518"


RSA_d1:
	$(ORBITER) -v 2 \
		-RSA 869 1846303 3 "1248407,345776,317846"





##############################
# 5503*4603 = 25330309
# 5502*4602 = 25320204


im1061:
	$(ORBITER) -v 2 \
		-inverse_mod 1061 25320204
	
# the inverse of 1061 mod 25320204 is 2076209



RSA_e2:
	$(ORBITER) -v 2 \
		-RSA_encrypt_text 2076209 25330309 3 creamcheese

#-RSA_encrypt_text 386093 1846303 creamcheese
#408918,1735142,239809,654636


RSA_d2:
	$(ORBITER) -v 2 \
		-RSA 1061 25330309 3 "19019931,1619805,740498,2671344"


##############################
# 7253*8171 = 59264263
# 7252*8170 = 59248840


im3:
	$(ORBITER) -v 2 \
		-inverse_mod 2909 59248840
	
#the inverse of 2909 mod 59248840 is 4358629

RSA_e3:
	$(ORBITER) -v 2 \
		-RSA_encrypt_text 2909 59264263 3 encrypted

RSA_d3:
	$(ORBITER) -v 2 \
		-RSA 4358629 59264263 3 "35270141,9642524,49091707"

#51403,182516,200504 = encrypted


####
# 7879 * 7901 = 62251979
# 7878 * 7900 = 62236200

# e = 

im4:
	$(ORBITER) -v 2 -inverse_mod 583 62236200

# the inverse of 583 mod 62236200 is 32559247

RSA_e4:
	$(ORBITER) -v 2 \
		-RSA_encrypt_text 583 62251979 3 venividivici

#-RSA_encrypt_text 583 62251979 venividivici
#40513610,53979973,56449676,35068535

RSA_d4:
	$(ORBITER) -v 2 \
		-RSA 32559247 62251979 "40513610,53979973,56449676,35068535"



######
# 7369 * 7127 = 52518863
# 7368 * 7126 = 52504368


im5:
	$(ORBITER) -v 2 -inverse_mod 173 52504368

#the inverse of 173 mod 52504368 is 38543669
	
RSA_e5:
	$(ORBITER) -v 2 \
		-RSA_encrypt_text 38543669 52518863 3 fascinating

#-RSA_encrypt_text 38543669 52518863 fascinating
#31526751,8962078,51045732,51894467
		

RSA_d5:
	$(ORBITER) -v 2 \
		-RSA 173 52518863 "31526751,8962078,51045732,51894467"


RSA_d6:
	$(ORBITER) -v 2 \
		-RSA 47177497 55040413 "28702119,48926559"


smooth:
	$(ORBITER) -v 2 \
		-sift_smooth 100000 100 "2,3,5,7,11,13,17,19"


		
######
# 1999 * 7907 = 15806093
# 1998 * 7906 = 15796188

im7:
	$(ORBITER) -v 2 -inverse_mod 3221 15796188

#the inverse of 3221 mod 15796188 is 10048553


RSA_e7:
	$(ORBITER) -v 2 \
		-RSA_encrypt_text 10048553 15806093 3 beachandfun
		
#
# 7853 * 7673 = 60256069
# 7852 * 7672 = 60240544

im8:
	$(ORBITER) -v 2 -inverse_mod 9017 60240544


#the inverse of 9017 mod 60240544 is 14430473

RSA_e8:
	$(ORBITER) -v 2 \
		-RSA_encrypt_text 9017 60256069 3 strawberry


sqrt_big:
	$(ORBITER) -v 2 -square_root 1002001
	
sqrt_mod_33_41:
	$(ORBITER) -v 2 -square_root_mod 33 41
	
quadratic_sieve:
	$(ORBITER) -v 5 -quadratic_sieve 31 500 1



######

pseudoprime3:
	$(ORBITER) -v 5 \
		-seed 2531011 -find_pseudoprime 3 5 0 0 
	pdflatex pseudoprime_3.tex
	open pseudoprime_3.pdf

pseudoprime10:
	$(ORBITER) -v 5 \
		-seed 2531011 -find_pseudoprime 10 5 5 5
	pdflatex pseudoprime_10.tex
	open pseudoprime_10.pdf

# 4460190157


PR10_test1:
	$(ORBITER) -v 5 -power_mod 1293 2230095078 4460190157
	$(ORBITER) -v 5 -power_mod 9865 2230095078 4460190157
	$(ORBITER) -v 5 -power_mod 19645 2230095078 4460190157
	$(ORBITER) -v 5 -power_mod 974586571 2230095078 4460190157
	$(ORBITER) -v 5 -power_mod 974586571 1486730052 4460190157
	$(ORBITER) -v 5 -power_mod 974586571 15222492 4460190157
	$(ORBITER) -v 5 -power_mod 974586571 284796 4460190157



pseudoprime11:
	$(ORBITER) -v 5 \
		-seed 2531011 -find_pseudoprime 11 5 5 5 
	pdflatex pseudoprime_11.tex
	open pseudoprime_11.pdf

# 63814633367

# product is 284625399616057168619


pseudoprime20:
	$(ORBITER) -v 5 \
		-seed 2531011 -find_pseudoprime 20 5 5 5 
	pdflatex pseudoprime_20.tex
	open pseudoprime_20.pdf


PR10:
	$(ORBITER) -v 5 -primitive_root 4460190157


# mistake! long integer overflow
# a primitive root modulo 165222861 is 1293




pseudoprime50:
	$(ORBITER) -v 5 \
		-seed 2531011 -find_pseudoprime 50 5 0 0
	pdflatex pseudoprime_50.tex
	open pseudoprime_50.pdf


#91322792878581218181431392170986926262336688354473

pseudoprime51:
	$(ORBITER) -v 5 \
		-seed 2531011 -find_pseudoprime 51 5 5 5 
	pdflatex pseudoprime_51.tex
	open pseudoprime_51.pdf

#754600727746834470214089702490004944659715367045417

# product 68912245966050819606199994423264315732335295324400658436661744403244049572914094379904326661586100241

pseudoprime30:
	$(ORBITER) -v 5 \
		-seed 2531011 -find_pseudoprime 30 5 5 5 
	pdflatex pseudoprime_30.tex
	open pseudoprime_30.pdf

# 286525565474504516914595596387

pseudoprime31:
	$(ORBITER) -v 5 \
		-seed 2531011 -find_pseudoprime 31 5 5 5 
	pdflatex pseudoprime_31.tex
	open pseudoprime_31.pdf
#8777266765422645523724129853331

# 2514911323283298698837184692002835573476743643265896783515097

# maybe 2 seconds


pseudoprime33:
	$(ORBITER) -v 5 \
		-seed 2531011 -find_pseudoprime 33 5 5 5 
	pdflatex pseudoprime_33.tex
	open pseudoprime_33.pdf


#371674199498295345543363004459891


pseudoprime34:
	$(ORBITER) -v 5 \
		-seed 2531011 -find_pseudoprime 34 5 5 5 
	pdflatex pseudoprime_34.tex
	open pseudoprime_34.pdf

#9309708224110488378214945245346817

# 3460178351758962531912872979731874528849142238619677890786061016947
# 18 sec



pseudoprime35:
	$(ORBITER) -v 5 \
		-seed 2531011 -find_pseudoprime 35 5 5 5 
	pdflatex pseudoprime_35.tex
	open pseudoprime_35.pdf

#81329557792505271120435930267680203

pseudoprime36:
	$(ORBITER) -v 5 \
		-seed 2531011 -find_pseudoprime 36 5 5 5 
	pdflatex pseudoprime_36.tex
	open pseudoprime_36.pdf

#162624680891993404333363207561599139

# 13226193383093105242537919350220354135219441323641636665484262532145217
# factoring takes 46 seconds


MATH360_hw2:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 16 -end \
		-with F -do -finite_field_activity \
		-parse_and_evaluate "test" "" "a+b" "a=8,b=14" -end
	$(ORBITER) -v 3 \
		-define F -finite_field -q 16 -end \
		-with F -do -finite_field_activity \
		-parse_and_evaluate "test" "" "a*b" "a=9,b=13" -end
	$(ORBITER) -v 3 \
		-define F -finite_field -q 16 -end \
		-with F -do -finite_field_activity \
		-parse_and_evaluate "test" "" "a*a*a*a*a" "a=9" -end
	$(ORBITER) -v 3 \
		-define F -finite_field -q 16 -end \
		-with F -do -finite_field_activity \
		-parse_and_evaluate "test" "" "(a+b)*(a+b)" "a=5,b=7" -end
	$(ORBITER) -v 3 \
		-define F -finite_field -q 16 -end \
		-with F -do -finite_field_activity \
		-parse_and_evaluate "test" "" "a*a+b*b" "a=5,b=7" -end


F_256_Rijndahl:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 256 -override_polynomial 283 -end \
		-with F -do -finite_field_activity -cheat_sheet_GF -end







all_square_roots_mod_n_1549411:
	$(ORBITER) -v 3 -all_square_roots_mod_n 1075922 1549411
	


power_mod_211:
	$(ORBITER) -v 3 -power_function_mod_n 2 211
	$(ORBITER) -v 3 \
		-plot_function power_function_k2_n211.csv
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file power_function_k2_n211_graph.csv \
		-box_width 10 -bit_depth 8 \
		-partition 3 211 211 -end
	open power_function_k2_n211_graph_draw.bmp



###############################################################################
# Chapter 10 - Coding Theory
###############################################################################



###############################################################################
# Section 10.1: Coding Theory

SECTION_CODING_THEORY_INTRODUCTION:

test_10_1:
	make Allen_Gates_noise_1_percent
	make Hamming_space_4_2_distance_matrix
	make Hamming_space_4_2_distance_matrix_draw
	make Hamming_code_macwilliams
	make code_5_2_3_diagram
	make Hamming_5_2_graph
	make Hamming_5_2_with_5_2_3_code
	make Sylvester_Hadamard_code_8


Allen_Gates_noise_1_percent:
	cp $(MY_PATH)/examples/users_guide/allen_Gates.bmp .
	$(ORBITER) -v 3 \
		-random_noise_in_bitmap_file \
		allen_Gates.bmp \
		allen_Gates_1.bmp \
		1 100 
	open allen_Gates_1.bmp


Hamming_space_4_2_distance_matrix:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
			-Hamming_space_distance_matrix 4 \
		-end


Hamming_space_4_2_distance_matrix_draw:
	$(ORBITER) -v 2 \
		-draw_matrix \
			-input_csv_file Hamming_n4_q2.csv \
			-box_width 20 -bit_depth 24 \
			-partition 4 16 16 \
		-end
	open Hamming_n4_q2_draw.bmp



Hamming_code_macwilliams:
	$(ORBITER) -v 2 \
		-make_macwilliams_system 7 4 2
	pdflatex MacWilliams_n7_k4_q2.tex
	open MacWilliams_n7_k4_q2.pdf





code_5_2_3_diagram:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
			-general_code_binary 5 "code_5_2_3" \
			$(CODE_5_2_3_CODEWORDS) \
			-metric_balls 1 \
		-end
	$(ORBITER) -v 2 \
		-draw_matrix \
			-input_csv_file code_5_2_3_char_func_5_4.csv \
			-box_width 25 -bit_depth 24 \
			-partition 4 8 4 \
		-end



Hamming_5_2_graph:
	$(ORBITER) -v 2 \
		-define G -graph -Hamming 5 2 -end \
		-with G -do \
		-graph_theoretic_activity -export_csv -end \
		-with G -do \
		-graph_theoretic_activity -export_graphviz -end \
		-with G -do \
		-graph_theoretic_activity -save -end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file Hamming_5_2.csv \
		-box_width 8 -bit_depth 24 -partition 4 32 32 -end
	dot -Tpng Hamming_5_2.gv >Hamming_5_2.png


Hamming_5_2_with_5_2_3_code:
	$(ORBITER) -v 2 \
		-define G -graph -Hamming 5 2 \
			-subset "_code_5_2_3" "\\_code\\_5\\_2\\_3" \
			$(CODE_5_2_3_CODEWORDS) -end \
		-with G -do \
		-graph_theoretic_activity -export_csv -end \
		-with G -do \
		-graph_theoretic_activity -export_graphviz -end \
		-with G -do \
		-graph_theoretic_activity -save -end \
		-with G -do \
		-graph_theoretic_activity -automorphism_group -end
	pdflatex Hamming_5_2_code_5_2_3_report.tex
	open Hamming_5_2_code_5_2_3_report.pdf

# group has order 32


# n must be a power of 2, and at least 4:
# minus one is represented as 2.

Sylvester_Hadamard_code_8:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 3 -end \
		-with F -do -coding_theoretic_activity \
			-Sylvester_Hadamard_code 8 \
		-end




###############################################################################
# Section 10.2: Linear codes

SECTION_CODING_THEORY_LINEAR_CODES:




test_10_2:
	make RM_3_1
	make code_6
	make Hamming_generator
	make simplex_code
	make Hamming_generator
	make Hamming_code
	make RM_3_1_and_codewords
	make RM_3_1_from_generator_matrix
	make RM_4_1_and_codewords
	make RM_5_1_and_codewords
	make Hamming_code_by_rows
	make Hamming_code_long
	make Hamming_code_diagram
	make Hamming_code_words
	make Hamming_weight_enumerator
	make Hamming_minimum_distance
	make Golay23_minimum_distance
	make code_Hamming_systematic
	make Hamming_RREF
	make Hamming_nullspace



RM_3_1:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define C -code -field F \
			-Reed_Muller 3 \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-export_magma RM_3_1.magma \
		-end \
		-with C -do -coding_theoretic_activity \
			-report \
		-end
	pdflatex RM_3_code_n8_k4_q2.tex
	open RM_3_code_n8_k4_q2.pdf


code_6:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define C -code -field F \
			-basis 6 "60,50,41" \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-make_diagram \
		-end \
		-with C -do -coding_theoretic_activity \
			-report \
		-end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file by_basis_n6_k3_char_func_6_8.csv \
		-box_width 20 -bit_depth 24 \
		-partition 2 "1,1,1,1,1,1,1,1" "1,1,1,1,1,1,1,1" \
		-end
	pdflatex by_basis_n6_k3_code_n6_k3_q2.tex
	open by_basis_n6_k3_code_n6_k3_q2.pdf
	open by_basis_n6_k3_char_func_6_8_draw.bmp

# linear code with generator matrix
# 111100 = 60
# 110010 = 50
# 101001 = 41




simplex_code:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -field F -format 3 \
			-dense $(SIMPLEX_CODE_GENERATOR) \
		-end \
		-define C -code -field F \
			-generator_matrix v \
		-end \
		-with C -do -coding_theoretic_activity \
			-report \
		-end
	pdflatex by_genma_n7_k3_code_n7_k3_q2.tex
	open by_genma_n7_k3_code_n7_k3_q2.pdf



Hamming_generator:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -field F -format 3 \
			-dense $(SIMPLEX_CODE_GENERATOR) \
		-end \
		-with F -do \
		-finite_field_activity \
			-nullspace v \
		-end
	pdflatex nullspace_3_7.tex
	open nullspace_3_7.pdf

# basis in binary:
# 67,37,22,15
#-normalize_from_the_right \




Hamming_code:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -field F -format 3 \
			-dense $(SIMPLEX_CODE_GENERATOR) \
		-end \
		-define C -code -field F \
			-generator_matrix v \
			-dual -end \
		-end \
		-with C -do -coding_theoretic_activity \
			-export_magma Hamming.magma \
		-end 

# writes Hamming.magma



RM_3_1_and_codewords:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define C -code -field F \
			-Reed_Muller 3 \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-export_magma RM_3_1.magma \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-export_codewords RM_3_1_codewords.csv \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-export_genma RM_3_1_genma.csv \
		-end 


RM_3_1_from_generator_matrix:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define genma -vector -format 8 -field F \
			-compact $(CODE_RM_3_1_GENMA) \
		-end \
		-define C -code -field F \
			-generator_matrix genma \
		-end
	#pdflatex code_n8_k4_q2.tex
	#open code_n8_k4_q2.pdf

#Codewords: (0,255,170,85,204,51,102,153,240,15,90,165,60,195,150,105)


RM_4_1_and_codewords:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define C -code -field F -Reed_Muller 4 -end \
		-with C -and F -do -coding_theoretic_activity \
			-export_magma RM_4_1.magma \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-export_codewords RM_4_1_codewords.csv \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-export_genma RM_4_1_genma.csv \
		-end 

RM_5_1_and_codewords:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define C -code -field F -Reed_Muller 5 -end \
		-with C -and F -do -coding_theoretic_activity \
			-export_magma RM_5_1.magma \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-export_codewords RM_5_1_codewords.csv \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-export_genma RM_5_1_genma.csv \
		-end 




Hamming_code_by_rows:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -dense $(HAMMING_CODE_ROWS_IN_BINARY_RANKS) -end \
		-define C -code -field F \
			-basis 7 v \
		-end
	#pdflatex code_n7_k4_q2.tex
	#open code_n7_k4_q2.pdf



Hamming_code_long:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define C -code -field F \
			-long_code 7 4 \
			"0,5,6" \
			"1,4,6" \
			"2,4,5" \
			"3,4,5,6" \
		-end 


Hamming_code_diagram:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -dense $(HAMMING_CODE_ROWS_IN_BINARY_RANKS) -end \
		-define C -code -field F \
			-basis 7 v \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-make_diagram \
		-end
	$(ORBITER) -v 2 \
		-draw_matrix \
			-input_csv_file by_basis_n7_k4_char_func_7_16.csv \
			-box_width 25 -bit_depth 24 \
			-partition 4 16 8 \
		-end
	open by_basis_n7_k4_char_func_7_16_draw.bmp


#			-metric_balls 1 \


Hamming_code_words:
	$(ORBITER) -v 2 -define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
		-general_code_binary 7 "Hamming_7_4_word_0" "0" \
		-metric_balls 1 \
		-end
	$(ORBITER) -v 2 -define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
		-general_code_binary 7 "Hamming_7_4_word_1" "67" \
		-metric_balls 1 \
		-end
	$(ORBITER) -v 2 -define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
		-general_code_binary 7 "Hamming_7_4_word_2" "37" \
		-metric_balls 1 \
		-end
	$(ORBITER) -v 2 -define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
		-general_code_binary 7 "Hamming_7_4_word_3" "102" \
		-metric_balls 1 \
		-end
	$(ORBITER) -v 2 -define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
		-general_code_binary 7 "Hamming_7_4_word_4" "22" \
		-metric_balls 1 \
		-end
	$(ORBITER) -v 2 -define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
		-general_code_binary 7 "Hamming_7_4_word_5" "85" \
		-metric_balls 1 \
		-end
	$(ORBITER) -v 2 -define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
		-general_code_binary 7 "Hamming_7_4_word_6" "51" \
		-metric_balls 1 \
		-end
	$(ORBITER) -v 2 -define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
		-general_code_binary 7 "Hamming_7_4_word_7" "112" \
		-metric_balls 1 \
		-end
	$(ORBITER) -v 2 -define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
		-general_code_binary 7 "Hamming_7_4_word_8" "15" \
		-metric_balls 1 \
		-end
	$(ORBITER) -v 2 -define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
		-general_code_binary 7 "Hamming_7_4_word_9" "76" \
		-metric_balls 1 \
		-end
	$(ORBITER) -v 2 -define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
		-general_code_binary 7 "Hamming_7_4_word_10" "42" \
		-metric_balls 1 \
		-end
	$(ORBITER) -v 2 -define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
		-general_code_binary 7 "Hamming_7_4_word_11" "105" \
		-metric_balls 1 \
		-end
	$(ORBITER) -v 2 -define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
		-general_code_binary 7 "Hamming_7_4_word_12" "25" \
		-metric_balls 1 \
		-end
	$(ORBITER) -v 2 -define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
		-general_code_binary 7 "Hamming_7_4_word_13" "90" \
		-metric_balls 1 \
		-end
	$(ORBITER) -v 2 -define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
		-general_code_binary 7 "Hamming_7_4_word_14" "60" \
		-metric_balls 1 \
		-end
	$(ORBITER) -v 2 -define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
		-general_code_binary 7 "Hamming_7_4_word_15" "127" \
		-metric_balls 1 \
		-end
	$(ORBITER) -v 2 -loop L 0 16 1 -draw_matrix \
		-input_csv_file Hamming_7_4_word_%L_char_func_7_1.csv \
		-box_width 25 -bit_depth 8 \
		-partition 4 16 8 -end \
		-end_loop L
	convert Hamming_7_4_word_0_char_func_7_1_draw.bmp Hamming_7_4_word_0_char_func_7_1_draw.png
	convert Hamming_7_4_word_1_char_func_7_1_draw.bmp Hamming_7_4_word_1_char_func_7_1_draw.png
	convert Hamming_7_4_word_2_char_func_7_1_draw.bmp Hamming_7_4_word_2_char_func_7_1_draw.png
	convert Hamming_7_4_word_3_char_func_7_1_draw.bmp Hamming_7_4_word_3_char_func_7_1_draw.png
	convert Hamming_7_4_word_4_char_func_7_1_draw.bmp Hamming_7_4_word_4_char_func_7_1_draw.png
	convert Hamming_7_4_word_5_char_func_7_1_draw.bmp Hamming_7_4_word_5_char_func_7_1_draw.png
	convert Hamming_7_4_word_6_char_func_7_1_draw.bmp Hamming_7_4_word_6_char_func_7_1_draw.png
	convert Hamming_7_4_word_7_char_func_7_1_draw.bmp Hamming_7_4_word_7_char_func_7_1_draw.png
	convert Hamming_7_4_word_8_char_func_7_1_draw.bmp Hamming_7_4_word_8_char_func_7_1_draw.png
	convert Hamming_7_4_word_9_char_func_7_1_draw.bmp Hamming_7_4_word_9_char_func_7_1_draw.png
	convert Hamming_7_4_word_10_char_func_7_1_draw.bmp Hamming_7_4_word_10_char_func_7_1_draw.png
	convert Hamming_7_4_word_11_char_func_7_1_draw.bmp Hamming_7_4_word_11_char_func_7_1_draw.png
	convert Hamming_7_4_word_12_char_func_7_1_draw.bmp Hamming_7_4_word_12_char_func_7_1_draw.png
	convert Hamming_7_4_word_13_char_func_7_1_draw.bmp Hamming_7_4_word_13_char_func_7_1_draw.png
	convert Hamming_7_4_word_14_char_func_7_1_draw.bmp Hamming_7_4_word_14_char_func_7_1_draw.png
	convert Hamming_7_4_word_15_char_func_7_1_draw.bmp Hamming_7_4_word_15_char_func_7_1_draw.png

#codewords
#0,67,37,102,22,85,51,112,15,76,42,105,25,90,60,127

#Hamming_7_4_word_0_diagram_7_1.csv


Hamming_weight_enumerator:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -field F -format 4 \
			-dense $(HAMMING_CODE_GENERATOR) \
		-end \
		-define C -code -field F \
			-generator_matrix v \
		-end \
		-with C -do \
		-coding_theoretic_activity \
			-weight_enumerator \
		-end

Hamming_minimum_distance:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -field F -format 4 \
			-dense $(HAMMING_CODE_GENERATOR) \
		-end \
		-with F -do \
		-coding_theoretic_activity \
			-minimum_distance v \
		-end


Golay23_minimum_distance:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -field F -format 12 \
			-dense $(GOLAY23_CODE_GENERATOR) \
		-end \
		-with F -do \
		-coding_theoretic_activity \
			-minimum_distance v \
		-end

#d=7 in 0 sec




code_Hamming_systematic:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -dense $(HAMMING_CODE_ROWS_IN_BINARY_RANKS) -end \
		-define C -code -field F \
			-basis 7 v \
		-end
	#$(ORBITER) -v 2 -draw_matrix \
	#	-input_csv_file code_matrix_16_8.csv \
	#	-box_width 25 -bit_depth 8 -partition 2 16 8 -end
	#open code_matrix_16_8_draw.bmp
	#pdflatex code_7_16.tex
	#open code_7_16.pdf


#	$(DRAW_PATH)/draw_matrix.out -read code_matrix_256_256.csv -box_width 10 

# 1 0 0 0 0 1 1 = 67
# 0 1 0 0 1 0 1 = 37
# 0 0 1 0 1 1 0 = 22
# 0 0 0 1 1 1 1 = 15


# ToDo

Hamming_RREF:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -format 4 -field F \
			-dense $(HAMMING_CODE_GENERATOR) \
		-end \
		-with F -do \
		-finite_field_activity \
			-RREF v \
		-end
	#pdflatex RREF_example_q2_4_7.tex
	#gs -sDEVICE=png16 -dFIXEDMEDIA \
	#	-dDEVICEWIDTHPOINTS=500 -dDEVICEHEIGHTPOINTS=450 \
	#	-r240 -oHamming_dual_page%02d.png \
	#	RREF_example_q2_4_7.pdf



Hamming_nullspace:
	$(ORBITER) -v 2 \
		-define F2 -finite_field -q 2 -end \
		-define v -vector -format 4 -field F2 \
			-dense $(HAMMING_CODE_GENERATOR) \
		-end \
		-with F2 -do \
		-finite_field_activity \
		-nullspace v \
		-normalize_from_the_right \
		-end
	pdflatex nullspace_4_7.tex
	open nullspace_4_7.pdf


#check equations of the Hamming code:
# a4+a5+a6+a7 =1+0+1+0=0 mod2 OK. 
# a2+a3+a6+a7 =0+1+1+0=0 mod2 OK. 
# a1+a3+a5+a7 =1+1+0+0=0 mod2 OK.

#1010101
#0110011
#0001111





###############################################################################
# Section 10.3: Coding Theory - Golay codes

SECTION_CODING_THEORY_GOLAY_CODES:


test_10_3:
	make Golay23_code_words
	make Golay23_code_diagram
	#make Golay23_code_diagram_draw
	make Golay24_make_code
	make Golay24_make_aut_gens
	make Golay24_make_aut_gens_classes
	make M24_elt_2A
	make M24_elt_2B
	make M24_2A_restricted
	make M24_2B_restricted
	make Golay24_2A_fixed_subcode
	make Golay24_2B_fixed_subcode
	make Golay24_2A_fix_code
	make Golay24_2B_fix_code
	make Golay24_2A_fix_weight12
	make Golay24_2A_fix_weight12_c
	make Golay24_2A_fix_weight12_graph_24




Golay23_code_words:
	$(ORBITER) -v 2 \
		-define v -vector -dense $(GOLAY_23_COLUMN_RANKS_PROJECTIVELY) -end \
		-define F -finite_field -q 2 -end \
		-define C -code -field F \
			-projective_set 12 v -end \
		-with C -and F -do -coding_theoretic_activity \
			-export_magma Golay23.magma \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-export_codewords Golay23_codewords.csv \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-export_genma Golay23_genma.csv \
		-end 
	#pdflatex code_n23_k12_q2.tex
	#open code_n23_k12_q2.pdf


Golay23_code_diagram:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define words -vector -file Golay23_codewords.csv -end \
		-with F -do \
		-coding_theoretic_activity \
			-general_code_binary 23 "Golay_23" \
			words \
			-embellish 4 \
		-end


Golay23_code_diagram_draw:
	$(ORBITER) -v 2 \
		-draw_matrix \
			-input_csv_file Golay_23_diagram_01_23_4096.csv \
			-box_width 4 -bit_depth 8 \
			-partition 20 4096 2048 \
		-end


Golay24_make_code:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector \
			-dense $(GOLAY_24_CODE_PROJECTIVE) \
		-end \
		-define C -code -field F \
			-projective_set 12 v \
		-end 


Golay24_make_aut_gens:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 12 2 \
		-subgroup_by_generators "M24" "244823040" 12 \
			$(GOLAY_24_CODE_AUT_GENS) \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_12_2_Subgroup_M24_244823040_report.tex
	open PGL_12_2_Subgroup_M24_244823040_report.pdf


Golay24_make_aut_gens_classes:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 12 2 \
		-subgroup_by_generators "M24" "244823040" 12 \
			$(GOLAY_24_CODE_AUT_GENS) \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-classes \
		-end
	$(MAGMA_PATH)magma M24_classes.magma
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 12 2 \
		-subgroup_by_generators "M24" "244823040" 12 \
			$(GOLAY_24_CODE_AUT_GENS) \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-classes \
		-end
	pdflatex PGL_12_2_Subgroup_M24_244823040_classes_out.tex
	open PGL_12_2_Subgroup_M24_244823040_classes_out.pdf



M24_elt_2A:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 12 2 \
		-subgroup_by_generators "M24_2A" "2" 1 \
			$(M24_ELEMENT_2A) \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_12_2_Subgroup_M24_2A_2_report.tex
	open PGL_12_2_Subgroup_M24_2A_2_report.pdf

M24_elt_2B:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 12 2 \
		-subgroup_by_generators "M24_2B" "2" 1 \
			$(M24_ELEMENT_2B) \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_12_2_Subgroup_M24_2B_2_report.tex
	open PGL_12_2_Subgroup_M24_2B_2_report.pdf

M24_2A_restricted:
	$(ORBITER) -v 2 \
		-define v -vector \
			-dense $(GOLAY_24_CODE_PROJECTIVE) \
		-end \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 12 2 \
			-subgroup_by_generators "M24_2A" "2" 1 \
			$(M24_ELEMENT_2A) \
		-end \
		-define M24_2Ar -modified_group -from G -restricted_action v -end \
		-with M24_2Ar -do \
			-group_theoretic_activity \
				-print_elements_tex  \
		-end
	pdflatex PGL_12_2_res24_elements.tex
	open PGL_12_2_res24_elements.pdf


# 8 fixed points, 8 cycles of length 2.





M24_2B_restricted:
	$(ORBITER) -v 2 \
		-define v -vector \
			-dense $(GOLAY_24_CODE_PROJECTIVE) \
		-end \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 12 2 \
			-subgroup_by_generators "M24_2B" "2" 1 \
			$(M24_ELEMENT_2B) \
		-end \
		-define M24_2Br -modified_group \
			-from G -restricted_action v \
		-end \
		-with M24_2Br -do \
			-group_theoretic_activity \
				-print_elements_tex  \
		-end
	pdflatex PGL_12_2_res24_elements.tex
	open PGL_12_2_res24_elements.pdf

# 12 cycles of length 2




Golay24_2A_fixed_subcode:
	$(ORBITER) -v 2 \
		-define perm -vector \
			-dense $(M24_2A_PERM) \
		-end \
		-define F -finite_field -q 2 -end \
		-define v -vector \
			-dense $(GOLAY_24_CODE_PROJECTIVE) \
		-end \
		-define C -code -field F \
			-projective_set 12 v \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-fixed_code perm \
		-end 

# 256 codewords

Golay24_2B_fixed_subcode:
	$(ORBITER) -v 2 \
		-define perm -vector \
			-dense $(M24_2B_PERM) \
		-end \
		-define F -finite_field -q 2 -end \
		-define v -vector \
			-dense $(GOLAY_24_CODE_PROJECTIVE) \
		-end \
		-define C -code -field F \
			-projective_set 12 v \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-fixed_code perm \
		-end 

# 64 codewords


Golay24_2A_fix_code:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector \
			-format 8 \
			-dense $(GOLAY24_2A_FIX_SUBCODE) \
		-end \
		-define C -code -field F \
			-generator_matrix v \
		-end \
		-with C -do \
		-coding_theoretic_activity \
			-weight_enumerator \
		-end \
		-with C -do \
		-coding_theoretic_activity \
			-export_codewords_by_weight Golay24_2A_fix \
		-end

#1y^{24} + 71x^8y^{16} + 112x^{12}y^{12} + 71x^{16}y^8 + 1x^{24}
#weight enumerator:
#( 1, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 112, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 1 )

# 112 codewords of weight 12:
#Golay24_2A_fix_of_weight_12.csv


Golay24_2B_fix_code:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector \
			-format 6 \
			-dense $(GOLAY24_2B_FIX_SUBCODE) \
		-end \
		-define C -code -field F \
			-generator_matrix v \
		-end \
		-with C -do \
		-coding_theoretic_activity \
			-weight_enumerator \
		-end \
		-with C -do \
		-coding_theoretic_activity \
			-export_codewords_by_weight Golay24_2B_fix \
		-end

#1y^{24} + 15x^8y^{16} + 32x^{12}y^{12} + 15x^{16}y^8 + 1x^{24}
#weight enumerator:
#( 1, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 32, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1 )

Golay24_2A_fix_weight12:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector \
			-load_csv_data_column Golay24_2A_fix_of_weight_12.csv 1 \
		-end \
		-define D -design -list_of_blocks_coded \
			24 12 v \
		-end \
		-with D -do \
			-design_activity \
				-export_inc \
		-end \
		-with D -do \
			-design_activity \
				-intersection_matrix \
		-end

#sets_v24_inc.txt
#sets_v24_AAt.csv


Golay24_2A_fix_weight12_c:
	$(ORBITER) -v 3 \
		-draw_incidence_structure_description \
			-width 60 -width_10 6 -end \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries blocks_v24_k12_inc.txt 24 112 1344 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form \
				-classification_prefix Golay24_2A_fix_weight12 \
				-label Golay24_2A_fix_weight12 \
				-save_ago \
				-save_transversal \
			-end \
			-report \
				-prefix Golay24_2A_fix_weight12 \
				-export_flag_orbits \
				-show_incidence_matrices \
				-export_group_GAP \
			-end \
		-end
	pdflatex Golay24_2A_fix_weight12_classification.tex
	open Golay24_2A_fix_weight12_classification.pdf


# stabilizer of order 2752512

Golay24_2A_fix_weight12_graph_24:
	$(ORBITER) -v 3 \
		-define Gamma -graph \
			-load_adjacency_matrix_from_csv_and_select_value \
			blocks_v24_k12_AAt.csv 24 \
		-end \
		-with Gamma -do \
			-graph_theoretic_activity -automorphism_group \
		-end \
		-with Gamma -do \
			-graph_theoretic_activity \
			-properties \
		-end
	#pdflatex _report.tex
	#open _report.pdf

#Degree type: (14^{16},\, 7^8 )


###############################################################################
# Section 10.4: Coding Theory - CRC codes

SECTION_CODING_THEORY_CRC_CODES:


test_10_4:
	make CRC_3_128_10
	make crc32_test
	make crc32_test_hexdata
	make crc32_Berlekamp_matrix
	make CRC_F256_roots_771
	make CRC_F256_BCH_code_d2
	make CRC_F256_BCH_write_code_for_division_d2
	make CRC_F256_BCH_code_d3
	make CRC_F256_BCH_write_code_for_division_Bravo
	make CRC_F256_BCH_code_d7
	make F256_BCH_code_d16
	make F256_BCH_write_code_for_division_d16
	make F256_BCH_code_d16_division
	make F256_BCH_code_d16_error
	make crc_encode_16
	make crc_encode_32
	make introduce_errors_16_500000
	make introduce_errors_32_100000
	make check_errors_16
	make check_errors_32
	make extract_block



CRC_3_128_10:
	$(ORBITER) -v 1 \
		-define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
			-find_CRC_polynomials 3 128 10 \
		-end




crc32_test:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
			-crc32 "123456789" \
		-end

crc32_test_hexdata:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-with F -do -coding_theoretic_activity \
			-crc32_hexdata "7BD11C4010" \
		-end

crc32_Berlekamp_matrix:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -field F -sparse 33 $(CRC32_ETHERNET) -end \
		-with F -do \
		-finite_field_activity \
			-Berlekamp_matrix v \
		-end


CRC_F256_roots_771:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 256 -end \
		-with F -do -finite_field_activity \
			-nth_roots 771 \
		-end


# alfa:

CRC_F256_BCH_code_d2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 256 -end \
		-define C -code -field F \
			-BCH 771 2 \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-export_magma BCH_lq8_n771_d2.magma \
		-end
	pdflatex BCH_codes_q256_n771_d2.tex
	open BCH_codes_q256_n771_d2.pdf

# degree of polynomial = 3
#-dense "214,167,1"
#-sparse "214,0,167,1,1,2"



CRC_POLY_Q256_DEG2_DENSE="214,167,1"


CRC_F256_BCH_write_code_for_division_d2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 256 -end \
		-define A -vector -field F -sparse 772 "1,771,1,0" -end \
		-define B -vector -field F -dense $(CRC_POLY_Q256_DEG2_DENSE) -end \
		-with F -do \
		-coding_theoretic_activity \
			-write_code_for_division \
			alfa A B \
		-end
	g++ crc_alfa.cpp -o crc_alfa.out
	./crc_alfa.out




# bravo:

# degree of polynomial = 4
#-dense "1,23,27,213,1"
#-sparse "1,0,23,1,27,2,213,3,1,4"

CRC_F256_BCH_code_d3:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 256 -end \
		-define C -code -field F \
			-BCH 771 3 \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-export_magma BCH_lq8_n771_d3.magma \
		-end
	pdflatex BCH_codes_q256_n771_d3.tex
	open BCH_codes_q256_n771_d3.pdf


CRC_POLY_BRAVO_DENSE="1,23,27,213,1"


CRC_F256_BCH_write_code_for_division_Bravo:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 256 -end \
		-define A -vector -field F -sparse 772 "1,771,1,0" -end \
		-define B -vector -field F -dense $(CRC_POLY_BRAVO_DENSE) -end \
		-with F -do \
		-coding_theoretic_activity \
			-write_code_for_division \
			bravo A B \
		-end
	g++ crc_bravo.cpp -o crc_bravo.out
	./crc_bravo.out


# Charlie

CRC_F256_BCH_code_d7:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 256 -end \
		-define C -code -field F \
			-BCH 771 7 \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-export_magma BCH_lq8_n771_d7.magma \
		-end
	pdflatex BCH_codes_q256_n771_d7.tex
	open BCH_codes_q256_n771_d7.pdf


# polynomial of degree 12:
#-dense "1,126,25,1,196,209,244,3,121,126,35,65,1"
#-sparse "1,0,126,1,25,2,1,3,196,4,209,5,244,6,3,7,121,8,126,9,35,10,65,11,1,12"


CRC_POLY_CHARLIE_DENSE="1,126,25,1,196,209,244,3,121,126,35,65,1"

CRC_F256_BCH_write_code_for_division_Charlie:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 256 -end \
		-define A -vector -field F -sparse 772 "1,771,1,0" -end \
		-define B -vector -field F -dense $(CRC_POLY_CHARLIE_DENSE) -end \
		-with F -do \
		-coding_theoretic_activity \
			-write_code_for_division \
			charlie A B \
		-end
	g++ crc_charlie.cpp -o crc_charlie.out
	./crc_charlie.out






F256_BCH_code_d16:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 256 -end \
		-define C -code -field F \
			-BCH 771 16 \
		-end
	pdflatex BCH_codes_q256_n771_d16.tex
	open BCH_codes_q256_n771_d16.pdf

#generator polynomial is X^{30} + 253X^{29} + 174X^{28} + 109X^{27} + 97X^{26} + 144X^{25} + 112X^{24} + 212X^{23} + 192X^{22} + 169X^{21} + 24X^{20} + 150X^{19} + 110X^{18} + 248X^{17} + 3X^{16} + 193X^{15} + 194X^{14} + 205X^{13} + 9X^{12} + 56X^{11} + 95X^{10} + 199X^{9} + 108X^{8} + 58X^{7} + 160X^{6} + 148X^{5} + 138X^{4} + 24X^{3} + 210X^{2} + 26X + 1




POLY_Q256_DEG30_SPARSE="1,0,26,1,210,2,24,3,\
138,4,148,5,160,6,58,7,108,8,199,9,95,10,56,\
11,9,12,205,13,194,14,193,15,3,16,248,17,110,\
18,150,19,24,20,169,21,192,22,212,23,112,24,\
144,25,97,26,109,27,174,28,253,29,1,30"

POLY_Q256_DEG30_DENSE="1,26,210,24,138,148,\
160,58,108,199,95,56,9,205,194,193,3,248,110,\
150,24,169,192,212,112,144,97,109,174,253,1"



F256_BCH_write_code_for_division_d16:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 256 -end \
		-define A -vector -field F -sparse 772 "1,771,1,0" -end \
		-define B -vector -field F -dense $(POLY_Q256_DEG30_DENSE) -end \
		-with F -do \
		-coding_theoretic_activity \
			-write_code_for_division \
			check_q256_n771_r30 A B \
		-end
	g++ crc_check_q256_n771_r30.cpp -o crc_check_q256_n771_r30.out
	./crc_check_q256_n771_r30.out



F256_BCH_code_d16_division:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 256 -end \
		-define A -vector -field F -sparse 772 "1,771,1,0" -end \
		-define B -vector -field F -dense $(POLY_Q256_DEG30_DENSE) -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_division A B -end



F256_BCH_code_d16_error:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 256 -end \
		-define A -vector -field F -sparse 771 "2,30,3,31,55,770" -end \
		-define B -vector -field F -dense $(POLY_Q256_DEG30_DENSE) -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_division A B -end




#CRC_FILE=allen_Gates
CRC_FILE=javad-allahyari-Fs1E2JXM3Gc-unsplash

CRC_FILE_EXTENSION=bmp


crc_encode_16:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-with F -do \
			-coding_theoretic_activity \
				-crc_encode_file_based \
				$(CRC_FILE).$(CRC_FILE_EXTENSION) \
				$(CRC_FILE)_crc16.bin crc16 771 \
		-end

#-rw-r--r--  1 betten  staff    646576 Aug 24 14:35 allen_Gates_crc16.bin
#-rw-r--r--  1 betten  staff  21656232 Aug 24 15:35 javad-allahyari-Fs1E2JXM3Gc-unsplash_crc16.bin



crc_encode_32:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-with F -do \
			-coding_theoretic_activity \
				-crc_encode_file_based \
				$(CRC_FILE).$(CRC_FILE_EXTENSION) \
				$(CRC_FILE)_crc32.bin crc32 771 \
		-end


#-rw-r--r--  1 betten  staff    648262 Aug 24 14:34 allen_Gates_crc32.bin



#crc_encode_new:
#	$(ORBITER) -v 3 \
#		-define F -finite_field -q 256 -end \
#		-with F -do \
#			-coding_theoretic_activity \
#			-crc_new_file_based $(CRC_FILE).$(CRC_FILE_EXTENSION) \
#		-end


introduce_errors_16_500000:
	$(ORBITER) -v 3 \
		-introduce_errors \
			-input $(CRC_FILE)_crc16.bin \
			-output $(CRC_FILE)_crc16_e.bin \
			-block_based_error_generator \
			-block_length 771 \
			-threshold 500000 \
			-file_based_error_generator 500000 \
			-nb_repeats 30 \
		-end


introduce_errors_32_100000:
	$(ORBITER) -v 3 \
		-introduce_errors \
			-input $(CRC_FILE)_crc32.bin \
			-output $(CRC_FILE)_crc32_e.bin \
			-block_based_error_generator \
			-block_length 771 \
			-threshold 100000 \
			-file_based_error_generator 100000 \
			-nb_repeats 30 \
		-end


check_errors_16:
	$(ORBITER) -v 3 \
		-check_errors \
			-input $(CRC_FILE)_crc16_e.bin \
			-output $(CRC_FILE)_recovered.$(CRC_FILE_EXTENSION) \
			-crc_type crc16 \
			-error_log $(CRC_FILE)_crc16_e_pattern.csv \
			-block_length 771 \
		-end

check_errors_32:
	$(ORBITER) -v 3 \
		-check_errors \
			-input $(CRC_FILE)_crc32_e.bin \
			-output $(CRC_FILE)_recovered.$(CRC_FILE_EXTENSION) \
			-crc_type crc32 \
			-error_log $(CRC_FILE)_crc32_e_pattern.csv \
			-block_length 771 \
		-end


extract_block:
	$(ORBITER) -v 3 \
		-extract_block \
			-input $(CRC_FILE)_crc32_e.bin \
			-output $(CRC_FILE)_recovered.$(CRC_FILE_EXTENSION) \
			-error_log $(CRC_FILE)_crc32_e_pattern.csv \
			-block_length 771 \
			-selected_block 813731 \
		-end




###############################################################################
# Section 10.5: Coding Theory - Reed-Muller codes

SECTION_CODING_THEORY_REED_MULLER_CODES:




test_10_5:
	make RM_3_export
	make RM_3_Hamming_space_diagram
	make RM_3_draw
	make RM_3_split
	make RM_3_distance_draw
	make RM_3_algebraic_normal_form
	make RM_6
	make RM_6_genma_draw
	make RM_6_codewords_matrix_draw
	make RM_6_codewords_draw



RM_3_export:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define C -code -field F \
			-Reed_Muller 3 \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-export_magma RM_3.magma \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-export_codewords RM_3_codewords.csv \
		-end 




RM_3_Hamming_space_diagram:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define C -code -field F \
			-Reed_Muller 3 \
		-end \
		-with C -do \
		-coding_theoretic_activity \
			-make_diagram \
			-metric_balls 1 \
		-end

# creates 
# RM_3_8_16.tex
# RM_3_diagram_8_16.csv
# RM_3_diagram_01_8_16.csv
# RM_3_distance_8_16.csv


RM_3_draw:
	$(ORBITER) -v 2 \
		-draw_matrix \
			-input_csv_file RM_3_distance_H_8_16.csv \
			-box_width 25 -bit_depth 8 \
			-partition 4 16 16 \
		-end
	$(ORBITER) -v 2 \
		-draw_matrix \
			-input_csv_file RM_3_char_func_8_16.csv \
			-box_width 25 -bit_depth 8 \
			-partition 4 16 16 \
		-end
	$(ORBITER) -v 2 \
		-draw_matrix \
			-input_csv_file RM_3_idx_8_16.csv \
			-box_width 25 -bit_depth 8 \
			-partition 4 16 16 \
		-end
	convert RM_3_distance_H_8_16_draw.bmp RM_3_distance_H_8_16_draw.png
	convert RM_3_char_func_8_16_draw.bmp RM_3_char_func_8_16_draw.png
	convert RM_3_idx_8_16_draw.bmp RM_3_idx_8_16_draw.png
	open RM_3_distance_H_8_16_draw.bmp


RM_3_split:
	#$(ORBITER) -split_by_values RM_3_distance_8_16.csv 
	$(ORBITER) -split_by_values RM_3_distance_H_8_16.csv 

RM_3_distance_draw:
	$(ORBITER) -v 2 \
		-loop L 0 3 1 \
			-draw_matrix \
				-input_csv_file RM_3_distance_H_8_16_value%L.csv \
				-box_width 25 -bit_depth 8 \
				-partition 5 16 16 \
			-end \
		-end_loop L
	convert RM_3_distance_H_8_16_value0_draw.bmp RM_3_distance_H_8_16_value0_draw.png
	convert RM_3_distance_H_8_16_value1_draw.bmp RM_3_distance_H_8_16_value1_draw.png
	convert RM_3_distance_H_8_16_value2_draw.bmp RM_3_distance_H_8_16_value2_draw.png

RM_3_algebraic_normal_form:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-loop L 0 3 1 \
			-define v%L -vector -field F \
				-file RM_3_distance_8_16_value%L.csv \
			-end \
			-with F -do -finite_field_activity \
				-algebraic_normal_form 8 v%L \
			-end \
		-end_loop L

# distance 0:

# E_0 + E_1 + E_2 + E_3 + E_4
#X8^8 + X0*X8^7 + X1*X8^7 + X2*X8^7 + X3*X8^7 + X4*X8^7 + X5*X8^7 + X6*X8^7 + X7*X8^7 + X0*X1*X8^6 + X0*X2*X8^6 + X0*X3*X8^6 + X0*X4*X8^6 + X0*X5*X8^6 + X0*X6*X8^6 + X0*X7*X8^6 + X1*X2*X8^6 + X1*X3*X8^6 + X1*X4*X8^6 + X1*X5*X8^6 + X1*X6*X8^6 + X1*X7*X8^6 + X2*X3*X8^6 + X2*X4*X8^6 + X2*X5*X8^6 + X2*X6*X8^6 + X2*X7*X8^6 + X3*X4*X8^6 + X3*X5*X8^6 + X3*X6*X8^6 + X3*X7*X8^6 + X4*X5*X8^6 + X4*X6*X8^6 + X4*X7*X8^6 + X5*X6*X8^6 + X5*X7*X8^6 + X6*X7*X8^6 + X0*X1*X2*X8^5 + X0*X1*X3*X8^5 + X0*X1*X4*X8^5 + X0*X1*X5*X8^5 + X0*X1*X6*X8^5 + X0*X1*X7*X8^5 + X0*X2*X3*X8^5 + X0*X2*X4*X8^5 + X0*X2*X5*X8^5 + X0*X2*X6*X8^5 + X0*X2*X7*X8^5 + X0*X3*X4*X8^5 + X0*X3*X5*X8^5 + X0*X3*X6*X8^5 + X0*X3*X7*X8^5 + X0*X4*X5*X8^5 + X0*X4*X6*X8^5 + X0*X4*X7*X8^5 + X0*X5*X6*X8^5 + X0*X5*X7*X8^5 + X0*X6*X7*X8^5 + X1*X2*X3*X8^5 + X1*X2*X4*X8^5 + X1*X2*X5*X8^5 + X1*X2*X6*X8^5 + X1*X2*X7*X8^5 + X1*X3*X4*X8^5 + X1*X3*X5*X8^5 + X1*X3*X6*X8^5 + X1*X3*X7*X8^5 + X1*X4*X5*X8^5 + X1*X4*X6*X8^5 + X1*X4*X7*X8^5 + X1*X5*X6*X8^5 + X1*X5*X7*X8^5 + X1*X6*X7*X8^5 + X2*X3*X4*X8^5 + X2*X3*X5*X8^5 + X2*X3*X6*X8^5 + X2*X3*X7*X8^5 + X2*X4*X5*X8^5 + X2*X4*X6*X8^5 + X2*X4*X7*X8^5 + X2*X5*X6*X8^5 + X2*X5*X7*X8^5 + X2*X6*X7*X8^5 + X3*X4*X5*X8^5 + X3*X4*X6*X8^5 + X3*X4*X7*X8^5 + X3*X5*X6*X8^5 + X3*X5*X7*X8^5 + X3*X6*X7*X8^5 + X4*X5*X6*X8^5 + X4*X5*X7*X8^5 + X4*X6*X7*X8^5 + X5*X6*X7*X8^5 + X0*X1*X2*X4*X8^4 + X0*X1*X2*X5*X8^4 + X0*X1*X2*X6*X8^4 + X0*X1*X2*X7*X8^4 + X0*X1*X3*X4*X8^4 + X0*X1*X3*X5*X8^4 + X0*X1*X3*X6*X8^4 + X0*X1*X3*X7*X8^4 + X0*X1*X4*X6*X8^4 + X0*X1*X4*X7*X8^4 + X0*X1*X5*X6*X8^4 + X0*X1*X5*X7*X8^4 + X0*X2*X3*X4*X8^4 + X0*X2*X3*X5*X8^4 + X0*X2*X3*X6*X8^4 + X0*X2*X3*X7*X8^4 + X0*X2*X4*X5*X8^4 + X0*X2*X4*X7*X8^4 + X0*X2*X5*X6*X8^4 + X0*X2*X6*X7*X8^4 + X0*X3*X4*X5*X8^4 + X0*X3*X4*X6*X8^4 + X0*X3*X5*X7*X8^4 + X0*X3*X6*X7*X8^4 + X0*X4*X5*X6*X8^4 + X0*X4*X5*X7*X8^4 + X0*X4*X6*X7*X8^4 + X0*X5*X6*X7*X8^4 + X1*X2*X3*X4*X8^4 + X1*X2*X3*X5*X8^4 + X1*X2*X3*X6*X8^4 + X1*X2*X3*X7*X8^4 + X1*X2*X4*X5*X8^4 + X1*X2*X4*X6*X8^4 + X1*X2*X5*X7*X8^4 + X1*X2*X6*X7*X8^4 + X1*X3*X4*X5*X8^4 + X1*X3*X4*X7*X8^4 + X1*X3*X5*X6*X8^4 + X1*X3*X6*X7*X8^4 + X1*X4*X5*X6*X8^4 + X1*X4*X5*X7*X8^4 + X1*X4*X6*X7*X8^4 + X1*X5*X6*X7*X8^4 + X2*X3*X4*X6*X8^4 + X2*X3*X4*X7*X8^4 + X2*X3*X5*X6*X8^4 + X2*X3*X5*X7*X8^4 + X2*X4*X5*X6*X8^4 + X2*X4*X5*X7*X8^4 + X2*X4*X6*X7*X8^4 + X2*X5*X6*X7*X8^4 + X3*X4*X5*X6*X8^4 + X3*X4*X5*X7*X8^4 + X3*X4*X6*X7*X8^4 + X3*X5*X6*X7*X8^4


# distance 1:

#X0*X8^7 + X1*X8^7 + X2*X8^7 + X3*X8^7 + X4*X8^7 + X5*X8^7 + X6*X8^7 + X7*X8^7 = E_1
#E_1 = X_0X_8^7 + X_1X_8^7 + X_2X_8^7 + X_3X_8^7 + X_4X_8^7 + X_5X_8^7 + X_6X_8^7 + X_7X_8^7

# distance 2:

#X0*X1*X8^6 + X0*X2*X8^6 + X0*X3*X8^6 + X0*X4*X8^6 + X0*X5*X8^6 + X0*X6*X8^6 + X0*X7*X8^6 + X1*X2*X8^6 + X1*X3*X8^6 + X1*X4*X8^6 + X1*X5*X8^6 + X1*X6*X8^6 + X1*X7*X8^6 + X2*X3*X8^6 + X2*X4*X8^6 + X2*X5*X8^6 + X2*X6*X8^6 + X2*X7*X8^6 + X3*X4*X8^6 + X3*X5*X8^6 + X3*X6*X8^6 + X3*X7*X8^6 + X4*X5*X8^6 + X4*X6*X8^6 + X4*X7*X8^6 + X5*X6*X8^6 + X5*X7*X8^6 + X6*X7*X8^6 + X0*X1*X2*X8^5 + X0*X1*X3*X8^5 + X0*X1*X4*X8^5 + X0*X1*X5*X8^5 + X0*X1*X6*X8^5 + X0*X1*X7*X8^5 + X0*X2*X3*X8^5 + X0*X2*X4*X8^5 + X0*X2*X5*X8^5 + X0*X2*X6*X8^5 + X0*X2*X7*X8^5 + X0*X3*X4*X8^5 + X0*X3*X5*X8^5 + X0*X3*X6*X8^5 + X0*X3*X7*X8^5 + X0*X4*X5*X8^5 + X0*X4*X6*X8^5 + X0*X4*X7*X8^5 + X0*X5*X6*X8^5 + X0*X5*X7*X8^5 + X0*X6*X7*X8^5 + X1*X2*X3*X8^5 + X1*X2*X4*X8^5 + X1*X2*X5*X8^5 + X1*X2*X6*X8^5 + X1*X2*X7*X8^5 + X1*X3*X4*X8^5 + X1*X3*X5*X8^5 + X1*X3*X6*X8^5 + X1*X3*X7*X8^5 + X1*X4*X5*X8^5 + X1*X4*X6*X8^5 + X1*X4*X7*X8^5 + X1*X5*X6*X8^5 + X1*X5*X7*X8^5 + X1*X6*X7*X8^5 + X2*X3*X4*X8^5 + X2*X3*X5*X8^5 + X2*X3*X6*X8^5 + X2*X3*X7*X8^5 + X2*X4*X5*X8^5 + X2*X4*X6*X8^5 + X2*X4*X7*X8^5 + X2*X5*X6*X8^5 + X2*X5*X7*X8^5 + X2*X6*X7*X8^5 + X3*X4*X5*X8^5 + X3*X4*X6*X8^5 + X3*X4*X7*X8^5 + X3*X5*X6*X8^5 + X3*X5*X7*X8^5 + X3*X6*X7*X8^5 + X4*X5*X6*X8^5 + X4*X5*X7*X8^5 + X4*X6*X7*X8^5 + X5*X6*X7*X8^5 + X0*X1*X2*X4*X8^4 + X0*X1*X2*X5*X8^4 + X0*X1*X2*X6*X8^4 + X0*X1*X2*X7*X8^4 + X0*X1*X3*X4*X8^4 + X0*X1*X3*X5*X8^4 + X0*X1*X3*X6*X8^4 + X0*X1*X3*X7*X8^4 + X0*X1*X4*X6*X8^4 + X0*X1*X4*X7*X8^4 + X0*X1*X5*X6*X8^4 + X0*X1*X5*X7*X8^4 + X0*X2*X3*X4*X8^4 + X0*X2*X3*X5*X8^4 + X0*X2*X3*X6*X8^4 + X0*X2*X3*X7*X8^4 + X0*X2*X4*X5*X8^4 + X0*X2*X4*X7*X8^4 + X0*X2*X5*X6*X8^4 + X0*X2*X6*X7*X8^4 + X0*X3*X4*X5*X8^4 + X0*X3*X4*X6*X8^4 + X0*X3*X5*X7*X8^4 + X0*X3*X6*X7*X8^4 + X0*X4*X5*X6*X8^4 + X0*X4*X5*X7*X8^4 + X0*X4*X6*X7*X8^4 + X0*X5*X6*X7*X8^4 + X1*X2*X3*X4*X8^4 + X1*X2*X3*X5*X8^4 + X1*X2*X3*X6*X8^4 + X1*X2*X3*X7*X8^4 + X1*X2*X4*X5*X8^4 + X1*X2*X4*X6*X8^4 + X1*X2*X5*X7*X8^4 + X1*X2*X6*X7*X8^4 + X1*X3*X4*X5*X8^4 + X1*X3*X4*X7*X8^4 + X1*X3*X5*X6*X8^4 + X1*X3*X6*X7*X8^4 + X1*X4*X5*X6*X8^4 + X1*X4*X5*X7*X8^4 + X1*X4*X6*X7*X8^4 + X1*X5*X6*X7*X8^4 + X2*X3*X4*X6*X8^4 + X2*X3*X4*X7*X8^4 + X2*X3*X5*X6*X8^4 + X2*X3*X5*X7*X8^4 + X2*X4*X5*X6*X8^4 + X2*X4*X5*X7*X8^4 + X2*X4*X6*X7*X8^4 + X2*X5*X6*X7*X8^4 + X3*X4*X5*X6*X8^4 + X3*X4*X5*X7*X8^4 + X3*X4*X6*X7*X8^4 + X3*X5*X6*X7*X8^4

# E_2 + E_3 + E_4



RM_6:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define C -code -field F \
			-long_code 64 7 \
			$(RM_6_GENERATOR_1) \
			$(RM_6_GENERATOR_2) \
			$(RM_6_GENERATOR_3) \
			$(RM_6_GENERATOR_4) \
			$(RM_6_GENERATOR_5) \
			$(RM_6_GENERATOR_6) \
			$(RM_6_GENERATOR_7) \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-export_genma RM6_genma.csv \
		-end \
		-with C -and F -do -coding_theoretic_activity \
			-export_codewords_long RM6_codewords.csv \
		-end \

RM_6_genma_draw:
	$(ORBITER) -v 2 \
		-draw_matrix \
			-input_csv_file RM6_genma.csv \
			-box_width 25 -bit_depth 8 \
			-partition 3 7 64 \
		-end
	convert RM6_genma_draw.bmp RM6_genma_draw.png
	open RM6_genma_draw.png


RM_6_codewords_matrix_draw:
	$(ORBITER) -v 2 \
		-draw_matrix \
			-input_csv_file RM6_codewords.csv \
			-box_width 25 -bit_depth 8 \
			-partition 3 128 64 \
		-end
	convert RM6_codewords_draw.bmp RM6_codewords_draw.png
	open RM6_codewords_draw.png


RM_6_codewords_draw:
	$(ORBITER) -v 4 \
		-loop L 0 128 1 \
			-csv_file_select_rows RM6_codewords.csv %L \
			-reformat RM6_codewords_select_%L.csv RM6_codewords_ref_%L.csv 8 \
			-draw_matrix \
				-input_csv_file RM6_codewords_ref_%L.csv \
				-box_width 25 -bit_depth 8 \
				-partition 3 8 8 \
			-end \
			-system "convert RM6_codewords_ref_%L_draw.bmp -frame 8 %L.png" \
		-end_loop L
	convert 0.png 1.png 2.png 3.png 4.png 5.png \
		6.png 7.png 8.png 9.png 10.png +append a0
	convert 11.png 12.png 13.png 14.png 15.png \
		16.png 17.png 18.png 19.png 20.png 21.png +append a1
	convert 22.png 23.png 24.png 25.png 26.png \
		27.png 28.png 29.png 30.png 31.png 32.png +append a2
	convert 33.png 34.png 35.png 36.png 37.png \
		38.png 39.png 40.png 41.png 42.png 43.png +append a3
	convert 44.png 45.png 46.png 47.png 48.png \
		49.png 50.png 51.png 52.png 53.png 54.png +append a4
	convert 55.png 56.png 57.png 58.png 59.png \
		60.png 61.png 62.png 63.png 64.png 65.png +append a5
	convert 66.png 67.png 68.png 69.png 70.png \
		71.png 72.png 73.png 74.png 75.png 76.png +append a6
	convert 77.png 78.png 79.png 80.png 81.png \
		82.png 83.png 84.png 85.png 86.png 87.png +append a7
	convert 88.png 89.png 90.png 91.png 92.png \
		93.png 94.png 95.png 96.png 97.png 98.png +append a8
	convert 99.png 100.png 101.png 102.png 103.png \
		104.png 105.png 106.png 107.png 108.png 109.png +append a9
	convert 110.png 111.png 112.png 113.png 114.png \
		115.png 116.png 117.png 118.png 119.png 120.png +append a10
	convert 121.png 122.png 123.png 124.png 125.png \
		126.png 127.png 0.png 0.png 0.png 0.png +append a11
	convert a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 \
		a11 -append poster_RM_1_6.png





###############################################################################
# Section 10.6: Coding Theory - BCH Codes

SECTION_CODING_THEORY_BCH_CODES:


test_10_6:
	make draw_cyclotomic_mod_21_q8
	make F_8_BCH_code_d3
	make F_8_BCH_code_d4
	make F_8_BCH_code_d5
	make F_8_BCH_code_d5_minimum_distance
	make F_8_BCH_code_d7
	make F8_BCH_code_n63_d43
	#make F8_BCH_code_n63_d43_minimum_distance
	make F2_BCH_code_n21
	make F7_RS_code_n6
	make F_64_again
	make BCH_255_5_evaluate_elementary_symmetric_functions_1
	make BCH_255_5_evaluate_elementary_symmetric_functions_2
	make BCH_15_5
	make draw_mod_31
	make PR127
	make draw_mod_127_power
	make draw_mod_251
	make draw_mod_255_cyclotomic_1
	make draw_mod_255_cyclotomic_3
	make draw_mod_255_cyclotomic_1_and_3
	make draw_mod_63_4_cyclotomic_3_6
	make BCH_F_64
	make BCH_elementary_symmetric_functions_3
	make BCH_63_4_evaluate_elementary_symmetric_functions_1
	make BCH_63_4_evaluate_elementary_symmetric_functions_2
	make BCH_21_poly_mult_mod_F4
	make BCH_21_poly_division_a
	make BCH_21_poly_division_b
	make BCH_21_poly_division_ab
	make BCH_21_generator_matrix
	#make BCH_21_15_weight_enumerator
	make BCH_21_15_dual
	make BCH_21_6_weight_enumerator
	make BCH_21_6_4_macwilliams
	make BCH_21_15_4_field_reduction
	make BCH_21_poly_division_c
	make F16_roots_5
	make F64_roots_21
	make BCH_F256_roots_771
	make BCH_F256_BCH_code_d16



draw_cyclotomic_mod_21_q8:
	$(ORBITER) -v 2 \
		-draw_options \
			-radius 100 \
			-line_width 1.0 -embedded \
		-end \
		-draw_mod_n \
			-n 21 \
			-file mod_21_cyclotomic \
			-cyclotomic_sets 8 "1,2,4,5,7,10,13" \
		-end
	pdflatex mod_21_cyclotomic_draw.tex
	open mod_21_cyclotomic_draw.pdf


F_8_BCH_code_d3:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 8 -override_polynomial 11 -end \
		-define C -code -field F \
			-BCH 21 3 \
		-end
	pdflatex BCH_codes_q8_n21_d3.tex
	open BCH_codes_q8_n21_d3.pdf

#generator polynomial is X^{4} + 4X^{3} + 4X^{2} + 3X + 4

F_8_BCH_code_d4:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 8 -override_polynomial 11 -end \
		-define C -code -field F \
			-BCH 21 4 \
		-end

#generator polynomial is X^{5} + 6X^{4} + 7X^{3} + 2X + 3


F_8_BCH_code_d5:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 8 -override_polynomial 11 -end \
		-define C -code -field F \
			-BCH 21 5 \
		-end
	pdflatex BCH_codes_q8_n21_d5.tex
	open BCH_codes_q8_n21_d5.pdf

#-override_polynomial 11 
#generator polynomial is X^{7} + 3X^{6} + 3X^{5} + 2X^{4} + X^{3} + 2X^{2} + X + 2


#CODE_BCH_F8_N21_D5_GENMA

CODE_BCH_F8_N21_D5_GENMA_OVERRIDE_POLYNOMIAL11="\
2,1,2,1,2,3,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,\
0,2,1,2,1,2,3,3,1,0,0,0,0,0,0,0,0,0,0,0,0,\
0,0,2,1,2,1,2,3,3,1,0,0,0,0,0,0,0,0,0,0,0,\
0,0,0,2,1,2,1,2,3,3,1,0,0,0,0,0,0,0,0,0,0,\
0,0,0,0,2,1,2,1,2,3,3,1,0,0,0,0,0,0,0,0,0,\
0,0,0,0,0,2,1,2,1,2,3,3,1,0,0,0,0,0,0,0,0,\
0,0,0,0,0,0,2,1,2,1,2,3,3,1,0,0,0,0,0,0,0,\
0,0,0,0,0,0,0,2,1,2,1,2,3,3,1,0,0,0,0,0,0,\
0,0,0,0,0,0,0,0,2,1,2,1,2,3,3,1,0,0,0,0,0,\
0,0,0,0,0,0,0,0,0,2,1,2,1,2,3,3,1,0,0,0,0,\
0,0,0,0,0,0,0,0,0,0,2,1,2,1,2,3,3,1,0,0,0,\
0,0,0,0,0,0,0,0,0,0,0,2,1,2,1,2,3,3,1,0,0,\
0,0,0,0,0,0,0,0,0,0,0,0,2,1,2,1,2,3,3,1,0,\
0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,2,1,2,3,3,1"

CODE_BCH_F8_N21_K14_D5_GENMA="\
6,1,5,5,4,4,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,\
0,6,1,5,5,4,4,3,1,0,0,0,0,0,0,0,0,0,0,0,0,\
0,0,6,1,5,5,4,4,3,1,0,0,0,0,0,0,0,0,0,0,0,\
0,0,0,6,1,5,5,4,4,3,1,0,0,0,0,0,0,0,0,0,0,\
0,0,0,0,6,1,5,5,4,4,3,1,0,0,0,0,0,0,0,0,0,\
0,0,0,0,0,6,1,5,5,4,4,3,1,0,0,0,0,0,0,0,0,\
0,0,0,0,0,0,6,1,5,5,4,4,3,1,0,0,0,0,0,0,0,\
0,0,0,0,0,0,0,6,1,5,5,4,4,3,1,0,0,0,0,0,0,\
0,0,0,0,0,0,0,0,6,1,5,5,4,4,3,1,0,0,0,0,0,\
0,0,0,0,0,0,0,0,0,6,1,5,5,4,4,3,1,0,0,0,0,\
0,0,0,0,0,0,0,0,0,0,6,1,5,5,4,4,3,1,0,0,0,\
0,0,0,0,0,0,0,0,0,0,0,6,1,5,5,4,4,3,1,0,0,\
0,0,0,0,0,0,0,0,0,0,0,0,6,1,5,5,4,4,3,1,0,\
0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,5,5,4,4,3,1"

F_8_BCH_code_d5_minimum_distance:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 8 -override_polynomial 11 -end \
		-define v -vector -format 14 -field F \
			-compact $(CODE_BCH_F8_N21_D5_GENMA_OVERRIDE_POLYNOMIAL11) \
		-end \
		-with F -do \
		-coding_theoretic_activity \
			-minimum_distance v \
		-end
# important: use the same polynomial as when creating the code.
#
# d=5



F_8_BCH_code_d7:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 8 -override_polynomial 11 -end \
		-define C -code -field F \
			-BCH 21 7 \
		-end




F8_BCH_code_n63_d43:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 8 -override_polynomial 11 -end \
		-define C -code -field F \
			-BCH 63 43 \
		-end
	pdflatex BCH_codes_q8_n63_d43.tex
	open BCH_codes_q8_n63_d43.pdf




CODE_BCH_F8_N63_K9_D43_GENMA="\
4,5,2,2,4,5,6,2,4,2,6,0,0,7,1,5,3,7,1,0,0,5,6,4,7,6,7,7,1,2,6,3,1,6,0,0,6,6,6,4,7,7,0,0,3,4,7,5,6,2,5,1,4,4,1,0,0,0,0,0,0,0,0,\
0,4,5,2,2,4,5,6,2,4,2,6,0,0,7,1,5,3,7,1,0,0,5,6,4,7,6,7,7,1,2,6,3,1,6,0,0,6,6,6,4,7,7,0,0,3,4,7,5,6,2,5,1,4,4,1,0,0,0,0,0,0,0,\
0,0,4,5,2,2,4,5,6,2,4,2,6,0,0,7,1,5,3,7,1,0,0,5,6,4,7,6,7,7,1,2,6,3,1,6,0,0,6,6,6,4,7,7,0,0,3,4,7,5,6,2,5,1,4,4,1,0,0,0,0,0,0,\
0,0,0,4,5,2,2,4,5,6,2,4,2,6,0,0,7,1,5,3,7,1,0,0,5,6,4,7,6,7,7,1,2,6,3,1,6,0,0,6,6,6,4,7,7,0,0,3,4,7,5,6,2,5,1,4,4,1,0,0,0,0,0,\
0,0,0,0,4,5,2,2,4,5,6,2,4,2,6,0,0,7,1,5,3,7,1,0,0,5,6,4,7,6,7,7,1,2,6,3,1,6,0,0,6,6,6,4,7,7,0,0,3,4,7,5,6,2,5,1,4,4,1,0,0,0,0,\
0,0,0,0,0,4,5,2,2,4,5,6,2,4,2,6,0,0,7,1,5,3,7,1,0,0,5,6,4,7,6,7,7,1,2,6,3,1,6,0,0,6,6,6,4,7,7,0,0,3,4,7,5,6,2,5,1,4,4,1,0,0,0,\
0,0,0,0,0,0,4,5,2,2,4,5,6,2,4,2,6,0,0,7,1,5,3,7,1,0,0,5,6,4,7,6,7,7,1,2,6,3,1,6,0,0,6,6,6,4,7,7,0,0,3,4,7,5,6,2,5,1,4,4,1,0,0,\
0,0,0,0,0,0,0,4,5,2,2,4,5,6,2,4,2,6,0,0,7,1,5,3,7,1,0,0,5,6,4,7,6,7,7,1,2,6,3,1,6,0,0,6,6,6,4,7,7,0,0,3,4,7,5,6,2,5,1,4,4,1,0,\
0,0,0,0,0,0,0,0,4,5,2,2,4,5,6,2,4,2,6,0,0,7,1,5,3,7,1,0,0,5,6,4,7,6,7,7,1,2,6,3,1,6,0,0,6,6,6,4,7,7,0,0,3,4,7,5,6,2,5,1,4,4,1"



F8_BCH_code_n63_d43_minimum_distance:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 8 -override_polynomial 11 -end \
		-define v -vector -format 9 -field F \
			-compact $(CODE_BCH_F8_N63_K9_D43_GENMA) \
		-end \
		-with F -do \
		-coding_theoretic_activity \
			-minimum_distance v \
		-end


#coding_theory_domain::do_minimum_distance The minimum distance is d = 45, computed in 0 days, 0 hours, 1 minutes, 32 seconds
#1:32






F2_BCH_code_n21:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-define C -code -field F \
			-BCH 21 3 \
		-end



F7_RS_code_n6:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 7 -end \
		-define C -code -field F \
			-Reed_Solomon 6 3 \
		-end


F_64_again:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 64 -end \
		-with F -do \
			-finite_field_activity \
			-cheat_sheet_GF \
		-end
	pdflatex GF_64.tex
	open GF_64.pdf


BCH_255_5_evaluate_elementary_symmetric_functions_1:
	$(ORBITER) -v 3 -define F -finite_field -q 256 -end \
		-define e1 -formula "e1" "e1" "" $(ELEMENTARY_SYMMETRIC_8_1) \
		-define e2 -formula "e2" "e2" "" $(ELEMENTARY_SYMMETRIC_8_2) \
		-define e3 -formula "e3" "e3" "" $(ELEMENTARY_SYMMETRIC_8_3) \
		-define e4 -formula "e4" "e4" "" $(ELEMENTARY_SYMMETRIC_8_4) \
		-define e5 -formula "e5" "e5" "" $(ELEMENTARY_SYMMETRIC_8_5) \
		-define e6 -formula "e6" "e6" "" $(ELEMENTARY_SYMMETRIC_8_6) \
		-define e7 -formula "e7" "e7" "" $(ELEMENTARY_SYMMETRIC_8_7) \
		-define e8 -formula "e8" "e8" "" $(ELEMENTARY_SYMMETRIC_8_8) \
		-define E8 -collection "e1,e2,e3,e4,e5,e6,e7,e8" \
		-with F -do -finite_field_activity \
			-evaluate E8 "x0=2,x1=4,x2=16,x3=29,x4=76,x5=157,x6=95,x7=133" -end

BCH_255_5_evaluate_elementary_symmetric_functions_2:
	$(ORBITER) -v 3 -define F -finite_field -q 256 -end \
		-define e1 -formula "e1" "e1" "" $(ELEMENTARY_SYMMETRIC_8_1) \
		-define e2 -formula "e2" "e2" "" $(ELEMENTARY_SYMMETRIC_8_2) \
		-define e3 -formula "e3" "e3" "" $(ELEMENTARY_SYMMETRIC_8_3) \
		-define e4 -formula "e4" "e4" "" $(ELEMENTARY_SYMMETRIC_8_4) \
		-define e5 -formula "e5" "e5" "" $(ELEMENTARY_SYMMETRIC_8_5) \
		-define e6 -formula "e6" "e6" "" $(ELEMENTARY_SYMMETRIC_8_6) \
		-define e7 -formula "e7" "e7" "" $(ELEMENTARY_SYMMETRIC_8_7) \
		-define e8 -formula "e8" "e8" "" $(ELEMENTARY_SYMMETRIC_8_8) \
		-define E8 -collection "e1,e2,e3,e4,e5,e6,e7,e8" \
		-with F -do -finite_field_activity \
			-evaluate E8 "x0=8,x1=64,x2=205,x3=143,x4=70,x5=217,x6=130,x7=23" -end


BCH_15_5:
	$(ORBITER) \
		-define F -finite_field -q 2 -end \
		-define C -code -field F \
			-BCH 15 5 \
		-end






draw_mod_31:
	$(ORBITER) -v 2 \
		-draw_options -embedded -end \
		-draw_mod_n \
			-n 31 \
			-file mod_31 \
			-draw_mod_n_power_cycle 2 \
		-end
	pdflatex mod_31_draw.tex
	open mod_31_draw.pdf


PR127:
	$(ORBITER) -v 5 -primitive_root 127


draw_mod_127_power:
	$(ORBITER) -v 2 \
		-draw_options -scale 0.4 -embedded -end \
		-draw_mod_n \
			-n 127 \
			-file mod_127 \
			-power_cycle 3 \
		-end
	pdflatex mod_127_draw.tex
	open mod_127_draw.pdf

draw_mod_251:
	$(ORBITER) -v 2 \
		-draw_options -nodes_empty -radius 10 -embedded -end \
		-draw_mod_n \
			-n 251 \
			-file mod_251 \
		-end
	pdflatex mod_251_draw.tex
	open mod_251_draw.pdf

#-draw_mod_n_inverse


draw_mod_255_cyclotomic_1:
	$(ORBITER) -v 2 \
		-draw_options -nodes_empty -radius 10 \
			-line_width 0.4 -embedded -end \
		-draw_mod_n \
			-n 255 \
			-file mod_255_cyclotomic_1 \
			-cyclotomic_sets 2 "1" \
		-end
	pdflatex mod_255_cyclotomic_1_draw.tex
	open mod_255_cyclotomic_1_draw.pdf

draw_mod_255_cyclotomic_3:
	$(ORBITER) -v 2 \
		-draw_options -nodes_empty -radius 10 \
			-line_width 0.4 -embedded -end \
		-draw_mod_n \
			-n 255 \
			-file mod_255_cyclotomic_3 \
			-cyclotomic_sets 2 "3" \
		-end 
	pdflatex mod_255_cyclotomic_3_draw.tex
	open mod_255_cyclotomic_3_draw.pdf

draw_mod_255_cyclotomic_1_and_3:
	$(ORBITER) -v 2 \
		-draw_options -nodes_empty -radius 10 \
			-line_width 0.4 -embedded -end \
		-draw_mod_n \
			-n 255 \
			-file mod_255_cyclotomic_1_and_3 \
			-cyclotomic_sets 2 "1,3" \
		-end
	pdflatex mod_255_cyclotomic_1_and_3_draw.tex
	open mod_255_cyclotomic_1_and_3_draw.pdf

draw_mod_63_4_cyclotomic_3_6:
	$(ORBITER) -v 2 \
		-draw_options -radius 20 \
			-line_width 0.1 -embedded -end \
		-draw_mod_n \
			-n 63 \
			-file mod_63_4_cyclotomic_3_6 \
			-cyclotomic_sets 4 "3,6" \
			-cyclotomic_sets_thickness 50 \
		-end
	pdflatex mod_63_4_cyclotomic_3_6_draw.tex
	open mod_63_4_cyclotomic_3_6_draw.pdf

BCH_F_64:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 64 -end \
		-with F -do -finite_field_activity \
			-cheat_sheet_GF \
		-end
	pdflatex GF_64.tex


BCH_elementary_symmetric_functions_3:
	$(ORBITER) -make_elementary_symmetric_functions 3 3


BCH_63_4_evaluate_elementary_symmetric_functions_1:
	$(ORBITER) -v 3 -define F -finite_field -q 64 -end \
		-define e1 -formula "e1" "e1" "" $(ELEMENTARY_SYMMETRIC_3_1) \
		-define e2 -formula "e2" "e2" "" $(ELEMENTARY_SYMMETRIC_3_2) \
		-define e3 -formula "e3" "e3" "" $(ELEMENTARY_SYMMETRIC_3_3) \
		-define E3 -collection "e1,e2,e3" \
		-with F -do -finite_field_activity \
			-evaluate E3 "x0=8,x1=62,x2=15" -end


#The values of the formulae are:
#0 : 57
#1 : 0
#2 : 1


# poly: 1,0,2,1

BCH_63_4_evaluate_elementary_symmetric_functions_2:
	$(ORBITER) -v 3 -define F -finite_field -q 64 -end \
		-define e1 -formula "e1" "e1" "" $(ELEMENTARY_SYMMETRIC_3_1) \
		-define e2 -formula "e2" "e2" "" $(ELEMENTARY_SYMMETRIC_3_2) \
		-define e3 -formula "e3" "e3" "" $(ELEMENTARY_SYMMETRIC_3_3) \
		-define E3 -collection "e1,e2,e3" \
		-with F -do -finite_field_activity \
			-evaluate E3 "x0=33,x1=45,x2=52" -end

#The values of the formulae are:
#0 : 56
#1 : 0
#2 : 1


# poly: 1,0,3,1



BCH_21_poly_mult_mod_F4:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-with F -do \
		-finite_field_activity \
			-polynomial_mult_mod "1,0,2,1" "1,0,3,1" \
			"1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1" \
		-end

#C(X)=X^{6} + X^{5} + X^{4} + X^{2} + 1

# poly 1,0,1,0,1,1,1


BCH_21_poly_division_a:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_division \
			"1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1" \
			"1,0,2,1" \
		-end

BCH_21_poly_division_b:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_division \
			"1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1" \
			"1,0,3,1" \
		-end


BCH_21_poly_division_ab:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-with F -do \
		-finite_field_activity \
		-polynomial_division \
			"1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1" \
			"1,0,1,0,1,1,1" \
		-end

BCH_21_generator_matrix:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-with F -do \
		-coding_theoretic_activity \
			-generator_matrix_cyclic_code \
				21 "1,0,1,0,1,1,1" \
		-end




BCH_21_15_weight_enumerator:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-define v -vector -field F -format 15 \
			-dense $(BCH_21_15_GENERATOR_MATRIX) \
		-end \
		-define C -code -field F \
			-generator_matrix v \
		-end \
		-with C -do \
		-coding_theoretic_activity \
			-weight_enumerator \
		-end

# too slow!

BCH_21_15_dual:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-define v -vector -field F -format 15 \
			-dense $(BCH_21_15_GENERATOR_MATRIX) -end \
		-with F -do -finite_field_activity \
			-nullspace v \
		-normalize_from_the_right \
		-end


BCH_21_6_weight_enumerator:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-define v -vector -format 6 -field F \
			-dense $(BCH_21_6_GENERATOR_MATRIX) \
		-end \
		-define C -code -field F \
			-generator_matrix v \
		-end \
		-with C -do \
		-coding_theoretic_activity \
			-weight_enumerator \
		-end

# 1y^{21} + 63x^8y^{13} + 294x^{12}y^9 + 756x^{14}y^7 + 1890x^{16}y^5 + 1092x^{18}y^3

#( 1, 0, 0, 0, 0, 0, 0, 0, 63, 0, 0, 0, 294, 0, 756, 0, 1890, 0, 1092, 0, 0, 0 )



BCH_21_6_4_macwilliams:
	$(ORBITER) -v 2 \
		-make_macwilliams_system 21 6 4
	pdflatex MacWilliams_n21_k6_q4.tex
	open MacWilliams_n21_k6_q4.pdf



#ww := [1, 0, 0, 84, 252, 1575, 10080, 58032, 319662, 1411116, 5133744, 15282792, 37951620, 79336530, 135622080, 190615824, 213273081, 188911548, 125744304, 59721732, 17767512, 2580255]


BCH_21_15_4_field_reduction:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-with F -do \
		-finite_field_activity \
			-field_reduction "BCH_21_15_4" 2 15 21 \
				$(BCH_21_15_GENERATOR_MATRIX) \
		-end
	$(ORBITER) -v 2 \
		-draw_matrix \
			-input_csv_file BCH_21_15_4.csv \
			-box_width 20 -bit_depth 24 \
			-partition 4 "30" "42" \
		-end
	pdflatex field_reduction_Q4_q2_15_21.tex
	open BCH_21_15_4_draw.bmp
	#open field_reduction_Q4_q2_15_21.pdf

# poly of degree 12: 1,0,1,0,1,0,0,0,1,0,0,0,1

BCH_21_poly_division_c:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-with F -do \
		-finite_field_activity \
			-polynomial_division \
			"1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1" \
			"1,0,1,0,1,0,0,0,1,0,0,0,1" \
		-end


F16_roots_5:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-with F -do -finite_field_activity \
			-nth_roots 5 \
		-end
	pdflatex Nth_roots_q2_n5.tex
	open Nth_roots_q2_n5.pdf



F64_roots_21:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-with F -do -finite_field_activity \
			-nth_roots 21 \
		-end
	pdflatex Nth_roots_q2_n21.tex
	open Nth_roots_q2_n21.pdf



BCH_F256_roots_771:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 256 -end \
		-with F -do -finite_field_activity \
			-nth_roots 771 \
		-end


BCH_F256_BCH_code_d16:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 256 -end \
		-define C -code -field F \
			-BCH 771 16 \
		-end
	pdflatex BCH_codes_q256_n771_d16.tex
	open BCH_codes_q256_n771_d16.pdf


#generator polynomial is X^{30} + 253X^{29} + 174X^{28} + 109X^{27} + 97X^{26} + 144X^{25} + 112X^{24} + 212X^{23} + 192X^{22} + 169X^{21} + 24X^{20} + 150X^{19} + 110X^{18} + 248X^{17} + 3X^{16} + 193X^{15} + 194X^{14} + 205X^{13} + 9X^{12} + 56X^{11} + 95X^{10} + 199X^{9} + 108X^{8} + 58X^{7} + 160X^{6} + 148X^{5} + 138X^{4} + 24X^{3} + 210X^{2} + 26X + 1








###############################################################################
# Section 10.7: Coding Theory - Reed Solomon codes

SECTION_CODING_THEORY_REED_SOLOMON_CODES:


test_10_7:
	make RS_6_3
	make RS_6_3_weight_enumerator
	make RREF_RS_6_4_7_weight_enumerator
	make Code_RS_11
	#make Code_RS_11_weight_enumerator
	make RS_7_3
	make RS_7_3_weight_enumerator
	make RS_7_3_field_reduction
	make RS_7_3_reduced_weight_enumerator
	make Reed_solomon_F8_work



RS_6_3:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 7 -end \
		-define C -code -field F -Reed_Solomon 6 3 -end \
		-with C -do -coding_theoretic_activity \
			-export_magma RS_6_3.magma \
		-end
	pdflatex RS_codes_q7_n6_d3.tex
	open RS_codes_q7_n6_d3.pdf


RS_6_3_weight_enumerator:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 7 -end \
		-define C -code -field F -Reed_Solomon 6 3 -end \
		-with C -do -coding_theoretic_activity \
			-export_magma RS_6_3.magma \
		-end \
		-with C -do \
		-coding_theoretic_activity \
			-weight_enumerator \
		-end

#[6,4,3]_7 code.
#( 1, 0, 0, 120, 360, 972, 948 )

#1y^6 + 90x^4y^2 + 108x^5y + 144x^6

RREF_RS_6_4_7_weight_enumerator:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 7 -end \
		-define v -vector -format 4 -field F \
			-compact $(CODE_RS_6_4_7) \
		-end \
		-define C -code -field F \
			-generator_matrix v \
		-end \
		-with C -do \
		-coding_theoretic_activity \
			-weight_enumerator \
		-end


#1y^6 + 120x^3y^3 + 360x^4y^2 + 972x^5y + 948x^6
#weight enumerator:
#( 1, 0, 0, 120, 360, 972, 948 )





Code_RS_11:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 11 -end \
		-define C -code -field F -Reed_Solomon 10 3 -end \
		-with C -do -coding_theoretic_activity \
			-export_magma RS_11_3.magma \
		-end


Code_RS_11_weight_enumerator:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 11 -end \
		-define C -code -field F -Reed_Solomon 10 3 -end \
		-with C -do -coding_theoretic_activity \
			-export_magma RS_11_3.magma \
		-end \
		-with C -do \
		-coding_theoretic_activity \
			-weight_enumerator \
		-end


#1*y^(10) + 1200*x^3*y^7 + 16800*x^4*y^6 + 209160*x^5*y^5 + 1734600*x^6*y^4 + 9918000*x^7*y^3 + 37189800*x^8*y^2 + 82644700*x^9*y + 82644620*x^(10)



RS_7_3:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 8 -end \
		-define C -code -field F -Reed_Solomon 7 3 -end \
		-with C -do -coding_theoretic_activity \
			-export_magma RS_7_3.magma \
		-end
	pdflatex RS_codes_q8_n7_d3.tex
	open RS_codes_q8_n7_d3.pdf


RS_7_3_weight_enumerator:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 8 -end \
		-define C -code -field F -Reed_Solomon 7 3 -end \
		-with C -do -coding_theoretic_activity \
			-export_magma RS_7_3.magma \
		-end \
		-with C -do \
		-coding_theoretic_activity \
			-weight_enumerator \
		-end
	pdflatex RS_codes_q8_n7_d3.tex
	open RS_codes_q8_n7_d3.pdf



RS_7_3_field_reduction:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 8 -end \
		-define C -code -field F -Reed_Solomon 7 3 -end \
		-with F -do \
		-finite_field_activity \
		-field_reduction "RS_8_red_2" \
			2 5 7 $(CODE_RS_F8_N7_K5_D3_GENMA) \
		-end
	$(ORBITER) -v 2 \
		-draw_matrix -input_csv_file RS_8_red_2.csv \
		-box_width 40 -bit_depth 24 \
		-partition 4 "3,3,3,3,3" "3,3,3,3,3,3,3" -end
	pdflatex field_reduction_Q8_q2_5_7.tex
	open field_reduction_Q8_q2_5_7.pdf


RS_7_3_reduced_weight_enumerator:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -format 15 -field F \
			-compact $(RS_8_reduced) \
		-end \
		-define C -code -field F \
			-generator_matrix v \
		-end \
		-with C -do \
		-coding_theoretic_activity \
			-weight_enumerator \
		-end



Reed_solomon_F8_work:
	$(ORBITER) -v 3 -define F -finite_field -q 8 -end \
		-with F -do -finite_field_activity \
		-parse_and_evaluate "test" "" "(t-a)*(t-a*a)" "a=2" -end

###############################################################################
# Section 10.8: Coding Theory - Twisted tensor product codes

SECTION_CODING_THEORY_TWISTED_TENSOR_PRODUCT_CODES:


test_10_8:
		make TTP_A_4


TTP_A_4:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-define F2 -finite_field -q 16 -end \
		-define C -code -field F -ttpA F2 -end \
		-with C -do -coding_theoretic_activity \
			-export_magma TTP_A_q4.magma \
		-end \
		-with C -do -coding_theoretic_activity \
			-report \
		-end
	pdflatex code_n18_k9_q4.tex
	open code_n18_k9_q4.pdf



###############################################################################
# Section 10.9: Coding Theory - Bounds

SECTION_CODING_THEORY_BOUNDS:


test_10_9:
	make bounds_for_d_given_n6_k4_q7
	make bounds_for_d_given_n15_k6_q2
	make coding_theory_bounds_q2
	make coding_theory_bounds_q8
	make GV_n15_k6_d5
	make bounds_for_d_given_n12_k4_q13
	make GV_n15_k6_d5_weight_enumerator
	make code_n15_k6_d6_a_we
	make code_n15_k6_d6_RREF
	make code_n15_k6_d6_check_RREF


bounds_for_d_given_n6_k4_q7:
	$(ORBITER) -v 2 \
		-make_bounds_for_d_given_n_and_k_and_q 6 4 7
	
bounds_for_d_given_n15_k6_q2:
	$(ORBITER) -v 2 \
		-make_bounds_for_d_given_n_and_k_and_q 15 6 2

#n = 15 k=6 q=2
#d_GV = 5
#d_singleton = 10
#d_hamming = 6
#d_plotkin = 7
#d_griesmer = 6


coding_theory_bounds_q2:
	$(ORBITER) -v 2 -table_of_bounds 20 2

# produces table_of_bounds_n20_q2.csv

coding_theory_bounds_q8:
	$(ORBITER) -v 2 -table_of_bounds 20 8


GV_n15_k6_d5:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define C -code -field F \
			-Gilbert_Varshamov 15 6 5 \
		-end


# [15,6] code created



bounds_for_d_given_n12_k4_q13:
	$(ORBITER) -v 2 \
		-make_bounds_for_d_given_n_and_k_and_q 12 4 13




GV_n15_k6_d5_weight_enumerator:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -format 6 -field F \
			-compact $(CODE_GV_N15_K6) \
		-end \
		-define C -code -field F \
			-generator_matrix v \
		-end \
		-with C -do \
		-coding_theoretic_activity \
			-weight_enumerator \
		-end

#1y^{15} + 27x^6y^9 + 24x^8y^7 + 9x^{10}y^5 + 3x^{12}y^3
# surprise: d = 6


code_n15_k6_d6_a_we:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -format 6 -field F \
			-compact $(CODE_15_6_6_A) \
		-end \
		-define C -code -field F \
			-generator_matrix v \
		-end \
		-with C -do \
		-coding_theoretic_activity \
			-weight_enumerator \
		-end

#1y^{15} + 27x^6y^9 + 24x^8y^7 + 9x^{10}y^5 + 3x^{12}y^3



# weight enumerator
#1y^{15} + 28x^6y^9 + 21x^8y^7 + 12x^{10}y^5 + 2x^{12}y^3


code_n15_k6_d6_RREF:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -format 6 -field F \
			-compact $(CODE_GV_N15_K6) \
		-end \
		-with F -do -finite_field_activity \
			-RREF v -normalize_from_the_right \
		-end
	#pdflatex RREF_example_q2_6_15.tex
	#open RREF_example_q2_6_15.pdf

code_n15_k6_d6_check_RREF:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -format 9 -field F \
			-compact $(CODE_GV_N15_K6_CHECK) \
		-end \
		-with F -do -finite_field_activity \
		-RREF v -normalize_from_the_right \
		-end
	#pdflatex RREF_example_q2_9_15.tex
	#open RREF_example_q2_9_15.pdf





###############################################################################
# Section 10.10: Coding Theory - Classification

SECTION_CODING_THEORY_CLASSIFICATION:

test_10_10:
	make codes_8_4_4
	#make codes_8_4_4_draw
	#make codes_14_4_9_3
	make codes_15_6_6_2
	make codes_d4
	make codes_24_12_8
	#make codes_24_12_8_draw
	make glynn_arc
	make five_points_in_general
	make codes_q13_12_4


# code classification:

codes_8_4_4:
	$(ORBITER) -v 6 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label codes_8_4_4 \
			-draw_options \
				-embedded -radius 250 \
				-line_width 1.0 -spanning_tree \
			-end \
		-end \
		-define G \
		-linear_group -PGL 4 2 -end \
		-with G -do \
		-group_theoretic_activity \
			-linear_codes Control 3 8 \
		-end
	#pdflatex codes_8_4_4_poset_lvl_8.tex
	#open codes_8_4_4_poset_lvl_8.pdf
	#pdflatex codes_8_4_4_poset.tex
	#open codes_8_4_4_poset.pdf


# ToDo: the previous command does not produce the graph

codes_8_4_4_draw:
	$(ORBITER) -v 3 \
		-draw_layered_graph \
			codes_8_4_4_poset_lvl_8.layered_graph \
			-radius 250 -embedded -line_width 1.0 \
			-y_stretch 1.0 -scale 0.5 \
		-end
	pdflatex codes_8_4_4_poset_lvl_8_draw.tex
	open codes_8_4_4_poset_lvl_8_draw.pdf



codes_14_4_9_3:
	$(ORBITER) -v 6 \
		-define Control -poset_classification_control \
			-problem_label codes_14_4_9_3 \
			-draw_options \
				-embedded -radius 250 \
			-end \
		-end \
		-define G \
		-linear_group -PGL 10 3 -end \
		-with G -do \
		-group_theoretic_activity \
			-linear_codes Control 9 14 \
		-end
	#pdflatex codes_14_4_9_3_poset_lvl_13.tex
	#open codes_14_4_9_3_poset_lvl_13.pdf 

#very slow


# ToDo: report is not generated

codes_15_6_6_2:
	$(ORBITER) -v 6 \
		-define Control -poset_classification_control \
			-problem_label codes_15_6_6_2 \
			-draw_options \
				-embedded -radius 250 \
			-end \
		-end \
		-define G \
		-linear_group -PGL 9 2 -end \
		-with G -do \
		-group_theoretic_activity \
			-linear_codes Control 6 15 \
		-end
	#pdflatex codes_15_6_6_2_poset_lvl_15.tex
	#open codes_15_6_6_2_poset_lvl_15.pdf 





codes_d4:
	$(ORBITER) -v 3 \
		-define Control -poset_classification_control \
			-W \
			-problem_label codes_r4_d4 \
			-draw_options -embedded -end \
		-end \
		-define G -linear_group -PGL 4 2 -end \
		-with G -do \
		-group_theoretic_activity \
			-linear_codes Control 4 100 \
		-end


codes_24_12_8:
	$(ORBITER) -v 6 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label codes_24_12_8 \
			-draw_options -embedded -radius 250 \
			-line_width 1.0 -spanning_tree -end \
		-end \
		-define G \
		-linear_group -PGL 12 2 -end \
		-with G -do \
		-group_theoretic_activity \
			-linear_codes Control 8 24 \
		-end
	#pdflatex codes_24_12_8_poset.tex
	#open codes_24_12_8_poset.pdf

#codes_24_12_8_poset_lvl_24.layered_graph

codes_24_12_8_draw:
	$(ORBITER) -v 3 \
		-draw_layered_graph \
			codes_24_12_8_poset_lvl_24.layered_graph \
			-radius 100 -spanning_tree -embedded \
			-line_width 0.5 -x_stretch 1.4 \
			-scale 0.25 -nodes_empty \
		-end
	pdflatex codes_24_12_8_poset_lvl_24_draw.tex
	open codes_24_12_8_poset_lvl_24_draw.pdf

glynn_arc:
	$(ORBITER) -v 5 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label glynn_arc \
			-draw_options -embedded -radius 250 \
			-line_width 1.0 -spanning_tree -end \
		-end \
		-define G \
		-linear_group -PGGL 5 9 -end \
		-with G -do \
		-group_theoretic_activity \
			-linear_codes Control 6 10 \
		-end
	#pdflatex glynn_arc_poset.tex
	#open glynn_arc_poset.pdf





five_points_in_general:
	$(ORBITER) -v 5 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label five_points_in_general \
			-draw_options \
				-embedded -radius 250 \
				-line_width 1.0 -spanning_tree \
			-end \
		-end \
		-define G \
		-linear_group -PGL 4 2 -end \
		-with G -do \
		-group_theoretic_activity \
		-linear_codes Control 4 5 \
		-end
	#pdflatex five_points_in_general_poset.tex
	#open five_points_in_general_poset.pdf




codes_q13_12_4:
	$(ORBITER) -v 6 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label codes_q13 \
		-end \
		-define G \
		-linear_group -PGL 4 13 -end \
		-with G -do \
		-group_theoretic_activity \
		-linear_codes Control 6 12 \
		-end
	#pdflatex codes_q13_poset.tex
	#open codes_q13_poset.pdf




###############################################################################
# Chapter 11 - Combinatorics
###############################################################################


###############################################################################
# Section 11.1: Combinatorics


SECTION_COMBINATORICS:
	


test_11_1:
	make Sym_4_conj_classes
	make Sym_10_conj_classes
	make Sym_15_conj_classes
	make Char_Sym_4
	make Char_Sym_5
	#make Char_Sym_6
	make all_subsets_10_3
	make random_k_subsets
	make rank_k_subsets_test
	make Walsh_matrix_4
	make Dedekind_10_10
	make Dedekind_30_2
	make Dedekind_100_2
	make elementary_symmetric_functions_4
	make elementary_symmetric_functions_8
	make domino_portrait
	make domino_portrait_input



Sym_4_conj_classes:
	$(ORBITER) -v 2 -conjugacy_classes_Sym_n 4

Sym_10_conj_classes:
	$(ORBITER) -v 2 -conjugacy_classes_Sym_n 10
	open classes_Sym_10.csv

Sym_15_conj_classes:
	$(ORBITER) -v 2 -conjugacy_classes_Sym_n 15

Char_Sym_4:
	$(ORBITER) -v 2 -character_table_symmetric_group 4

Char_Sym_5:
	$(ORBITER) -v 2 -character_table_symmetric_group 5


# too slow:

Char_Sym_6:
	$(ORBITER) -v 2 -character_table_symmetric_group 6

all_subsets_10_3:
	$(ORBITER) -v 2 -tree_of_all_k_subsets 10 3


random_k_subsets:
	$(ORBITER) -v 4 \
		-create_random_k_subsets 10 5 20


rank_k_subsets_test:
	$(ORBITER) -v 2 \
		-rank_k_subset 10 3 0,1,2,0,3,4,1,3,5,2,4,5,3,6,7,1,6,8,0,6,9


Walsh_matrix_4:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-with F -do -finite_field_activity \
			-Walsh_matrix 4 -end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file Walsh_01_4.csv \
		-box_width 10 -bit_depth 24 -partition 3 16 16 -end
	#pdflatex GF_2.tex
	#open GF_2.pdf


Dedekind_10_10:
	$(ORBITER) -v 3 -Dedekind_numbers 2 10 2 10


Dedekind_30_2:
	$(ORBITER) -v 3 -Dedekind_numbers 2 30 2 2


Dedekind_100_2:
	$(ORBITER) -v 3 -Dedekind_numbers 2 100 2 2



elementary_symmetric_functions_4:
	$(ORBITER) -make_elementary_symmetric_functions 4 4

elementary_symmetric_functions_8:
	$(ORBITER) -make_elementary_symmetric_functions 8 8



domino_portrait:
	cp $(MY_PATH)/examples/users_guide/anton_28x32.? .
	$(ORBITER) -v 3 -domino_portrait 7 4 anton_28x32 -end

domino_portrait_input:
	cp $(MY_PATH)/examples/users_guide/anton_28x32.? .
	$(ORBITER) -v 2 \
		-define all_one_r -vector -repeat 1 28 -end \
		-define all_one_c -vector -repeat 1 32 -end \
		-draw_matrix \
			-grayscale \
			-invert_colors \
			-input_csv_file anton_28x32_m.csv \
			-box_width 20 -bit_depth 8 \
			-partition 3 \
				all_one_c all_one_r \
		-end
	open anton_28x32_m_draw.bmp


###############################################################################
# Section 11.2: Diophantine Systems

SECTION_DIOPHANT:


test_11_2:
	make part10
	make octic_monomials
	make solve_test_system
	make McKay_test
	make DLX_test



part10:
	$(ORBITER) -v 4 \
		-define A -vector -format 1 -dense "10,9,8,7,6,5,4,3,2,1" -end \
		-define D -diophant \
			-label part10 \
			-coefficient_matrix A \
			-RHS "10,10,1" \
			-x_min_global 0 -x_max_global 10 \
		-end \
		-with D -do \
			-diophant_activity -solve_mckay \
		-end
		


	
# Finds 42 solutions with 67 backtrack steps


octic_monomials:
	$(ORBITER) -v 4 \
		-define A -vector -format 1 -dense "1,1,1,1" -end \
		-define D -diophant \
			-label octic_monomials \
			-coefficient_matrix A \
			-RHS "8,8,1" \
			-x_min_global 0 -x_max_global 8 \
		-end \
		-with D -do \
			-diophant_activity -solve_mckay \
		-end
	sort -r octic_monomials.sol >octic_monomials_sorted.txt

#Found 165 solutions with 210 backtrack steps
# 165=binomial(11,3)


solve_test_system:
	$(ORBITER) -v 4 \
		-define A -vector -format 7 -dense $(TEST_SYSTEM) -end \
		-define D -diophant \
			-label test_system \
			-coefficient_matrix A \
			-RHS $(TEST_RHS) \
			-x_min_global 0 -x_max_global 1 \
		-end


McKay_test:
	$(ORBITER) -v 4 \
		-define A -vector -format 7 -dense $(TEST_SYSTEM) -end \
		-define D -diophant \
			-label test_system \
			-coefficient_matrix A \
			-RHS $(TEST_RHS) \
			-x_min_global 0 -x_max_global 1 \
		-end \
		-with D -do \
			-diophant_activity -solve_mckay \
		-end

DLX_test:
	$(ORBITER) -v 4 \
		-define A -vector -format 7 -dense $(TEST_SYSTEM) -end \
		-define D \
		-diophant -label test_system \
			-coefficient_matrix A \
			-RHS $(TEST_RHS) \
			-x_min_global 0 -x_max_global 1 \
		-end \
		-with D -do \
			-diophant_activity -solve_DLX \
		-end

#DLX_test.sol
# 1 solution in 6 backtrack steps




###############################################################################
# Section 11.3: Combinatorial Linear Spaces

SECTION_COMBINATORIAL_LINEAR_SPACES:


test_11_3:
	make linsp6
	make linsp7
	make linsp30_pt_types
	make linsp30_pt_distribution


linsp6:
	$(ORBITER) -v 4 \
		-define A -vector -format 1 -dense "15,10,6,3,1" -end \
		-define D -diophant -label linsp6 \
		-coefficient_matrix A \
		-RHS "15,15,1" \
		-x_min_global 0 \
		-x_max_global 15 \
		-end \
		-with D -do \
			-diophant_activity -solve_mckay \
		-end
	
# Found 15 solutions with 22 backtrack steps




linsp7:
	$(ORBITER) -v 4 \
		-define A -vector -format 1 -dense "21,15,10,6,3,1" -end \
		-define D -diophant -label linsp7 \
		-coefficient_matrix A \
		-RHS "21,21,1" \
		-x_min_global 0 \
		-x_max_global 21 \
		-end \
		-with D -do \
			-diophant_activity -solve_mckay \
		-end
	

# 32 solutions in 45 backtrack steps







linsp30_pt_types:
	$(ORBITER) -v 4 \
		-define A -vector -format 1 -dense "6,4,3" -end \
		-define D -diophant \
			-label linsp30_pt_types \
			-coefficient_matrix A \
			-RHS "29,29,1" -x_bounds "0,1,0,27,0,24" \
		-end \
		-with D -do \
			-diophant_activity -solve_mckay \
		-end

linsp30_pt_distribution:
	$(ORBITER) -v 4 \
		-define A -vector -format 6 -dense \
			"1,1,1,1,1,1,0,0,5,2,5,2,1,5,3,7,10,1,10,1,0,10,3,21" \
		-end \
		-define D -diophant \
			-label linsp30_pt_distribution \
			-coefficient_matrix A \
			-RHS "30,30,1,7,7,1,135,135,1,96,96,1,0,351,2,0,276,2" \
			-x_min_global 0 -x_max_global 30 \
		-end \
		-with D -do \
			-diophant_activity -solve_mckay \
		-end \
		-with D -do \
			-diophant_activity -draw_as_bitmap 20 8 \
		-end



###############################################################################
# Section 11.4: Combinatorial Linear Spaces

test_11_4:
	make geo_pasch
	make geo_petersen
	make geo_7_3
	make geo_7_3_no_square_test
	make geo_7_3_no_square_test_draw
	make geo_7_3_orderly
	make geo_7_3_orderly_draw
	make geo_7_3_orderly_mem_debug
	make geo_8_3
	make geo_9_3
	make geo_10_3
	make geo_10_3_inc_draw
	make geo_10_3_orderly
	make geo_10_3_orderly_mem_debug
	make geo_10_3_tree
	make geo_10_3_tree_path
	#make Desargues_path_lex_least_draw
	#make Desargues_path_can_anc_draw
	make geo_11_3
	make geo_12_3
	make geo_12_3_orderly
	make geo_13_3
	make geo_13_3_orderly
	make geo_14_3
	make geo_14_3_orderly
	#make 15_3.inc
	make geo_15_3_g4
	make geo_17_3_g4_orderly
	make geo_18_3_g4
	make geo_19_3_g4
	make geo_20_3_g4
	make geo_21_3_g4
	make geo_15_4
	make geo_16_4_g4
	make geo_16
	make 40_4_g4.inc
	make geo_63_3_g6
	make geo_LSQ6.inc


geo_pasch:
	$(ORBITER) -v 8 \
		-define Test_lines -set -loop 1 7 1 -end \
		-define Geo -geometry_builder \
			-V 6 -B 4 -TDO 2 -fuse 1 \
			-fname_GEO pasch \
			-output_to_inc_file \
			-test Test_lines \
		-end


geo_petersen:
	$(ORBITER) -v 8 \
		-define Test_lines -set -loop 3 11 1 -end \
		-define Geo -geometry_builder \
			-V 10 -B 15 -TDO 3 -fuse 1 \
			-fname_GEO petersen -girth 5 \
			-output_to_inc_file \
			-search_tree \
			-test Test_lines \
		-end

geo_7_3:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 3 8 1 -end \
		-define Geo -geometry_builder \
			-V 7 -B 7 -TDO 3 \
			-fuse 1 \
			-fname_GEO 7_3 \
			-output_to_inc_file \
			-test Test_lines \
		-end

geo_7_3_no_square_test:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 3 8 1 -end \
		-define Geo -geometry_builder \
			-V 7 -B 7 -TDO 3 \
			-fuse 1 \
			-fname_GEO 7_3_nst \
			-output_to_inc_file \
			-test Test_lines \
			-no_square_test \
		-end

geo_7_3_no_square_test_draw:
	$(ORBITER) -v 10 \
		-draw_incidence_structure_description \
			-width 60 -width_10 6 -end \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries 7_3_nst.inc 7 7 21 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-draw_incidence_matrices \
			7_3_nst \
		-end
	pdflatex 7_3_nst_incma.tex
	open 7_3_nst_incma.pdf



geo_7_3_orderly:
	$(ORBITER) -v 200 \
		-define Test_lines -set -loop 3 8 1 -end \
		-define Geo -geometry_builder \
			-V 7 -B 7 -TDO 3 \
			-fuse 1 -fname_GEO 7_3 \
			-output_to_inc_file \
			-test Test_lines \
			-search_tree \
			-orderly \
		-end

geo_7_3_orderly_draw:
	$(ORBITER) -v 20 \
		-draw_options -embedded -radius 50 \
			-xin 10000 -yin 10000 \
			-xout 1000000 -yout 1000000 \
			-nodes_empty \
			-scale 0.5 -line_width 0.3 \
		-end \
		-tree_draw -file 7_3_tree.txt -end
	pdflatex 7_3_tree_draw.tex
	open 7_3_tree_draw.pdf

geo_7_3_orderly_mem_debug:
	$(ORBITER) -v 20 \
		-memory_debug 2 \
		-define Test_lines -set -loop 3 8 1 -end \
		-define Geo -geometry_builder \
			-V 7 -B 7 -TDO 3 \
			-fuse 1 -fname_GEO 7_3 \
			-output_to_inc_file \
			-test Test_lines \
			-search_tree \
			-orderly \
		-end

geo_8_3:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 3 9 1 -end \
		-define Geo -geometry_builder \
			-V 8 -B 8 -TDO 3 \
			-fuse 1 -fname_GEO 8_3 \
			-output_to_inc_file \
			-test Test_lines \
		-end

#-print_at_line 4
# 1 geo: 0 11 18 29 30 38 44 54 
# ago=48





geo_9_3:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 3 10 1 -end \
		-define Geo -geometry_builder \
			-V 9 -B 9 -TDO 3 \
			-fuse 1 -fname_GEO 9_3 \
			-output_to_inc_file \
			-test Test_lines \
		-end


geo_10_3:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 4 11 1 -end \
		-define Geo -geometry_builder \
			-V 10 -B 10 -TDO 3 -fuse 1 \
			-fname_GEO 10_3 \
			-output_to_inc_file \
			-output_to_sage_file \
			-test Test_lines \
		-end



# 10 geos
# 8/26/2021: 0 sec on Mac


geo_10_3_inc_draw:
	$(ORBITER) -v 10 \
		-draw_incidence_structure_description \
			-width 60 -width_10 6 -end \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries \
			10_3.inc 10 10 30 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-draw_incidence_matrices \
			10_3_inc \
		-end
	pdflatex 10_3_inc_incma.tex
	open 10_3_inc_incma.pdf


geo_10_3_orderly:
	$(ORBITER) -v 20 \
		-define Test_lines -set -loop 4 11 1 -end \
		-define Geo -geometry_builder \
			-V 10 -B 10 -TDO 3 -fuse 1 \
			-fname_GEO 10_3 \
			-output_to_inc_file \
			-test Test_lines \
			-orderly \
		-end

geo_10_3_orderly_mem_debug:
	$(ORBITER) -v 2 \
		-memory_debug 2 \
		-define Test_lines -set -loop 4 11 1 -end \
		-define Geo -geometry_builder \
			-V 10 -B 10 -TDO 3 -fuse 1 \
			-fname_GEO 10_3 \
			-output_to_inc_file \
			-test Test_lines \
			-orderly \
		-end


geo_10_3_tree:
	$(ORBITER) -v 20 \
		-define Test_lines -set -loop 0 11 1 -end \
		-define GEO -geometry_builder \
			-V 10 -B 10 -TDO 3 -fuse 1 \
			-fname_GEO 10_3 \
			-output_to_inc_file \
			-search_tree \
			-test Test_lines \
		-end
	$(ORBITER) -v 20 \
		-draw_options -embedded -radius 40 \
			-paperheight 220 \
			-paperwidth 330 \
			-xin 10000 -yin 10000 \
			-xout 1000000 -yout 500000 \
			-scale 2 -line_width 0.3 \
			-nodes_empty \
		-end \
		-tree_draw \
			-file 10_3_tree.txt \
		-end
	pdflatex 10_3_tree_draw.tex
	open 10_3_tree_draw.pdf




geo_10_3_tree_path:
	$(ORBITER) -v 20 \
		-define Test_lines -set -loop 0 11 1 -end \
		-define GEO -geometry_builder \
			-V 10 -B 10 -TDO 3 -fuse 1 \
			-fname_GEO 10_3 \
			-output_to_inc_file \
			-search_tree \
			-test Test_lines \
		-end
	$(ORBITER) -v 20 \
		-draw_options -embedded -radius 20 \
			-paperheight 220 \
			-paperwidth 330 \
			-xin 10000 -yin 10000 \
			-xout 1000000 -yout 500000 \
			-scale 2 -line_width 0.3 \
		-end \
		-tree_draw \
			-restrict 2 \
			-file 10_3_tree.txt \
			-select_path "0,0,15,26,46,56,72,80,93,106,119" \
		-end
	pdflatex 10_3_tree_draw.tex
	open 10_3_tree_draw.pdf

#			-nodes_empty \
#-sideways 


# ToDo:
#Desargues_path_lex_least.inc is missing

Desargues_path_lex_least_draw:
	echo $(DESARGUES_PATH_LEX_LEAST) >Desargues_path_lex_least.inc
	$(ORBITER) -v 10 \
		-draw_incidence_structure_description \
			-width 60 -width_10 6 -end \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries_by_row_ranks \
			Desargues_path_lex_least.inc 10 10 3 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-draw_incidence_matrices \
			Desargues_path_lex_least \
		-end
	pdflatex Desargues_path_lex_least_incma.tex
	open Desargues_path_lex_least_incma.pdf

DESARGUES_PATH_CANONICAL_ANCESTOR="10 10 3\n0\n1 0\n2 112 119\n3 89 112 119\n4 114 118 89 82\n5 106 114 69 107 111\n6 85 105 112 99 83 61\n7 94 105 113 85 35 83 60\n8 26 119 55 105 92 79 74 48\n9 119 93 106 15 26 79 55 73 47\n10 0 119 93 106 15 26 79 55 73 47\n-1\n"

Desargues_path_can_anc_draw:
	echo $(DESARGUES_PATH_CANONICAL_ANCESTOR) >Desargues_path_can_anc.inc
	$(ORBITER) -v 10 \
		-draw_incidence_structure_description \
			-width 60 -width_10 6 -end \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries_by_row_ranks Desargues_path_can_anc.inc 10 10 3 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-draw_incidence_matrices \
			Desargues_path_can_anc \
		-end
	pdflatex Desargues_path_can_anc_incma.tex
	open Desargues_path_can_anc_incma.pdf



geo_11_3:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 4 12 1 -end \
		-define Geo -geometry_builder \
			-V 11 -B 11 -TDO 3 \
			-fuse 1 -fname_GEO 11_3 \
			-output_to_inc_file \
			-test Test_lines \
		-end

# 31 geos
# 8/26/2021: 0 sec on Mac

geo_12_3:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 4 13 1 -end \
		-define Geo -geometry_builder \
			-V 12 -B 12 -TDO 3 \
			-fuse 1 -fname_GEO 12_3 \
			-output_to_inc_file \
			-test Test_lines \
			-output_to_sage_file \
		-end

# 229 geos
#User time: 0.45 of a second, dt=45 tps = 100
#nb_calls_to_densenauty=24586


geo_12_3_orderly:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 4 13 1 -end \
		-define Geo -geometry_builder \
			-V 12 -B 12 -TDO 3 \
			-fuse 1 -fname_GEO 12_3 \
			-output_to_inc_file \
			-test Test_lines \
			-orderly \
		-end



geo_13_3:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 4 14 1 -end \
		-define Geo -geometry_builder \
			-V 13 -B 13 -TDO 3 \
			-fuse 1 -fname_GEO 13_3 \
			-output_to_inc_file \
			-test Test_lines \
		-end

# 2036 geos, 96, 39, 13, 12^4, 8^3, 6^16, 4^30, 3^20, 2^190, 1^1770
#User time: 0:4
#nb_calls_to_densenauty=216777

geo_13_3_orderly:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 4 14 1 -end \
		-define Geo -geometry_builder \
			-V 13 -B 13 -TDO 3 \
			-fuse 1 -fname_GEO 13_3 \
			-output_to_inc_file \
			-test Test_lines \
			-orderly \
		-end



geo_14_3:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 4 15 1 -end \
		-define Geo -geometry_builder \
			-V 14 -B 14 -TDO 3 \
			-fuse 1 -fname_GEO 14_3 \
			-output_to_inc_file \
			-test Test_lines \
		-end

# 21399 geos, 56448, 128, 24^2, 16^3, 14^3, 12^7, 8^15, 7, 6^12, 4^91, 3^19, 2^916, 1^20328
#User time: 0:55
#nb_calls_to_densenauty=2089344


geo_14_3_orderly:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 4 15 1 -end \
		-define Geo -geometry_builder \
			-V 14 -B 14 -TDO 3 \
			-fuse 1 -fname_GEO 14_3 \
			-output_to_inc_file \
			-test Test_lines \
			-orderly \
		-end

#User time: 0:50


15_3.inc:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 4 16 1 -end \
		-define Geo -geometry_builder \
			-V 15 -B 15 -TDO 3 \
			-fuse 1 -fname_GEO 15_3 \
			-output_to_inc_file \
			-test Test_lines \
		-end

# 245342 geos, 8064, 720, 192^2, 128, 72, 48^6, 32, 30^2, 24^2, 20^2, 18, 16^10, 15^2, 12^11, 10^3, 8^34, 6^59, 5^5, 4^180, 3^69, 2^3709, 1^241240
# 8 min 11 sec on Mac 
# running out of memory


geo_15_3_g4:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 4 16 1 -end \
		-define Geo -geometry_builder \
			-V 15 -B 15 -TDO 3 \
			-fuse 1 -fname_GEO 15_3_g4 \
			-output_to_inc_file \
			-girth 4 \
			-search_tree \
			-test Test_lines \
		-end
	$(ORBITER) -v 2 \
		-draw_options -embedded -radius 50 \
			-nodes_empty \
			-scale 0.5 -line_width 0.3 -end \
		-tree_draw -file 15_3_g4_tree.txt -end
	pdflatex 15_3_g4_tree_draw.tex
	open 15_3_g4_tree_draw.pdf

# The unique Cremona Richmond configuration with group of order 720
#User time: 0 of a second, dt=0 tps = 100
#nb_calls_to_densenauty=23

#-sideways 




geo_17_3_g4_orderly:
	$(ORBITER) -v 2 \
		-memory_debug 2 \
		-define Test_lines -set -loop 4 18 1 -end \
		-define Geo -geometry_builder \
			-V 17 -B 17 -TDO 3 \
			-fuse 1 -fname_GEO 17_3_g4 \
			-output_to_inc_file \
			-girth 4 \
			-test Test_lines \
			-orderly \
		-end

# 1 sol

geo_18_3_g4:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 4 19 1 -end \
		-define Geo -geometry_builder \
			-V 18 -B 18 -TDO 3 \
			-fuse 1 -fname_GEO 18_3_g4 \
			-output_to_inc_file \
			-girth 4 \
			-search_tree \
			-test Test_lines \
		-end

# 4 sol, 1 sec


geo_19_3_g4:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 4 20 1 -end \
		-define Geo -geometry_builder \
			-V 19 -B 19 -TDO 3 \
			-fuse 1 -fname_GEO 19_3_g4 \
			-output_to_inc_file \
			-girth 4 \
			-test Test_lines \
		-end

# 14 sol, 10 sec on Mac

geo_20_3_g4:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 4 21 1 -end \
		-define Geo -geometry_builder \
			-V 20 -B 20 -TDO 3 \
			-fuse 1 -fname_GEO 20_3_g4 \
			-output_to_inc_file \
			-girth 4 \
			-test Test_lines \
		-end

# 162 sol, User time: 2:5 on Mac

geo_21_3_g4:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 4 22 1 -end \
		-define Geo -geometry_builder \
			-V 21 -B 21 -TDO 3 \
			-fuse 1 -fname_GEO 21_3_g4 \
			-output_to_inc_file \
			-girth 4 \
			-test Test_lines \
		-end


geo_15_4:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 4 16 1 -end \
		-define Geo -geometry_builder \
			-V 15 -B 15 -TDO 4 \
			-fuse 1 -fname_GEO 15_4 \
			-output_to_inc_file \
			-search_tree \
			-test Test_lines \
		-end
	$(ORBITER) -v 2 \
		-draw_options -embedded -radius 50 \
			-nodes_empty \
			-scale 0.5 -line_width 0.3 -end \
		-tree_draw -file 15_4_tree.txt -end 
	pdflatex 15_4_tree_draw.tex
	open 15_4_tree_draw.pdf

# 4 objects
# ago=360, 30, 24, 15
#User time: 0.15 of a second, dt=15 tps = 100
#nb_calls_to_densenauty=6767



geo_16_4_g4:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 4 17 1 -end \
		-define Geo -geometry_builder \
			-V 16 -B 16 -TDO 4 \
			-fuse 1 -fname_GEO 16_4_g4 \
			-output_to_inc_file \
			-girth 4 \
			-test Test_lines \
		-end

# none


geo_15_6:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 4 16 1 -end \
		-define Geo -geometry_builder \
			-V 15 -B 15 -TDO 6 -fuse 1 \
			-fname_GEO 15_6 \
			-output_to_inc_file \
			-test Test_lines \
			-output_to_sage_file \
		-end




geo_16:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 3 17 1 -end \
		-define Geo -geometry_builder \
			-V 16 -B 20 -TDO 5 \
			-fuse 1 -fname_GEO geo_16 \
			-output_to_inc_file \
			-test Test_lines \
		-end


40_4_g4.inc:
	$(ORBITER) -v 5 \
		-define Test_lines -set -loop 0 41 1 -end \
		-define Geo -geometry_builder \
			-V 40 -B 40 -TDO 4 \
			-fuse 1 \
			-fname_GEO 40_4_g4 \
			-girth 4 \
			-search_tree \
			-special_test_not_orderly \
			-test Test_lines \
			-output_to_sage_file \
			-output_to_inc_file \
		-end
	$(ORBITER) -v 2 \
		-draw_options -embedded -radius 50 \
			-xin 10000 -yin 10000 \
			-xout 1000000 -yout 1000000 \
			-nodes_empty \
			-scale 0.5 -line_width 0.3 -end \
		-tree_draw -file 40_4_g4_tree.txt -end 
	pdflatex 40_4_g4_tree_draw.tex
	open 40_4_g4_tree_draw.pdf


#-special_test_not_orderly is important for speed purposes
# 2 geos, ago=51840^2
# 40_4_g4.inc


geo_63_3_g6:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 4 64 1 -end \
		-define Geo -geometry_builder \
			-V 63 -B 63 -TDO 3 \
			-fuse 1 -fname_GEO 63_3_g6 \
			-girth 6 \
			-test Test_lines \
			-special_test_not_orderly \
			-output_to_sage_file \
			-output_to_inc_file \
			-search_tree \
		-end

# time 0:38 on Mac Oct 15, 2022
# 2 geos, ago: 12096^2
# 63_3_g6.inc
# split Cayley hexagon H(2) and its dual
# group = G_2(2) = PGU(3,3)



geo_LSQ6.inc:
	$(ORBITER) -v 2 \
		-define Test_lines -set -loop 1 19 1 -end \
		-define Geo -geometry_builder \
			-V 6,6,6 -B 1,1,1,36 -TDO \
			"1,0,0,6, 0,1,0,6, 0,0,1,6" \
			-fuse 3 \
			-fname_GEO LSQ6 \
			-output_to_inc_file \
			-test Test_lines \
		-end



###############################################################################
# Section 11.5: Design Theory

SECTION_DESIGN_THEORY:


test_11_5:
	make design_PG_2_3
	make design_PG_2_4
	make wreath_product_designs_n4_k2_inc.txt
	make wreath_product_designs_n8_k6_inc.txt
	make KM_cyclic_7
	make KM_PGGL_2_32
	#make KM_PGGL_2_32_solve
	make KM_PSL_3_5



design_PG_2_3:
	$(ORBITER) -v 8 \
		-define F -finite_field -q 3 -end \
		-define D -design -field F -family PG_2_q -end \
		-with D -do \
			-design_activity \
				-export_inc \
		-end

# writes PG_2_3_inc.txt

design_PG_2_4:
	$(ORBITER) -v 8 \
		-define F -finite_field -q 4 -end \
		-define D -design -field F -family PG_2_q -end \
		-with D -do \
			-design_activity \
				-export_inc \
		-end



wreath_product_designs_n4_k2_inc.txt:
	$(ORBITER) -v 8 \
		-define D -design -wreath_product_designs 4 2 -end \
		-with D -do \
			-design_activity \
				-export_inc \
		-end



wreath_product_designs_n8_k6_inc.txt:
	$(ORBITER) -v 8 \
		-define D -design -wreath_product_designs 8 6 -end \
		-with D -do \
			-design_activity \
				-export_inc \
		-end


# wreath_product_designs_n8_k6_inc.txt
# The design has 16 points and 3920 blocks of size 6.




KM_cyclic_7:
	$(ORBITER) -v 3 \
		-orbiter_path $(ORBITER_PATH) \
		-define gens -vector -dense "1,2,3,4,5,6,0" -end \
		-define G -permutation_group -symmetric_group 7 \
			-subgroup_by_generators "C7" 7 1 gens \
		-end \
		-define Control -poset_classification_control \
			-problem_label C7 -W -depth 3 \
			-draw_options -embedded -sideways -radius 50 \
				-scale 0.5 -line_width 0.3 -end \
		-end \
		-define Orb -orbits -group G \
			-on_subsets 3 Control \
		-end \
		-with Orb -do -orbits_activity \
			-Kramer_Mesner_matrix 2 3 \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	$(ORBITER) -v 4 \
		-define A -vector -file C7_KM_2_3.csv -end \
		-define D -diophant \
		-label "C7_KM_2_3_system" \
		-coefficient_matrix A \
		-RHS_constant "1,1,1" \
		-x_min_global 0 -x_max_global 1 \
		-end \
		-with D -do \
			-diophant_activity -solve_mckay \
		-end


# to create simple 7-designs on 33 points with block size 8 and lambda = 10 invariant under PGGL(2,32):

KM_PGGL_2_32:
	$(ORBITER) -v 3 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label KM_PGGL_2_32 \
			-W -depth 8 \
			-draw_options -embedded -sideways -radius 50 \
				-scale 0.5 -line_width 0.3 -end \
		-end \
		-define G -linear_group -PGGL 2 32 -end \
		-define Orb -orbits -group G \
			-on_subsets 8 Control \
		-end \
		-with Orb -do -orbits_activity \
			-Kramer_Mesner_matrix 7 8 \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file KM_PGGL_2_32_KM_7_8.csv \
		-box_width 20 -bit_depth 24 \
		-partition 3 32 97 -end
	pdflatex KM_PGGL_2_32_poset_lvl_8.tex
	open KM_PGGL_2_32_poset_lvl_8.pdf
	open KM_PGGL_2_32_KM_7_8_draw.bmp

KM_PGGL_2_32_solve:
	$(ORBITER) -v 4 \
		-define A -vector -file KM_PGGL_2_32_KM_7_8.csv -end \
		-define D -diophant \
		-label "KM_PGGL_2_32_KM_7_8_system" \
		-coefficient_matrix A \
		-RHS_constant "10,10,1" \
		-x_min_global 0 -x_max_global 1 \
		-end \
		-with D -do \
			-diophant_activity -solve_mckay \
		-end




KM_PSL_3_5:
	$(ORBITER) -v 3 \
		-orbiter_path $(ORBITER_PATH) \
		-define Control -poset_classification_control \
			-problem_label KM_PSL_3_5 \
			-W -depth 10 \
			-draw_options -embedded -sideways \
				-radius 50 -scale 0.5 -line_width 0.3 -end \
		-end \
		-define G -linear_group -PSL 3 5 -end \
		-define Orb -orbits -group G \
			-on_subsets 10 Control \
		-end \
		-with Orb -do -orbits_activity \
			-Kramer_Mesner_matrix 8 10 \
		-end \
		-with Orb -do -orbits_activity \
			-report \
			-report_options -draw_poset -end \
		-end 
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file KM_PSL_3_5_KM_8_10.csv \
		-box_width 10 -bit_depth 8 -partition 3 42 174 -end
	$(ORBITER) -v 4 \
		-define A -vector -file KM_PSL_3_5_KM_8_10.csv -end \
		-define D -diophant \
			-label "KM_PSL_3_5_KM_8_10_system" \
			-coefficient_matrix A \
			-RHS_constant "93,93,1" \
			-x_min_global 0 -x_max_global 1 \
		-end \
		-with D -do \
			-diophant_activity -solve_mckay \
		-end




###############################################################################
# Section 11.6: Design Theory - Large Sets

SECTION_DESIGN_THEORY_LARGE_SETS:

test_11_6:
	make AG_2_3.inc
	make LS_AG_2_3_design_table_create
	make AG_2_3_on_designs
	make AG_2_3_stab_orb_0
	make AG_2_3_stab_orb_0_Perm840_res192
	make LS_AG_2_3_disjoint_sets_graph_and_cliques
	make LS_AG_2_3_disjoint_sets_split
	make LS_AG_2_3_export_solutions
	make design_PG_2_3_table_create
	make design_PG_2_3_group_5
	make design_PG_2_3_group_5_sol_0



AG_2_3.inc:
	$(ORBITER) -v 2 \
		-define Geo -geometry_builder \
			-V 9 -B 12 \
			-TDO 4 -fuse 1 \
			-fname_GEO AG_2_3 \
			-test 3,4,5,6,7,8,9 \
			-output_to_inc_file \
		-end

#9 12 3
#0 13 22 27 35 41 47 53 55 59 71 76 
#-1 1
#432





LS_AG_2_3_design_table_create:
	$(ORBITER) -v 5 \
		-define B -vector -dense $(AG_2_3_BLOCKS) -end \
		-define D -design -list_of_blocks_coded 9 3 B -end \
		-define Sym9 -permutation_group -symmetric_group 9 -end \
		-define T -design_table D "AG_2_3" Sym9 -end

# creates AG_2_3_design_table.csv 
# and AG_2_3.makefile

#0,0,13,22,27,35,41,47,53,55,59,71,76
# is the first design in AG_2_3_design_table.csv
 
#poset_orbit_node::init_root_node storing strong generators for a group of order 362880
# stabilizer order 432
# 840 designs

#User time: 0.13 of a second, dt=13 tps = 100


AG_2_3_on_designs:
	$(ORBITER) -v 2 \
		-define gens -vector -file AG_2_3_gens.csv -end \
		-define G -permutation_group \
		-bsgs AG_2_3 "AG_2_3" 840 362880 "0,1,2,3,4,5,6,7" 8 gens -end \
		-define Orb -orbits -group G \
			-on_points \
		-end \
		-with Orb -do -orbits_activity \
			-stabilizer 0 \
		-end

#Written file AG_2_3_stab_orb_0.makefile of size 239





# the stabilizer of the first design:


#ToDo AG_2_3_stab_orb_0_gens.csv does not exist or is empty

AG_2_3_stab_orb_0:
	$(ORBITER) -v 2 \
		-define gens -vector -file AG_2_3_stab_orb_0_gens.csv -end \
		-define G -permutation_group \
		-bsgs AG_2_3_stab_orb_0 "AG_2_3_stab_orb_0" \
			840 432 "0,1,2,3,4,5,6,7,8" 5 gens \
		-end \
		-define Gr -modified_group -from G \
			-restricted_action $(LARGE_SET_AG_2_3_NEIGHBOR_SET) \
		-end \
		-with Gr -do \
		-group_theoretic_activity \
			-export_orbiter \
		-end
		

AG_2_3_stab_orb_0_Perm840_res192:
	$(ORBITER) -v 2 \
		-define gens -vector -file Perm840_res192_gens.csv -end \
		-define G -permutation_group \
		-bsgs Perm840_res192 "Perm840 {\rm res192}" \
			192 432 "0,1,2,3,4,5,6,7,8" 4 gens \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex Perm840_res192_report.tex
	open Perm840_res192_report.pdf



LS_AG_2_3_disjoint_sets_graph_and_cliques:
	$(ORBITER) -v 2 \
		-define Gamma -graph \
			-disjoint_sets_graph \
			AG_2_3_design_table.csv \
		-end \
		-with Gamma -do \
		-graph_theoretic_activity \
			-save \
		-end \
		-with Gamma -do \
		-graph_theoretic_activity \
			-find_cliques -target_size 7 -end \
		-end \
		-print_symbols


#AG_2_3_design_table_disjoint_sets.colored_graph
#User time: 0.66 of a second, dt=66 tps = 100
#AG_2_3_design_table_disjoint_sets_sol.txt
#AG_2_3_design_table_disjoint_sets_sol.csv

#15360 solutions

LS_AG_2_3_disjoint_sets_split:
	$(ORBITER) -v 4 \
		-define Gamma -graph -load \
			AG_2_3_design_table_disjoint_sets.colored_graph \
		-end \
		-with Gamma -do \
		-graph_theoretic_activity \
			-split_by_clique "0" "0" \
		-end


#AG_2_3_design_table_disjoint_sets_0.graph
#AG_2_3_design_table_disjoint_sets_0_subset.txt



LS_AG_2_3_export_solutions:
	$(ORBITER) -v 20 \
		-define B -vector -dense $(AG_2_3_BLOCKS) -end \
		-define D -design -list_of_blocks 9 3 B -end \
		-define Sym9 -permutation_group -symmetric_group 9 -end \
		-define T -design_table D "AG_2_3" Sym9 -end \
		-with D -do \
		-design_activity \
			-extract_solutions_by_index "AG_2_3" Sym9 \
				AG_2_3_design_table_disjoint_sets_sol.csv \
				solutions.csv \
				"" \
		-end


#User time: 0.39 of a second, dt=39 tps = 100
# solutions.csv




design_PG_2_3_table_create:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 3 -end \
		-define D -design -field F -family PG_2_q -end \
		-define Sym13 -permutation_group -symmetric_group 13 -end \
		-define T -design_table D "PG_2_13" Sym13 -end

# written file PG_2_13_design_table.csv
# 1108800 designs
#User time: 7:30

design_PG_2_3_group_5:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 3 -end \
		-define D -design -field F -family PG_2_q -end \
		-define T -design_table D "PG_2_13" Sym13 -end \
		-define LSW -large_set_with_symmetry_assumption T \
				-H "5" $(GENERATORS_H5) \
				-N "1200" $(GENERATORS_N5) \
				-prefix "H5" \
				-selected_orbit_length 5 \
			-end \
		-with LSW -do \
			-large_set_with_symmetry_assumption_activity \
				-normalizer_on_orbits_of_a_given_length 5 \
			-end

#H5_N_orbit_reps.csv
# 678 orbits
#User time: 2:39


design_PG_2_3_group_5_sol_0:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 3 -end \
		-define D -design -field F -family PG_2_q -end \
		-define T -design_table D "PG_2_13" Sym13 -end \
		-define LSW -large_set_with_symmetry_assumption T \
				-H "5" $(GENERATORS_H5) \
				-N "1200" $(GENERATORS_N5) \
				-prefix "H5" \
				-selected_orbit_length 5 \
			-end \
		-with LSW -do \
			-large_set_with_symmetry_assumption_activity \
				-read_solution_file 5 case_0_sol.txt \
			-end




###############################################################################
# Section 11.7: Design Theory - Delandtsheer Doyen

SECTION_DESIGN_THEORY_DELANDTHSHEER_DOYEN:


DD_PP4:
	$(ORBITER) -v 6 \
		-Delandtsheer_Doyen $(PP4) $(PP4_GROUP1) $(PP4_MASK1) \
			-end \

DD_PP4_system:
	$(ORBITER) -v 4 \
		-define D -diophant -label PP4 \
		-problem_of_Steiner_type 10 PP4_pair_covering.csv \
		-has_sum 1 \
		-end \
		-with D -do \
			-diophant_activity -solve_mckay \
		-end





DD_CC:
	$(ORBITER) -v 6 \
		-Delandtsheer_Doyen -search_wrt_subgroup \
			$(DELANDTSHEER_DOYEN_PROBLEM_COLBOURN_COLBOURN_7_13) \
			$(DELANDTSHEER_DOYEN_PROBLEM_COLBOURN_COLBOURN_7_13_GROUP1) \
			$(DELANDTSHEER_DOYEN_PROBLEM_COLBOURN_COLBOURN_7_13_MASK1) \
		-end 

#target level: 6
#k2: 15
#number of k-orbits at target level: 1774964

# creates DD_CC_7_13_pair_covering.csv


DD_CC_system:
	$(ORBITER) -v 4 \
		-define D -diophant -label DD_CC_7_13 \
		-problem_of_Steiner_type 45 DD_CC_7_13_pair_covering.csv \
		-has_sum 3 \
		-end \
		-with D -do \
		-diophant_activity -solve_mckay \
		-end
	


# no solution



# 18603 = 27 * 53 * 13

DD_M1_G1:
	$(ORBITER) -v 4 \
		-Delandtsheer_Doyen \
			$(DELANDTSHEER_DOYEN_PROBLEM_27_53) \
			$(DELANDTSHEER_DOYEN_PROBLEM_27_53_GROUP1) \
			$(DELANDTSHEER_DOYEN_PROBLEM_27_53_MASK1) \
			-end 

DD_M1_G1_S:
	$(ORBITER) -v 4 \
		-Delandtsheer_Doyen \
			$(DELANDTSHEER_DOYEN_PROBLEM_27_53) \
			$(DELANDTSHEER_DOYEN_PROBLEM_27_53_GROUP1) \
			$(DELANDTSHEER_DOYEN_PROBLEM_27_53_MASK1) \
			-singletons \
			-end 


DD_PG_2_4_M1_G1:
	$(ORBITER) -v 4 \
		-Delandtsheer_Doyen \
			$(DELANDTSHEER_DOYEN_PROBLEM_3_7) \
			$(DELANDTSHEER_DOYEN_PROBLEM_3_7_GROUP1) \
			$(DELANDTSHEER_DOYEN_PROBLEM_3_7_MASK1) \
			-end 

PG_2_27_special:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 27 -override_polynomial 46 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-cheat_sheet \
		-end
	pdflatex PG_2_27.tex 
	open PG_2_27.pdf








###############################################################################
# Section 11.8: Tactical Decompositions

SECTION_TACTICAL_DECOMPOSITIONS:

max_arc_16_4_start:
	$(ORBITER) -v 4 -maximal_arc_parameters 16 4


max_arc_16_4_convert_stack_tdo:
	$(ORBITER) -v 4 -convert_stack_to_tdo max_arc_q16_r4.stack

max_arc_16_4_refine:
	$(ORBITER) -v 4 -tdo_refinement \
		-input_file max_arc_q16_r4.tdo -dual_is_linear_space -end
	
max_arc_16_4r_print:
	$(ORBITER) -v 4 -tdo_print max_arc_q16_r4r.tdo 



###############################################################################
# Chapter 12 - Finite Geometry
###############################################################################




###############################################################################
# Section 12.1: Spreads

SECTION_SPREADS:

test_12_1:
	make create_spread_9a
	make create_spread_9b
	make create_spread_25_7
	make create_spread_Rao_Rao_27
	make desarguesian_spread_in_PG_3_2
	make desarguesian_spread_in_PG_5_2
	make desarguesian_spread_in_PG_3_4
	make desarguesian_spread_in_PG_3_5
	make classify_spreads_4
	make classify_spreads_16_4
	make classify_spreads_25_starter_lift_case_0
	make spreads_25_starter_0_cliques
	make classify_spreads_25_starter_lift_all_cases
	make spreads_25_starter_cliques
	make classify_spreads_25_isomorph
	make classify_spreads_27_3_starter
	make classify_spreads_27_starter_lift_all_cases
	make spreads_27_starter_cliques
	make classify_spreads_27_isomorph_and_recognize
	make create_spread_27_0
	make create_spread_27_1
	make create_spread_27_2
	make create_spread_27_3
	make create_spread_27_4
	make create_spread_27_5
	make create_spread_27_6



create_spread_9a:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 3 -end \
		-define G -linear_group -PGL 4 F -end \
		-define S -spread -kernel_field F \
			-group G -k 2 -catalogue 0 \
			-end

# desarguesian spread, ago = 5760

create_spread_9b:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 3 -end \
		-define G -linear_group -PGL 4 F -end \
		-define S -spread -kernel_field F \
			-group G -k 2 -catalogue 1 \
			-end


# Hall spread, ago = 1920


create_spread_25_7:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 5 -end \
		-define G -linear_group -PGL 4 F -end \
		-define S -spread -kernel_field F \
			-group G -k 2 -catalogue 7 \
			-end


SPREAD_SET_27_RAO_RAO="\
0,0,0,0,0,0,0,0,0, \
1,1,0,2,1,1,0,0,2, \
1,0,1,1,2,2,0,1,0, \
1,2,2,1,2,0,2,2,2, \
0,0,2,2,2,0,1,2,0, \
1,1,2,0,2,1,2,1,0, \
0,1,0,1,0,1,0,2,1, \
2,0,2,0,0,2,1,1,0, \
2,2,2,0,1,1,0,1,2, \
2,0,0,1,0,2,1,2,1, \
0,2,2,2,2,2,2,0,2, \
2,1,2,0,2,0,2,0,1, \
0,1,2,2,0,1,0,1,1, \
1,0,0,0,1,0,0,0,1, \
2,1,0,1,2,1,0,2,0, \
0,2,0,0,2,2,1,1,2, \
0,0,1,0,1,2,2,2,1, \
2,0,1,2,2,1,1,0,1, \
0,1,1,1,1,0,1,2,2, \
2,2,0,2,0,0,0,2,2, \
2,1,1,1,1,2,2,1,2, \
2,2,1,2,1,0,2,0,0, \
1,2,0,2,0,2,1,0,0, \
1,2,1,1,0,0,1,1,1, \
0,2,1,1,1,1,2,2,0, \
1,1,1,0,0,1,1,0,2, \
1,0,2,2,1,2,2,1,1 \
"

create_spread_Rao_Rao_27:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 3 -end \
		-define SS -vector -dense $(SPREAD_SET_27_RAO_RAO) -end \
		-define G -linear_group -PGL 6 F -end \
		-define S -spread -kernel_field F \
			-group G -k 3 -spread_set "Rao_Rao" "Rao\_Rao" SS \
			-end

SPREAD_S27_RAO_RAO="\
0, 33879, 5418, 13103, 30556, 22107, 27225, 4045, 24924, 31961, \
3196, 30100, 28081, 25862, 1339, 6696, 8242, 11747, 14000, 14705, \
9784, 17843, 20772, 9271, 19413, 18678, 16109, 23924"


desarguesian_spread_in_PG_3_2:
	$(ORBITER) -v 3 \
		-define FQ -finite_field -q 4 -end \
		-define Fq -finite_field -q 2 -end \
		-with FQ -and Fq -do -finite_field_activity \
			-cheat_sheet_desarguesian_spread 2 -end
	pdflatex Desarguesian_Spread_3_2.tex
	open Desarguesian_Spread_3_2.pdf

desarguesian_spread_in_PG_5_2:
	$(ORBITER) -v 3 \
		-define FQ -finite_field -q 8 -end \
		-define Fq -finite_field -q 2 -end \
		-with FQ -and Fq -do -finite_field_activity \
			-cheat_sheet_desarguesian_spread 2 -end
	pdflatex Desarguesian_Spread_5_2.tex
	open Desarguesian_Spread_5_2.pdf

desarguesian_spread_in_PG_3_4:
	$(ORBITER) -v 3 \
		-define FQ -finite_field -q 16 -end \
		-define Fq -finite_field -q 4 -end \
		-with FQ -and Fq -do -finite_field_activity \
			-cheat_sheet_desarguesian_spread 2 -end
	pdflatex Desarguesian_Spread_3_4.tex
	open Desarguesian_Spread_3_4.pdf

desarguesian_spread_in_PG_3_5:
	$(ORBITER) -v 3 \
		-define FQ -finite_field -q 25 -end \
		-define Fq -finite_field -q 5 -end \
		-with FQ -and Fq -do -finite_field_activity \
			-cheat_sheet_desarguesian_spread 2 -end
	pdflatex Desarguesian_Spread_3_5.tex
	open Desarguesian_Spread_3_5.pdf


# ToDo -report

classify_spreads_4:
	$(ORBITER) -v 3 \
		-define Control -poset_classification_control \
			-draw_options \
				-embedded \
			-end \
			-W \
			-problem_label spreads_2_2 \
		-end \
		-define F -finite_field -q 2 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define C -spread_classifier \
			-projective_space P \
			-poset_classification_control Control \
			-k 2 \
			-starter_size 5 \
			-output_prefix "." \
		-end \
		-with C -do -spread_classify_activity \
			-compute_starter \
		-end
	#pdflatex spreads_2_2_poset_lvl_5.tex
	#open spreads_2_2_poset_lvl_5.pdf


classify_spreads_16_4:
	$(ORBITER) -v 4 \
		-define Control -poset_classification_control \
			-draw_options \
				-radius 20 \
				-nodes_empty \
				-line_width 0.2 \
				-embedded \
			-end \
			-problem_label spreads_16_4 \
		-end \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define C -spread_classifier \
			-projective_space P \
			-poset_classification_control Control \
			-k 2 \
			-starter_size 17 \
			-output_prefix "." \
		-end \
		-with C -do -spread_classify_activity \
			-compute_starter \
		-end
	#pdflatex spreads_16_4_poset_lvl_17.tex
	#open spreads_16_4_poset_lvl_17.pdf





classify_spreads_25_starter_lift_case_0:
	$(ORBITER) -v 3 \
		-define Control -poset_classification_control \
			-draw_options \
				-radius 20 \
				-nodes_empty \
				-line_width 0.2 \
				-embedded \
			-end \
			-W \
			-problem_label spreads_25 \
		-end \
		-define F -finite_field -q 5 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define C -spread_classifier \
			-projective_space P \
			-k 2 \
			-starter_size 5 \
			-recoordinatize \
			-poset_classification_control Control \
			-output_prefix "" \
		-end \
		-with C -do -spread_classify_activity \
			-compute_starter \
		-end \
		-with C -do -spread_classify_activity \
			-prepare_lifting_single_case 0 \
		-end


#save_colored_graph fname=spreads_25_graph_0.bin
#save_colored_graph nb_vertices=225
#save_colored_graph nb_colors=21
#save_colored_graph nb_colors_per_vertex=1
#save_colored_graph done
#colored_graph::save done
#Written file spreads_25_graph_0.bin of size 5914


spreads_25_starter_0_cliques:
	$(ORBITER) -v 2 \
			-define G -graph -load spreads_25_graph_0.bin -end \
			-with G -do \
			-graph_theoretic_activity \
				-find_cliques -rainbow -target_size 21 -end \
			-end \

#graph_theoretic_activity::perform_activity Gr->label=spreads_25_graph_0 nb_sol = 7680


classify_spreads_25_starter_lift_all_cases:
	$(ORBITER) -v 3 \
		-define Control -poset_classification_control \
			-draw_options \
				-radius 20 \
				-nodes_empty \
				-line_width 0.2 \
				-embedded \
			-end \
			-W \
			-problem_label spreads_25 \
		-end \
		-define F -finite_field -q 5 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define C -spread_classifier \
			-projective_space P \
			-k 2 \
			-starter_size 5 \
			-recoordinatize \
			-poset_classification_control Control \
			-output_prefix "" \
		-end \
		-with C -do -spread_classify_activity \
			-compute_starter \
		-end \
		-with C -do -spread_classify_activity \
			-prepare_lifting_all_cases \
		-end

spreads_25_starter_cliques:
	$(ORBITER) -v 2 \
		-loop L 0 29 1 \
			-define G -graph -load spreads_25_graph_%L.bin -end \
			-with G -do \
			-graph_theoretic_activity \
				-find_cliques -rainbow -target_size 21 -end \
			-end \
		-end_loop L


classify_spreads_25_isomorph:
	$(ORBITER) -v 3 \
		-define Control -poset_classification_control \
			-draw_options \
				-radius 20 \
				-nodes_empty \
				-line_width 0.2 \
				-embedded \
			-end \
			-W \
			-problem_label spreads_25 \
		-end \
		-define F -finite_field -q 5 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define C -spread_classifier \
			-projective_space P \
			-k 2 \
			-starter_size 5 \
			-recoordinatize \
			-poset_classification_control Control \
			-output_prefix "" \
		-end \
		-with C -do -spread_classify_activity \
			-compute_starter \
		-end \
		-with C -do -spread_classify_activity \
			-isomorph \
				-prefix_iso "./spreads_25" \
				-use_database_for_starter \
				-build_db \
				-solution_prefix "" \
				-base_fname "" \
			-end \
		-end \
		-with C -do -spread_classify_activity \
			-isomorph \
				-prefix_iso "./spreads_25" \
				-use_database_for_starter \
				-read_solutions \
				-solution_prefix "" \
				-base_fname "spreads_25_graph" \
			-end \
		-end \
		-with C -do -spread_classify_activity \
			-isomorph \
				-prefix_iso "./spreads_25" \
				-use_database_for_starter \
				-compute_orbits \
				-solution_prefix "" \
				-base_fname "spreads_25_graph" \
			-end \
		-end \
		-with C -do -spread_classify_activity \
			-isomorph \
				-prefix_iso "./spreads_25" \
				-use_database_for_starter \
				-isomorph_testing \
				-solution_prefix "" \
				-base_fname "spreads_25_graph" \
			-end \
		-end \
		-with C -do -spread_classify_activity \
			-isomorph \
				-prefix_iso "./spreads_25" \
				-use_database_for_starter \
				-isomorph_report \
				-solution_prefix "" \
				-base_fname "spreads_25_graph" \
			-end \
		-end
	pdflatex spreads_25_isomorphism_types.tex
	open spreads_25_isomorphism_types.pdf

#We found 21 isomorphism types
#1:33



classify_spreads_27_3_starter:
	$(ORBITER) -v 10 \
		-define Control -poset_classification_control \
			-draw_options \
				-radius 20 \
				-nodes_empty \
				-line_width 0.2 \
				-embedded \
			-end \
			-W \
			-problem_label spreads_27_3 \
		-end \
		-define F -finite_field -q 3 -end \
		-define P -projective_space -n 5 -field F -v 0 -end \
		-define C -spread_classifier \
			-projective_space P \
			-poset_classification_control Control \
			-k 3 \
			-starter_size 5 \
			-recoordinatize \
			-output_prefix "." \
		-end \
		-with C -do -spread_classify_activity \
			-compute_starter \
		-end \
		-with C -do -spread_classify_activity \
			-prepare_lifting_single_case 0 \
		-end
	#pdflatex spreads_27_3_poset_detailed_lvl_5.tex
	#open spreads_27_3_poset_detailed_lvl_5.pdf

# 50 orbits at level 5:
#5 : 50 orbits
#total: 60
#(39^2, 26^2, 10, 6^2, 5, 3^9, 2^9, 1^{24}) average is 4 + 26 / 50

# time 4:31



classify_spreads_27_starter_lift_all_cases:
	$(ORBITER) -v 3 \
		-define Control -poset_classification_control \
			-draw_options \
				-radius 20 \
				-nodes_empty \
				-line_width 0.2 \
				-embedded \
			-end \
			-W \
			-problem_label spreads_27_3 \
		-end \
		-define F -finite_field -q 3 -end \
		-define P -projective_space -n 5 -field F -v 0 -end \
		-define C -spread_classifier \
			-projective_space P \
			-k 3 \
			-starter_size 5 \
			-recoordinatize \
			-poset_classification_control Control \
			-output_prefix "" \
		-end \
		-with C -do -spread_classify_activity \
			-compute_starter \
		-end \
		-with C -do -spread_classify_activity \
			-prepare_lifting_all_cases \
		-end


# 50 graphs



spreads_27_starter_cliques:
	$(ORBITER) -v 2 \
		-loop L 0 50 1 \
			-define G -graph -load spreads_27_3_graph_%L.bin -end \
			-with G -do \
			-graph_theoretic_activity \
				-find_cliques -rainbow -target_size 23 -end \
			-end \
		-end_loop L

#4:41



classify_spreads_27_isomorph_and_recognize:
	$(ORBITER) -v 3 \
		-define Control -poset_classification_control \
			-draw_options \
				-radius 20 \
				-nodes_empty \
				-line_width 0.2 \
				-embedded \
			-end \
			-W \
			-problem_label spreads_27_3 \
		-end \
		-define F -finite_field -q 3 -end \
		-define P -projective_space -n 5 -field F -v 0 -end \
		-define C -spread_classifier \
			-projective_space P \
			-k 3 \
			-starter_size 5 \
			-recoordinatize \
			-poset_classification_control Control \
			-output_prefix "" \
		-end \
		-with C -do -spread_classify_activity \
			-compute_starter \
		-end \
		-with C -do -spread_classify_activity \
			-isomorph \
				-prefix_iso "./spreads_27_3" \
				-use_database_for_starter \
				-build_db \
				-solution_prefix "" \
				-base_fname "" \
			-end \
		-end \
		-with C -do -spread_classify_activity \
			-isomorph \
				-prefix_iso "./spreads_27_3" \
				-use_database_for_starter \
				-read_solutions \
				-solution_prefix "" \
				-base_fname "spreads_27_3_graph" \
			-end \
		-end \
		-with C -do -spread_classify_activity \
			-isomorph \
				-prefix_iso "./spreads_27_3" \
				-use_database_for_starter \
				-compute_orbits \
				-solution_prefix "" \
				-base_fname "spreads_27_3_graph" \
			-end \
		-end \
		-with C -do -spread_classify_activity \
			-isomorph \
				-prefix_iso "./spreads_27_3" \
				-use_database_for_starter \
				-isomorph_testing \
				-solution_prefix "" \
				-base_fname "spreads_27_3_graph" \
			-end \
		-end \
		-with C -do -spread_classify_activity \
			-isomorph \
				-prefix_iso "./spreads_27_3" \
				-use_database_for_starter \
				-isomorph_report \
				-solution_prefix "" \
				-base_fname "spreads_27_3_graph" \
			-end \
		-end \
		-with C -do -spread_classify_activity \
			-isomorph \
				-prefix_iso "./spreads_27_3" \
				-use_database_for_starter \
				-recognize $(SPREAD_S27_RAO_RAO) \
				-solution_prefix "" \
				-base_fname "spreads_27_3_graph" \
			-end \
		-end
	#pdflatex spreads_27_isomorphism_types.tex
	#open spreads_27_isomorphism_types.pdf
	#pdflatex spreads_27_aut_group.tex
	#open spreads_27_aut_group.pdf


# SPREAD_S27_RAO_RAO is isomorphic to spread 0 in the list 
# (which is different from the ordering of the Orbiter catalogue)
# the stabilizer of the spread has order 84.


#substructure_lifting_data::write_hash_and_datref_file id_to_hash tallied:
#( 1^6076, 2^289, 3^35, 4^5 )
# using 64 bit hash values, based on a modified version of Paul Hsieh's SuperFastHash

#We found 7 isomorphism types
#0:36

#generators for the stabilizer of the Rao/Rao spread:
#1,2,2,2,0,2,1,1,2,2,2,1,2,1,2,1,1,0,2,2,0,2,0,0,1,1,2,2,2,0,0,1,1,2,0,1, #1,0,1,0,1,2,0,1,2,2,2,2,1,1,1,0,1,1,2,0,1,1,2,1,1,1,0,2,2,2,0,2,0,1,1,0,



create_spread_27_0:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 3 -end \
		-define G -linear_group -PGL 6 F -end \
		-define S -spread -kernel_field F \
			-group G -k 3 -catalogue 0 \
			-end \
		-with S -do -spread_activity \
			-report \
		-end
	pdflatex catalogue_q3_k3_0_report.tex
	open catalogue_q3_k3_0_report.pdf

create_spread_27_1:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 3 -end \
		-define G -linear_group -PGL 6 F -end \
		-define S -spread -kernel_field F \
			-group G -k 3 -catalogue 1 \
			-end \
		-with S -do -spread_activity \
			-report \
		-end
	pdflatex catalogue_q3_k3_1_report.tex
	open catalogue_q3_k3_1_report.pdf

create_spread_27_2:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 3 -end \
		-define G -linear_group -PGL 6 F -end \
		-define S -spread -kernel_field F \
			-group G -k 3 -catalogue 2 \
			-end \
		-with S -do -spread_activity \
			-report \
		-end
	pdflatex catalogue_q3_k3_2_report.tex
	open catalogue_q3_k3_2_report.pdf

create_spread_27_3:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 3 -end \
		-define G -linear_group -PGL 6 F -end \
		-define S -spread -kernel_field F \
			-group G -k 3 -catalogue 3 \
			-end \
		-with S -do -spread_activity \
			-report \
		-end
	pdflatex catalogue_q3_k3_3_report.tex
	open catalogue_q3_k3_3_report.pdf

create_spread_27_4:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 3 -end \
		-define G -linear_group -PGL 6 F -end \
		-define S -spread -kernel_field F \
			-group G -k 3 -catalogue 4 \
			-end \
		-with S -do -spread_activity \
			-report \
		-end
	pdflatex catalogue_q3_k3_4_report.tex
	open catalogue_q3_k3_4_report.pdf

create_spread_27_5:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 3 -end \
		-define G -linear_group -PGL 6 F -end \
		-define S -spread -kernel_field F \
			-group G -k 3 -catalogue 5 \
			-end \
		-with S -do -spread_activity \
			-report \
		-end
	pdflatex catalogue_q3_k3_5_report.tex
	open catalogue_q3_k3_5_report.pdf

create_spread_27_6:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 3 -end \
		-define G -linear_group -PGL 6 F -end \
		-define S -spread -kernel_field F \
			-group G -k 3 -catalogue 6 \
			-end \
		-with S -do -spread_activity \
			-report \
		-end
	pdflatex catalogue_q3_k3_6_report.tex
	open catalogue_q3_k3_6_report.pdf









###############################################################################
# Section 12.2: Translation planes


SECTION_TRANSLATION_PLANES:


test_12_2:
	make create_translation_plane_9b
	make create_translation_plane_16_4_0
	make create_translation_plane_16_2_0
	make RREF_plane_16_2_0_rank_of_incma
	make create_translation_plane_25_14_rank
	make create_translation_plane_27_Rao_Rao
	make RREF_Rao_Rao_plane_incma_rank
	make create_translation_plane_27_p_rank_of_incidence_matrix
	make create_translation_plane_27_5_Rao_Rao
	make translation_plane_27_4_orbits
	make translation_plane_27_5_orbits
	make translation_plane_27_6_orbits




create_translation_plane_9b:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 3 -end \
		-define G -linear_group -PGL 4 F -end \
		-define G1 -linear_group -PGL 5 F -end \
		-define S -spread -kernel_field F \
			-group G -k 2 -catalogue 1 \
			-end \
		-define T -translation_plane S G G1 -end \
		-with T -do -translation_plane_activity \
			-export_incma \
		-end \
		-with T -do -translation_plane_activity \
			-report \
		-end \
		-define A -linear_group -import_group_of_plane T -end \
		-define Orb -orbits -group A \
			-on_points \
		-end \
		-with Orb -do -orbits_activity \
			-report \
		-end \
		-with Orb -do -orbits_activity \
			-stabilizer 92 \
		-end \
		-with Orb -do -orbits_activity \
			-export_trees \
		-end
	$(ORBITER) -v 2 \
		-draw_matrix \
			-input_csv_file plane_catalogue_q3_k2_1_incma.csv \
			-box_width 6 -bit_depth 8 \
			-partition 2 91 91 \
		-end
	$(ORBITER) -v 3 \
		-draw_layered_graph \
			orbit_PGL_5_3_on_andre_3.layered_graph \
			-radius 250 -spanning_tree -embedded -nodes_empty \
			-line_width 1.1 -x_stretch 2.4 -scale 0.15 \
		-end
	pdflatex orbit_PGL_5_3_on_andre_3_draw.tex
	open orbit_PGL_5_3_on_andre_3_draw.pdf
	pdflatex group_of_plane_plane_catalogue_q3_k2_1_orbits_report.tex
	open group_of_plane_plane_catalogue_q3_k2_1_orbits_report.pdf
	pdflatex group_of_plane_plane_catalogue_q3_k2_1_stab_pt_92_report.tex
	open group_of_plane_plane_catalogue_q3_k2_1_stab_pt_92_report.pdf




create_translation_plane_16_4_0:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 4 -end \
		-define G -linear_group -PGGL 4 F -end \
		-define G1 -linear_group -PGGL 5 F -end \
		-define S -spread -kernel_field F \
			-group G -k 2 -catalogue 0 \
			-end \
		-define T -translation_plane S G G1 -end \
		-with T -do -translation_plane_activity \
			-export_incma \
		-end
	$(ORBITER) -v 2 \
		-draw_matrix \
			-input_csv_file plane_catalogue_q4_k2_0_incma.csv \
			-box_width 6 -bit_depth 8 \
			-partition 4 273 273 \
		-end
	open plane_catalogue_q4_k2_0_incma_draw.bmp


#0 : "1200", // Hall spread
#1 : "81600", // Desarguesian spread
#2 : "576", // Semifield spread


create_translation_plane_16_2_0:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 2 -end \
		-define G -linear_group -PGL 8 F -end \
		-define G1 -linear_group -PGL 9 F -end \
		-define S -spread -kernel_field F \
			-group G -k 4 -catalogue 0 \
			-end \
		-define T -translation_plane S G G1 -end \
		-with T -do -translation_plane_activity \
			-export_incma \
		-end
	$(ORBITER) -v 2 \
		-draw_matrix \
			-input_csv_file plane_catalogue_q2_k4_0_incma.csv \
			-box_width 6 -bit_depth 8 \
			-partition 4 273 273 \
		-end
	open plane_catalogue_q2_k4_0_incma_draw.bmp

#0 : "1008",
#1 : "1008",
#2 : "1728",
#3 : "216",
#4 : "360",
#5 : "288",
#6 : "3600",
#7 : "244800",

RREF_plane_16_2_0_rank_of_incma:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -field F  \
			-file plane_catalogue_q2_k4_0_incma.csv \
		-end \
		-with F -do -finite_field_activity \
		-RREF v -normalize_from_the_right \
		-end

# 2-rank is 106, so the plane is Lorimer-Rahilly


create_translation_plane_25_14_rank:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 5 -end \
		-define G -linear_group -PGL 4 F -end \
		-define G1 -linear_group -PGL 5 F -end \
		-define S -spread -kernel_field F \
			-group G -k 2 -catalogue 14 \
			-end \
		-define T -translation_plane S G G1 -end \
		-with T -do -translation_plane_activity \
			-export_incma \
		-end
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define v -vector -field F  \
			-file plane_catalogue_q5_k2_14_incma.csv \
		-end \
		-with F -do -finite_field_activity \
			-RREF v -normalize_from_the_right \
		-end



create_translation_plane_27_Rao_Rao:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 3 -end \
		-define SS -vector -dense $(SPREAD_SET_27_RAO_RAO) -end \
		-define G -linear_group -PGL 6 F -end \
		-define G1 -linear_group -PGL 7 F -end \
		-define S -spread -kernel_field F \
			-group G -k 3 -spread_set "Rao_Rao" "Rao\_Rao" SS \
			-end \
		-define T -translation_plane S G G1 -end \
		-with T -do -translation_plane_activity \
			-export_incma \
		-end


# creates plane_Rao_Rao_incma.csv


RREF_Rao_Rao_plane_incma_rank:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 3 -end \
		-define v -vector -field F  \
			-file plane_Rao_Rao_incma.csv \
		-end \
		-with F -do -finite_field_activity \
			-RREF v -normalize_from_the_right \
		-end

# 3-rank is 271, so the Rao / Rao plane is Moorhouse IV.


create_translation_plane_27_p_rank_of_incidence_matrix:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 3 -end \
		-define G -linear_group -PGL 6 F -end \
		-define G1 -linear_group -PGL 7 F -end \
		-define S -spread -kernel_field F \
			-group G -k 3 -catalogue 6 \
			-end \
		-define T -translation_plane S G G1 -end \
		-with T -do -translation_plane_activity \
			-p_rank 3 \
		-end

# OCN : 3-rank : spread stab : pt-orb : line-orb : Moorhouse list
# 0 : 217 : 766584 : 757 : 757 : flag trans : desarguesian = Moorhouse I
# 1 : 262 :   2106 : 1,27,729 : 1,27,729 : generalized twisted field = Moorhouse II
# 2 : 268 :   1014 : 2,26,729 : 1,54,702 : Andre = Moorhouse VII
# 3 : 273 :     81 : 1,27,729 : 1,27,729 : Sherk = Moorhouse V
# 4 : 274 :   1092 : 28,729 : 1,756 : Hering = Moorhouse III
# 5 : 271 :     84 : 28,729 : 1,756 : flag trans : Moorhouse IV = Rao Rao
# 6 : 265 :     84 : 28,729 : 1,756 : flag trans :  Moorhouse VI

# so, Rao / Rao is OCN=5



create_translation_plane_27_5_Rao_Rao:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 3 -end \
		-define G -linear_group -PGL 6 F -end \
		-define G1 -linear_group -PGL 7 F -end \
		-define S -spread -kernel_field F \
			-group G -k 3 -catalogue 5 \
			-end \
		-define T -translation_plane S G G1 -end \
		-with T -do -translation_plane_activity \
			-export_incma \
		-end \
		-with T -do -translation_plane_activity \
			-report \
		-end \
		-define A -linear_group -import_group_of_plane T -end \
		-define Orb -orbits -group A \
			-on_points \
		-end
	pdflatex group_of_plane_plane_catalogue_q3_k3_5_report.tex
	open group_of_plane_plane_catalogue_q3_k3_5_report.pdf




translation_plane_27_4_orbits:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 3 -end \
		-define G -linear_group -PGL 6 F -end \
		-define G1 -linear_group -PGL 7 F -end \
		-define S -spread -kernel_field F \
			-group G -k 3 -catalogue 4 \
			-end \
		-define T -translation_plane S G G1 -end \
		-with T -do -translation_plane_activity \
			-export_incma \
		-end \
		-with T -do -translation_plane_activity \
			-report \
		-end \
		-define A -linear_group -import_group_of_plane T -end \
		-define Orb -orbits -group A \
			-on_points \
		-end



translation_plane_27_5_orbits:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 3 -end \
		-define G -linear_group -PGL 6 F -end \
		-define G1 -linear_group -PGL 7 F -end \
		-define S -spread -kernel_field F \
			-group G -k 3 -catalogue 5 \
			-end \
		-define T -translation_plane S G G1 -end \
		-with T -do -translation_plane_activity \
			-export_incma \
		-end \
		-with T -do -translation_plane_activity \
			-report \
		-end \
		-define A -linear_group -import_group_of_plane T -end \
		-define Orb -orbits -group A \
			-on_points \
		-end


translation_plane_27_6_orbits:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 3 -end \
		-define G -linear_group -PGL 6 F -end \
		-define G1 -linear_group -PGL 7 F -end \
		-define S -spread -kernel_field F \
			-group G -k 3 -catalogue 6 \
			-end \
		-define T -translation_plane S G G1 -end \
		-with T -do -translation_plane_activity \
			-export_incma \
		-end \
		-with T -do -translation_plane_activity \
			-report \
		-end \
		-define A -linear_group -import_group_of_plane T -end \
		-define Orb -orbits -group A \
			-on_points \
		-end







###############################################################################
# Section 12.3: Packings


SECTION_PACKINGS:


test_12_3:
	#make spread_table_PG_3_4
	make spread_table_PG_3_5_regular
	make PG_3_5_element_of_order_31_GL_normalizer
	make PG_3_5_element_of_order_31_ME_normalizer
	make PG_3_5_assume_31_graph



# ToDo

spread_table_PG_3_4:
	- mkdir SPREAD_TABLES_4
	$(ORBITER) -v 6 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-define T -spread_table P 2 "0,1,2" "SPREAD_TABLES_4/"


# 5096448 spreads
# 1020 self dual spreads
# User time: 56:38 on Mac


spread_table_PG_3_5_regular:
	- mkdir SPREAD_TABLES_5_REG
	$(ORBITER) -v 6 \
		-define F -finite_field -q 5 -end \
		-define P -projective_space -n 3 -field F -end \
		-define T -spread_table P 2 "12" "SPREAD_TABLES_5_REG/" \
		-print_symbols

# error.

# 21 isomorphism types of spreads in PG(3,5)
# 12 is the index of the regular spread in the classification of spreads
# 12/9/2020: 34 sec on Mac
# 155000 spreads


PG_3_5_element_of_order_31_GL_normalizer:
	$(ORBITER) -v 6 -define G \
		-linear_group -GL 4 5 -end \
		-with G -do \
		-group_theoretic_activity \
			-normalizer_of_cyclic_subgroup "124" \
			"2,0,0,0, 0,0,1,0, 0,0,0,1, 0,3,0,4" \
		-end
	#mv normalizer_of_31_in_PGL_4_5.tex normalizer_of_31_AB_in_PGL_4_5.tex
	pdflatex normalizer_of_124_in_GL_4_5.tex
	open normalizer_of_124_in_GL_4_5.pdf

# needs magma
# the group has order 124.
# the normalizer has order 1488
# normalizer has order 1488=4*372=4*4*3*31

PG_3_5_element_of_order_31_ME_normalizer:
	$(ORBITER) -v 6 -define G \
		-linear_group -PGL 4 5 -end \
		-with G -do \
		-group_theoretic_activity \
			-normalizer_of_cyclic_subgroup "31" \
			"1,0,0,0, 0,3,4,3, 0,3,3,4, 0,3,2,3" \
		-end
	mv normalizer_of_31_in_PGL_4_5.tex normalizer_of_31_ME_in_PGL_4_5.tex
	pdflatex normalizer_of_31_ME_in_PGL_4_5.tex
	open normalizer_of_31_ME_in_PGL_4_5.pdf


# group has order 31
# normalizer has order 372



PG_3_5_assume_31_graph:
	$(ORBITER) -v 5 \
		-define F -finite_field -q 5 -end \
		-define P -projective_space -n 3 -field F -end \
		-define T -spread_table P 2 "12" "SPREAD_TABLES_5_REG/" \
		-define PW -packing_with_symmetry_assumption T \
				-H "H31" $(PGL_4_5_SUBGROUP_31_ME) -end \
				-N "N31" $(PGL_4_5_SUBGROUP_31_ME_NORMALIZER) -end \
			-end \
		-define PWF -packing_choose_fixed_points PW 0 -end \
		-define L -packing_long_orbits PWF \
			-orbit_length 31 -clique_size 1 -create_graphs -end \
		-print_symbols
	pdflatex H31_reduced_spread_orbits_orbits_report.tex
	open H31_reduced_spread_orbits_orbits_report.pdf
	pdflatex H31_line_orbits_orbits_report.tex
	open H31_line_orbits_orbits_report.pdf
	pdflatex H31_line_orbits_orbits_report.tex
	open H31_line_orbits_orbits_report.pdf
	pdflatex N31_line_orbits_orbits_report.tex
	open N31_line_orbits_orbits_report.pdf
	pdflatex H31_point_orbits_orbits_report.tex
	open H31_point_orbits_orbits_report.pdf
	pdflatex N31_point_orbits_orbits_report.tex
	open N31_point_orbits_orbits_report.pdf

	#pdflatex H31_spread_orbits_orbits_report.tex
	#open H31_spread_orbits_orbits_report.pdf
#H31_line_orbits_orbits.bin
#H31_line_orbits_orbits_report.tex
#H_spread_orbits_orbit_types_report.tex
#H31_spread_orbits_orbits.bin
#H31_good_orbits
#H31_spread_types_reduced_orbit_types_report.tex
#H31_reduced_spread_orbits_orbits.bin
#H31_fpc0_lo.graph


###############################################################################
# Section 12.4: BLT-sets

SECTION_BLT_SETS:


test_12_4:
	make BLT_5_1
	make BLT_5_1_export_gap
	make BLT_5_Linear
	make BLT_9_Kantor1
	make BLT_11_0
	make BLT_11_Fisher
	make BLT_11_Mondello
	make BLT_13_FTWKB
	make BLT_13_Kantor2
	make BLT_67_4
	make BLT_9_deep_search
	make BLT_11_deep_search
	make BLT_13_deep_search
	make BLT_13_classify_starter
	make BLT_13_cliques
	make BLT_13_isomorph_read_DB
	make BLT_13_isomorph_read_solutions
	make BLT_13_isomorph_stabilizer_orbits
	make BLT_13_isomorph_testing



BLT_5_1:
	$(ORBITER) -v 10 \
		-define F -finite_field -q 5 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define BLT -BLT_set \
			-space O -catalogue 1 \
		-end \
		-with BLT -do -blt_set_activity \
			-report \
		-end
	pdflatex BLT_catalogue_q5_iso1.tex
	open BLT_catalogue_q5_iso1.pdf


BLT_5_1_export_gap:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 5 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define BLT -BLT_set \
			-space O -catalogue 1 \
		-end \
		-with BLT -do -blt_set_activity \
			-export_gap \
		-end


BLT_5_Linear:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 5 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define BLT -BLT_set \
			-space O -family "Linear" \
		-end \
		-with BLT -do -blt_set_activity \
			-report \
		-end
	pdflatex BLT_Linear_q5.tex
	open BLT_Linear_q5.pdf


BLT_9_0:
	$(ORBITER) -v 10 \
		-define F -finite_field -q 9 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define BLT -BLT_set \
			-space O -catalogue 0 \
		-end \
		-with BLT -do -blt_set_activity \
			-report \
		-end
	pdflatex BLT_catalogue_q9_iso0.tex
	open BLT_catalogue_q9_iso0.pdf




BLT_9_Kantor1:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 9 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define BLT -BLT_set \
			-space O -family "Kantor1" \
		-end \
		-with BLT -do -blt_set_activity \
			-report \
		-end
	pdflatex BLT_Kantor1_q9.tex
	open BLT_Kantor1_q9.pdf




BLT_11_0:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 11 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define BLT -BLT_set \
			-space O -catalogue 0 \
		-end \
		-with BLT -do -blt_set_activity \
			-report \
		-end
	pdflatex BLT_catalogue_q11_iso0.tex
	open BLT_catalogue_q11_iso0.pdf


BLT_11_Fisher:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 11 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define BLT -BLT_set \
			-space O -family "Fisher" \
		-end \
		-with BLT -do -blt_set_activity \
			-report \
		-end
	pdflatex BLT_Fisher_q11.tex
	open BLT_Fisher_q11.pdf

BLT_11_Mondello:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 11 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define BLT -BLT_set \
			-space O -family "Mondello" \
		-end \
		-with BLT -do -blt_set_activity \
			-report \
		-end
	pdflatex BLT_Mondello_q11.tex
	open BLT_Mondello_q11.pdf


BLT_11_FTWKB:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 11 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define BLT -BLT_set \
			-space O -family "FTWKB" \
		-end \
		-with BLT -do -blt_set_activity \
			-report \
		-end
	pdflatex BLT_FTWKB_q11.tex
	open BLT_FTWKB_q11.pdf


# for K2, q must be congruent to 2 or 3 mod 5
BLT_13_Kantor2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 13 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define BLT -BLT_set \
			-space O -family "Kantor2" \
		-end \
		-with BLT -do -blt_set_activity \
			-report \
		-end
	pdflatex BLT_Kantor2_q13.tex
	open BLT_Kantor2_q13.pdf


BLT_67_4:
	$(ORBITER) -v 4 \
		-define F -finite_field -q 67 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define BLT -BLT_set \
			-space O -catalogue 4 \
		-end \
		-with BLT -do -blt_set_activity \
			-report \
		-end


BLT_67_4_export_gap:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 67 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define BLT -BLT_set \
			-space O -catalogue 4 \
		-end \
		-with BLT -do -blt_set_activity \
			-export_gap \
		-end




BLT_9_deep_search:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 9 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define C -BLT_set_classifier O -starter_size 10 -end \
		-define Activity -poset_classification_activity -report -end -end \
		-define Activity_export -poset_classification_activity \
			-export_level_to_cpp 10 -end \
		-with C -do -BLT_set_classify_activity \
			-compute_starter \
				-problem_label BLT_q9 \
				-W -depth 10 \
			-end \
		-end \
		-with C -do -BLT_set_classify_activity \
			-poset_classification_activity \
				Activity \
		-end \
		-with C -do -BLT_set_classify_activity \
			-poset_classification_activity \
				Activity_export \
		-end
	pdflatex BLT_q9_poset.tex
	open BLT_q9_poset.pdf



BLT_11_deep_search:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 11 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define C -BLT_set_classifier O -starter_size 12 -end \
		-with C -do -BLT_set_classify_activity \
			-compute_starter \
				-problem_label BLT_q11 \
				-W -depth 12 \
			-end \
		-end
	#pdflatex BLT_q11_poset.tex
	#open BLT_q11_poset.pdf




BLT_13_deep_search:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 13 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define C -BLT_set_classifier O -starter_size 14 -end \
		-with C -do -BLT_set_classify_activity \
			-compute_starter \
				-problem_label BLT_q13 \
				-W -depth 14 \
			-end \
		-end
	#pdflatex BLT_q13_poset.tex
	#open BLT_q13_poset.pdf




BLT_13_classify_starter:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 13 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define C -BLT_set_classifier O -starter_size 5 -end \
		-with C -do -BLT_set_classify_activity \
			-compute_starter \
				-problem_label BLT_q13 \
				-W -depth 5 \
			-end \
		-end \
		-with C -do -BLT_set_classify_activity \
			-create_graphs \
		-end




BLT_13_cliques:
	$(ORBITER) -v 2 \
		-loop L 0 38 1 \
			-define G -graph \
				-load BLT_q13_graph_5_%L.bin \
			-end \
			-with G -do \
			-graph_theoretic_activity \
				-find_cliques -rainbow -target_size 9 -end \
			-end \
		-end_loop L


# 3 solutions:
#BLT_q13_graph_5_0_sol.txt
#BLT_q13_graph_5_0_sol.csv



BLT_13_isomorph_read_DB:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 13 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define C -BLT_set_classifier O -starter_size 5 -end \
		-with C -do -BLT_set_classify_activity \
			-compute_starter \
				-problem_label BLT_q13 \
				-W -depth 5 \
			-end \
		-end \
		-with C -do -BLT_set_classify_activity \
			-isomorph \
				-prefix_iso "./BLT_q13" \
				-use_database_for_starter \
				-build_db \
				-solution_prefix "" \
				-base_fname "" \
			-end \
		-end



BLT_13_isomorph_read_solutions:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 13 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define C -BLT_set_classifier O -starter_size 5 -end \
		-with C -do -BLT_set_classify_activity \
			-compute_starter \
				-problem_label BLT_q13 \
				-W -depth 5 \
			-end \
		-end \
		-with C -do -BLT_set_classify_activity \
			-isomorph \
				-prefix_iso "./BLT_q13" \
				-use_database_for_starter \
				-read_solutions \
				-list_of_cases BLT_q13_list_of_cases_5_0_1.csv \
				-solution_prefix "" \
				-base_fname "BLT_q13_graph" \
			-end \
		-end


BLT_13_isomorph_stabilizer_orbits:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 13 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define C -BLT_set_classifier O -starter_size 5 -end \
		-with C -do -BLT_set_classify_activity \
			-compute_starter \
				-problem_label BLT_q13 \
				-W -depth 5 \
			-end \
		-end \
		-with C -do -BLT_set_classify_activity \
			-isomorph \
				-prefix_iso "./BLT_q13" \
				-use_database_for_starter \
				-compute_orbits \
				-list_of_cases BLT_q13_list_of_cases_5_0_1.csv \
				-solution_prefix "" \
				-base_fname "BLT_q13_graph" \
			-end \
		-end

BLT_13_isomorph_testing:
	$(ORBITER) -v 4 \
		-define F -finite_field -q 13 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define C -BLT_set_classifier O -starter_size 5 -end \
		-with C -do -BLT_set_classify_activity \
			-compute_starter \
				-problem_label BLT_q13 \
				-W -depth 5 \
			-end \
		-end \
		-with C -do -BLT_set_classify_activity \
			-isomorph \
				-prefix_iso "./BLT_q13" \
				-use_database_for_starter \
				-isomorph_testing \
				-solution_prefix "" \
				-base_fname "BLT_q13_graph" \
			-end \
		-end \
		-with C -do -BLT_set_classify_activity \
			-isomorph \
				-prefix_iso "./BLT_q13" \
				-use_database_for_starter \
				-isomorph_report \
				-solution_prefix "" \
				-base_fname "BLT_q13_graph" \
			-end \
		-end
	pdflatex BLT_q13_isomorphism_types.tex
	open BLT_q13_isomorphism_types.pdf



BLT_49_classify_starter:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 49 -end \
		-define O -orthogonal_space 0 5 F -end \
		-define C -BLT_set_classifier O -starter_size 5 -end \
		-with C -do -BLT_set_classify_activity \
			-compute_starter \
				-problem_label BLT_q49 \
				-W -depth 5 \
			-end \
		-end \
		-with C -do -BLT_set_classify_activity \
			-create_graphs \
		-end


NB_CASES_BLT_Q49=14542

BLT_49_cliques:
	$(ORBITER) -v 2 \
		-loop L 0 $(NB_CASES_BLT_Q49) 1 \
			-define G -graph \
				-load BLT_q49_graph_5_%L.bin \
			-end \
			-with G -do \
			-graph_theoretic_activity \
				-find_cliques -rainbow -target_size 50 -end \
			-end \
		-end_loop L


BLT_SLICE_COMMAND_Q49="$(ORBITER) -v 2 \
		-loop L %i $(NB_CASES_Q49) 128 \
			-define G -graph \
				-load BLT_q49_graph_5_%L.bin \
			-end \
			-with G -do \
			-graph_theoretic_activity \
				-find_cliques -rainbow -target_size 50 -end \
			-end \
		-end_loop L >log_%i"

BLT_49_cliques_sliced_128:
	$(ORBITER) -v 2 \
		-loop i 1 128 1\
			-system $(BLT_SLICE_COMMAND_Q49) \
		-end_loop i






###############################################################################
# Chapter 13 - Graph Theory
###############################################################################



###############################################################################
# Section 13.1: Creating Graphs


SECTION_CREATING_GRAPHS:


test_13_1:
	make Cycle_graph_13
	make make_triangle_graph
	make Chain_232
	make Paley_13_graph
	make Winnie_Li_graph_q16_index2
	make Sarnak_graph_29_5
	make trihedral_pair_graph
	make small_graph
	make petersen
	make Johnson_6_2_0
	make Hamming_graph_3
	make Hamming_graph_7
	make HJ_graph
	make Group_Perm315_Orbital_3.colored_graph
	make HJ_d2_graph
	make Cayley_Z11_1mod3
	make Cayley_Sym4_coxeter
	make Cayley_Sym4_star


Cycle_graph_13:
	$(ORBITER) -v 2 \
		-define Gamma -graph \
			-cycle 13 \
		-end




make_triangle_graph:
	echo $(TRIANGLE_GRAPH) >triangle_graph.csv
	$(ORBITER) -v 6 \
		-define G -graph \
			-load_csv_no_border \
			triangle_graph.csv \
		-end



Chain_232:
	$(ORBITER) -v 2 \
		-define P1 -vector -dense 2,3,2 -end \
		-define P2 -vector -dense 2,3,2 -end \
		-define Gamma -graph \
			-chain_graph P1 P2 \
		-end




Paley_13_graph:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 13 -end \
		-define Gamma -graph -Paley F -end \



Winnie_Li_graph_q16_index2:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 16 -end \
		-define Gamma -graph -Winnie_Li F 2 -end \


Sarnak_graph_29_5:
	$(ORBITER) -v 2 \
		-define Gamma -graph -Sarnak 29 5 -end \


trihedral_pair_graph:
	$(ORBITER) -v 2 \
		-define Gamma \
			-graph -trihedral_pair_disjointness_graph \
		-end


small_graph:
	$(ORBITER) -v 2 \
		-define G -graph -edges_as_pairs \
			5 "0,1,0,2,0,3,0,4,1,3,1,4,2,4" \
		-end




petersen:
	$(ORBITER) -v 2 \
		-define G -graph -Johnson 5 2 0 -end




Johnson_6_2_0:
	$(ORBITER) -v 2 \
		-define G -graph -Johnson 6 2 0 -end

Hamming_graph_3:
	$(ORBITER) -v 2 \
		-define G -graph -Hamming 3 2 -end


Hamming_graph_7:
	$(ORBITER) -v 2 \
		-define G -graph -Hamming 7 2 -end

# needs halljanko315.csv
# from https://www.win.tue.nl/~aeb/drg/graphs/HJ315.html
#There is a unique distance-regular graph Gamma with intersection array {10,8,8,2; 1,1,4,5}. It was constructed in Cohen (1981), and uniqueness (given the intersection array) was proved in Cohen & Tits (1985).


HJ_graph:
	cp $(MY_PATH)/examples/users_guide/halljanko315.csv .
	$(ORBITER) -v 6 \
		-define G -graph \
			-load_csv_no_border \
			halljanko315.csv \
		-end


Group_Perm315_Orbital_3.colored_graph: halljanko315_gens.csv
	$(ORBITER) -v 2 \
		-define gens -vector -format 5 -file \
			halljanko315_gens.csv -end \
		-define G -permutation_group \
			-bsgs halljanko315 "File\_halljanko315" \
			315 1209600 "0,1,2" 5 gens \
		-end \
		-define Gamma -graph \
			-orbital_graph G 3 \
		-end \
		-with Gamma -do \
			-graph_theoretic_activity -save \
		-end

HJ_d2_graph:
	$(ORBITER) -v 6 \
		-define G -graph \
			-load_csv_no_border \
			halljanko315.csv \
			-distance_2 -end \
		-end



Cayley_Z11_1mod3:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 11 -end \
		-define S -vector -dense \
			"1,1, 1,4, 1,7, 1,10" -end \
		-define G -linear_group -AGL 1 F \
			-subgroup_by_generators "Z11" 11 1 "1,1" \
		-end \
		-define Gamma -graph \
			-Cayley_graph G S \
		-end 


Cayley_Sym4_coxeter:
	$(ORBITER) -v 2 \
		-define S -vector -dense "1,0,2,3, 0,2,1,3, 0,1,3,2" -end \
		-define G -permutation_group -symmetric_group 4 \
		-end \
		-define Gamma -graph \
			-Cayley_graph G S \
		-end 


Cayley_Sym4_star:
	$(ORBITER) -v 2 \
		-define S -vector -dense "1,0,2,3, 2,1,0,3, 3,1,2,0" -end \
		-define G -permutation_group -symmetric_group 4 \
		-end \
		-define Gamma -graph \
			-Cayley_graph G S \
		-end 



###############################################################################
# Section 13.2: Graphs Theoretic Activities


SECTION_GRAPH_THEORETIC_ACTIVITIES:


test_13_2:
	make triangle_graph_properties
	make Cycle_13_draw
	make Cycle_9_eigenvalues
	make Paley_13_draw
	make Paley_13_eigenvalues
	make Cayley_Z11_1mod3_eigenvalues_and_draw
	make Cayley_Sym4_coxeter_draw
	make Cayley_Sym5_coxeter_draw
	make Cayley_Sym4_star_eigenvalues_and_draw
	make graph_v5_e7.colored_graph
	make small_graph_draw
	make petersen_draw
	make Johnson_6_2_0_draw
	make Hamming_graph_3_draw
	make Hamming_graph_7_draw
	make Chain_232_properties
	make Chain_232_eigen
	make HJ_properties
	make HJ_d2_properties
	make PGO_5_2_collinearity_graph
	make trihedral_pair_graph_draw


triangle_graph_properties:
	echo $(TRIANGLE_GRAPH) >triangle_graph.csv
	$(ORBITER) -v 6 \
		-define G -graph \
			-load_csv_no_border \
			triangle_graph.csv \
		-end \
		-with G -do \
			-graph_theoretic_activity -properties \
		-end


Cycle_13_draw:
	$(ORBITER) -v 2 \
		-define Gamma -graph -cycle 13 -end \
		-with Gamma -do \
		-graph_theoretic_activity -export_csv -end \
		-with Gamma -do \
		-graph_theoretic_activity -export_graphviz -end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file Cycle_13.csv \
		-box_width 20 -bit_depth 8 -partition 4 13 13 -end
	dot -Tpng Cycle_13.gv >Cycle_13.png
	#twopi -Tpng Cycle_13.gv >Cycle_13.png
	#open Cycle_13_draw.bmp
	#pdflatex Cycle_13_report.tex
	#open Cycle_13_report.pdf


Cycle_9_eigenvalues:
	$(ORBITER) -v 2 \
		-define Gamma -graph \
			-cycle 9 \
		-end \
		-with Gamma -do \
		-graph_theoretic_activity -eigenvalues -end
	pdflatex Cycle_9_eigenvalues.tex
	open Cycle_9_eigenvalues.pdf


Paley_13_draw:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 13 -end \
		-define Gamma -graph -Paley F -end \
		-with Gamma -do \
		-graph_theoretic_activity -export_csv -end \
		-with Gamma -do \
		-graph_theoretic_activity -export_graphviz -end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file Paley_13.csv \
		-box_width 20 -bit_depth 8 -partition 4 13 13 -end
	dot -Tpng Paley_13.gv >Paley_13.png
	open Paley_13_draw.bmp


Paley_13_eigenvalues:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 13 -end \
		-define Gamma -graph -Paley F -end \
		-with Gamma -do \
		-graph_theoretic_activity -eigenvalues -end
	pdflatex Paley_13_eigenvalues.tex
	open Paley_13_eigenvalues.pdf



Cayley_Z11_1mod3_eigenvalues_and_draw:
	$(ORBITER) -v 2 \
		-draw_options -xin 2000000 \
			-yin 2000000 -embedded -radius 20000 -end \
		-define F -finite_field -q 11 -end \
		-define S -vector -dense \
			"1,1, 1,4, 1,7, 1,10" -end \
		-define G -linear_group -AGL 1 F \
			-subgroup_by_generators "Z11" 11 1 "1,1" \
		-end \
		-define Gamma -graph \
			-Cayley_graph G S \
		-end \
		-with Gamma -do \
		-graph_theoretic_activity -eigenvalues -end \
		-with Gamma -do \
		-graph_theoretic_activity -draw -end
	pdflatex Cayley_graph_AGL_1_11_draw.tex
	open Cayley_graph_AGL_1_11_draw.pdf


Cayley_Sym4_coxeter_draw:
	$(ORBITER) -v 2 \
		-draw_options -xin 2000000 -yin 2000000 \
			-radius 20000 -embedded -nodes_empty -end \
		-define S -vector -dense \
			"1,0,2,3, 0,2,1,3, 0,1,3,2" -end \
		-define G -permutation_group -symmetric_group 4 \
		-end \
		-define Gamma -graph \
			-Cayley_graph G S \
		-end \
		-with Gamma -do \
		-graph_theoretic_activity -draw -end
	pdflatex Cayley_graph_Sym_4_draw.tex
	open Cayley_graph_Sym_4_draw.pdf

Cayley_Sym5_coxeter_draw:
	$(ORBITER) -v 2 \
		-draw_options -xin 1000000 -yin 1000000 \
			-embedded -radius 10000 -nodes_empty -end \
		-define S -vector -dense \
			"1,0,2,3,4, 0,2,1,3,4, 0,1,3,2,4, 0,1,2,4,3" -end \
		-define G -permutation_group -symmetric_group 5 \
		-end \
		-define Gamma -graph \
			-Cayley_graph G S \
		-end \
		-with Gamma -do \
		-graph_theoretic_activity -draw -end
	pdflatex Cayley_graph_Sym_5_draw.tex
	open Cayley_graph_Sym_5_draw.pdf


Cayley_Sym4_star_eigenvalues_and_draw:
	$(ORBITER) -v 2 \
		-draw_options -xin 1000000 -yin 1000000 -embedded -end \
		-define S -vector -dense "1,0,2,3, 2,1,0,3, 3,1,2,0" -end \
		-define G -permutation_group -symmetric_group 4 \
		-end \
		-define Gamma -graph \
			-Cayley_graph G S \
		-end \
		-with Gamma -do \
		-graph_theoretic_activity -eigenvalues -end \
		-with Gamma -do \
		-graph_theoretic_activity -draw -end
	pdflatex Cayley_graph_Sym_4_draw.tex
	open Cayley_graph_Sym_4_draw.pdf
	pdflatex Cayley_graph_Sym_4_eigenvalues.tex
	open Cayley_graph_Sym_4_eigenvalues.pdf




graph_v5_e7.colored_graph:
	$(ORBITER) -v 2 \
		-define G -graph -edges_as_pairs 5 \
			"0,1,0,2,0,3,0,4,1,3,1,4,2,4" \
		-end \
		-with G -do \
		-graph_theoretic_activity -save -end



small_graph_draw:
	$(ORBITER) -v 2 \
		-define G -graph -edges_as_pairs 5 \
			"0,1,0,2,0,3,0,4,1,3,1,4,2,4" \
		-end \
		-with G -do \
		-graph_theoretic_activity -export_csv -end \
		-with G -do \
		-graph_theoretic_activity -export_graphviz -end \
		-with G -do \
		-graph_theoretic_activity -save -end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file graph_v5_e7.csv \
		-box_width 40 -bit_depth 24 \
		-partition 4 "1,1,1,1,1" "1,1,1,1,1" -end
	dot -Tpng graph_v5_e7.gv >graph_v5_e7.png

# creates graph_v5_e7.csv
# creates graph_v5_e7.colored_graph


petersen_draw:
	$(ORBITER) -v 2 \
		-define G -graph -Johnson 5 2 0 -end \
		-with G -do \
		-graph_theoretic_activity -export_csv -end \
		-with G -do \
		-graph_theoretic_activity -export_graphviz -end \
		-with G -do \
		-graph_theoretic_activity -save -end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file Johnson_5_2_0.csv \
		-box_width 40 -bit_depth 24 -partition 4 "10" "10" -end
	dot -Tpng Johnson_5_2_0.gv >Johnson_5_2_0.png


Johnson_6_2_0_draw:
	$(ORBITER) -v 2 \
		-define G -graph -Johnson 6 2 0 -end \
		-with G -do \
		-graph_theoretic_activity -export_csv -end \
		-with G -do \
		-graph_theoretic_activity -export_graphviz -end \
		-with G -do \
		-graph_theoretic_activity -save -end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file Johnson_6_2_0.csv \
		-box_width 40 -bit_depth 24 -partition 4 "10" "10" -end
	dot -Tpng Johnson_6_2_0.gv >Johnson_6_2_0.png



Hamming_graph_3_draw:
	$(ORBITER) -v 2 \
		-define G -graph -Hamming 3 2 -end \
		-with G -do \
		-graph_theoretic_activity -export_csv -end \
		-with G -do \
		-graph_theoretic_activity -export_graphviz -end \
		-with G -do \
		-graph_theoretic_activity -save -end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file Hamming_3_2.csv \
		-box_width 40 -bit_depth 24 \
		-partition 4 "1,1,1,1,1,1,1,1" "1,1,1,1,1,1,1,1" -end
	dot -Tpng Hamming_3_2.gv >Hamming_3_2.png


Hamming_graph_7_draw:
	$(ORBITER) -v 2 \
		-define G -graph -Hamming 7 2 -end \
		-with G -do \
		-graph_theoretic_activity -export_csv -end \
		-with G -do \
		-graph_theoretic_activity -export_graphviz -end \
		-with G -do \
		-graph_theoretic_activity -save -end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file Hamming_7_2.csv \
		-box_width 8 -bit_depth 24 -partition 4 128 128 -end
	dot -Tpng Hamming_7_2.gv >Hamming_7_2.png






Chain_232_properties:
	$(ORBITER) -v 2 \
		-define P1 -vector -dense 2,3,2 -end \
		-define P2 -vector -dense 2,3,2 -end \
		-define Gamma -graph \
			-chain_graph P1 P2 \
		-end \
		-with Gamma -do \
			-graph_theoretic_activity -export_csv \
		-end \
		-with Gamma -do \
			-graph_theoretic_activity -properties \
		-end

Chain_232_eigen:
	$(ORBITER) -v 2 \
		-define P1 -vector -dense 2,3,2 -end \
		-define P2 -vector -dense 2,3,2 -end \
		-define Gamma -graph \
			-chain_graph P1 P2 \
		-end \
		-with Gamma -do \
			-graph_theoretic_activity \
			-eigenvalues \
		-end
	pdflatex chain_graph_eigenvalues.tex
	open chain_graph_eigenvalues.pdf



# need the file halljanko315.csv

HJ_properties:
	$(ORBITER) -v 6 \
		-define G -graph \
			-load_csv_no_border \
			halljanko315.csv \
		-end \
		-with G -do \
			-graph_theoretic_activity -properties \
		-end

#Degree type: (10^{315} )



HJ_d2_properties:
	$(ORBITER) -v 6 \
		-define G -graph \
			-load_csv_no_border \
			halljanko315.csv \
			-distance_2 -end \
		-end \
		-with G -do \
			-graph_theoretic_activity \
			-properties \
		-end


#Degree type: (80^{315} )




PGO_5_2_collinearity_graph: O_5_2_incidence_matrix.csv 
	$(ORBITER) -v 3 \
		-define Inc -vector -file O_5_2_incidence_matrix.csv -end \
		-define Gamma -graph -collinearity_graph Inc -end \
		-with Gamma -do \
		-graph_theoretic_activity \
			-properties \
		-end


trihedral_pair_graph_draw:
	$(ORBITER) -v 2 -define Gamma \
		-graph -trihedral_pair_disjointness_graph -end \
		-with Gamma -do \
		-graph_theoretic_activity -export_csv -end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file trihedral_pair_disjointness.csv \
		-box_width 20 -bit_depth 8 -end
	open trihedral_pair_disjointness_draw.bmp




###############################################################################
# Section 13.3: Graph Theory: Classification


SECTION_GRAPH_THEORY_CLASSIFICATION:


test_13_3:
	make graph_classify_5
	make tournament_classify_4
	make graph_classify_8_r3
	make Symmetric_4_inversion_graph_recognize
	make Symmetric_5_inversion_graph_recognize



graph_classify_5:
	$(ORBITER) -v 2 \
		-orbiter_path $(ORBITER_PATH) \
		-define GC -graph_classification \
			-n 5 \
			-poset_classification_control \
				-problem_label graphs_v5 \
				-depth 10 \
				-draw_options -radius 250 \
				-embedded \
				-end \
			-end \
		-end \
		-with GC -do \
		-graph_classification_activity \
			-list_graphs_at_level 5 5 \
		-end \
		-with GC -do \
		-graph_classification_activity \
			-draw_options \
				-radius 300 -nodes_empty \
				-line_width 1.5  \
				-scale 0.1 \
			-end \
			-draw_graphs_at_level 5 \
		-end \
		-print_symbols
	pdflatex graphs_v5_level_5_reps.tex
	open graphs_v5_level_5_reps.pdf
	#pdflatex graphs_v5_poset.tex
	#open graphs_v5_poset.pdf


tournament_classify_4:
	$(ORBITER) -v 2 \
		-define GC -graph_classification \
			-n 4 -tournament \
			-poset_classification_control \
				-problem_label tournament_4 \
				-depth 6 \
				-draw_options \
					-radius 250 -embedded \
				-end \
			-end \
		-end \
		-with GC -do \
		-graph_classification_activity \
			-draw_options \
				-radius 400 \
				-line_width 2 -scale 0.10 \
			-end \
			-draw_graphs_at_level 6 \
		-end \
		-print_symbols
	pdflatex tournament_4_level_6_reps.tex
	open tournament_4_level_6_reps.pdf
	




graph_classify_8_r3:
	$(ORBITER) -v 3 \
		-define GC -graph_classification \
			-n 8 -regular 3 \
			-poset_classification_control \
				-problem_label graphs_v8_r3 \
				-depth 12 \
				-draw_options -radius 250 \
					-line_width 0.2 -embedded \
				-end \
			-end \
		-end \
		-with GC -do \
		-graph_classification_activity \
			-draw_options \
				-radius 400 \
				-line_width 2 -scale 0.10 \
			-end \
			-draw_graphs_at_level 12 \
		-end \
		-print_symbols
	#pdflatex graphs_v8_r3_poset_lvl_12.tex
	#open graphs_v8_r3_poset_lvl_12.pdf




Symmetric_4_inversion_graph_recognize:
	$(ORBITER) -v 10 \
		-define G -permutation_group -symmetric_group 4 -end \
		-with G -do \
		-group_theoretic_activity \
			-export_inversion_graphs "Symmetric4_inversion_graphs.csv" \
		-end
	$(ORBITER) -v 2 \
		-define GC -graph_classification \
			-n 4 \
			-poset_classification_control \
				-problem_label graphs_v4 -depth 6 \
				-draw_options -radius 250 -embedded -end \
			-end \
		-end \
		-with GC -do \
		-graph_classification_activity \
			-recognize_graphs_from_adjacency_matrix_csv \
				Symmetric4_inversion_graphs.csv \
		-end \
		-print_symbols


Symmetric_5_inversion_graph_recognize:
	$(ORBITER) -v 10 \
		-define G -permutation_group -symmetric_group 5 -end \
		-with G -do \
		-group_theoretic_activity \
			-export_inversion_graphs \
				"Symmetric5_inversion_graphs.csv" \
		-end
	$(ORBITER) -v 2 \
		-orbiter_path $(ORBITER_PATH) \
		-define GC -graph_classification \
			-n 5 \
			-poset_classification_control \
				-problem_label graphs_v5 \
				-depth 10 \
				-draw_options \
					-radius 250 -embedded \
				-end \
			-end \
		-end \
		-with GC -do \
		-graph_classification_activity \
			-recognize_graphs_from_adjacency_matrix_csv \
			Symmetric5_inversion_graphs.csv \
		-end \
		-print_symbols
	#pdflatex graphs_v5_poset.tex
	#open graphs_v5_poset.pdf



###############################################################################
# Section 13.4: Graph Theory: Clique finding


SECTION_GRAPH_THEORY_CLIQUE_FINDING:


test_13_4:
	make small_graph_cliques
	make BLT_q13_graph_5_0_cliques_bw
	make BLT_q13_graph_5_0_cliques_rainbow
	make small_graph_cliques_Sajeeb
	make Paley_13_aut
	make Paley_13
	make Paley_13_cliques_classify
	make Paley_13_cliques_all
	make PGO_5_2_cliques
	make HJ_d2_c5
	make HJ64_cliques5
	make HJ64_cliques5_classify



small_graph_cliques: graph_v5_e7.colored_graph
	$(ORBITER) -v 2 \
		-define G -graph -load graph_v5_e7.colored_graph -end \
		-with G -do \
		-graph_theoretic_activity \
			-find_cliques -target_size 3 \
		-end

# nb_sol = 3




BLT_q13_graph_5_0_cliques_bw:
	$(ORBITER) -v 2 \
		-define G -graph -load BLT_q13_graph_5_0.bin -end \
		-with G -do \
		-graph_theoretic_activity \
			-find_cliques -target_size 9 \
		-end

# all_cliques_black_and_white


BLT_q13_graph_5_0_cliques_rainbow:
	$(ORBITER) -v 2 \
		-define G -graph -load BLT_q13_graph_5_0.bin -end \
		-with G -do \
		-graph_theoretic_activity \
			-find_cliques -rainbow -target_size 9 \
		-end

# all_rainbow_cliques


small_graph_cliques_Sajeeb:
	$(ORBITER) -v 2 \
		-define G -graph -load graph_v5_e7.colored_graph -end \
		-with G -do \
		-graph_theoretic_activity \
			-find_cliques -Sajeeb -target_size 3 \
		-end

# nb_sol = 3

Paley_13_aut:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 13 -end \
		-define Gamma -graph -Paley F -end \
		-with Gamma -do \
		-graph_theoretic_activity \
			-automorphism_group \
		-end 

# writes Paley_13_group.makefile
#User time: 0 of a second, dt=0 tps = 100
#nb_calls_to_densenauty=1



Paley_13:
	$(ORBITER) -v 2 \
		-define gens -vector -file Paley_13_gens.csv -end \
		-define G -permutation_group \
		-bsgs Paley_13 "Paley\_13" 13 78 "0,1" 3 gens -end \


Paley_13_cliques_classify:
	$(ORBITER) -v 4 \
		-define Control -poset_classification_control \
			-W \
			-problem_label Paley13_cliques \
			-clique_test Gamma \
			-depth 5 \
		-end \
		-define F -finite_field -q 13 -end \
		-define gens -vector -file Paley_13_gens.csv -end \
		-define G -permutation_group \
			-bsgs Paley_13 "Paley\_13" 13 78 "0,1" 3 gens -end \
		-define Gamma -graph -Paley F -end \
		-define Orb -orbits -group G \
			-on_subsets 5 Control \
		-end

#User time: 0.01 of a second, dt=1 tps = 100


Paley_13_cliques_all:
	$(ORBITER) -v 10 \
		-define F -finite_field -q 13 -end \
		-define Gamma -graph -Paley F -end \
		-with Gamma -do \
		-graph_theoretic_activity \
			-find_cliques -target_size 3 \
		-end






PGO_5_2_cliques: O_5_2_incidence_matrix.csv 
	$(ORBITER) -v 3 \
		-define Inc -vector -file O_5_2_incidence_matrix.csv -end \
		-define Gamma -graph -collinearity_graph Inc -end \
		-with Gamma -do \
		-graph_theoretic_activity \
			-find_cliques -target_size 3 -end \
		-end


HJ_d2_c5:
	$(ORBITER) -v 6 \
		-define G -graph \
			-load_csv_no_border \
			halljanko315.csv \
			-distance_2 -end \
		-end \
		-with G -do \
		-graph_theoretic_activity \
			-find_cliques -target_size 5 -end \
		-end



#graph_theoretic_activity::perform_activity Gr->label=halljanko315 nb_sol = 262080


HJ64_cliques5:
	$(ORBITER) -v 6 \
		-define Gamma -graph \
			-load \
			Group_Perm315_Orbital_3.colored_graph \
		-end \
		-with Gamma -do \
		-graph_theoretic_activity \
			-find_cliques -target_size 5 -end \
		-end

#graph_theoretic_activity::perform_activity Gr->label=Group_Perm315_Orbital_3 nb_sol = 1008
#Group_Perm315_Orbital_3_sol.csv



HJ64_cliques5_classify:
	$(ORBITER) -v 6 \
		-define Control -poset_classification_control \
			-W \
			-problem_label HJ64_cliques \
			-clique_test Gamma \
			-depth 5 \
		-end \
		-define Gamma -graph \
			-load \
			Group_Perm315_Orbital_3.colored_graph \
		-end \
		-define gens -vector \
			-file halljanko315_gens.csv \
		-end \
		-define G -permutation_group \
		-bsgs halljanko315 "File\_halljanko315" \
			315 1209600 "0,1,42,95" 5 gens -end \
		-define Orb -orbits -group G \
			-on_subsets 5 Control \
		-end

#HJ64_cliques_reps_lvl_5.csv

# 1 orbit
#ROW,REP,AGO,OL
#0,"0,8,31,110,283",1200,1008
#END






###############################################################################
# Chapter 14 - Combinatorial Objects
###############################################################################


###############################################################################
# Section 14.1: Finite Projective Spaces

SECTION_COMBINATORIAL_OBJECTS:


test_14_1:
	make Hirschfeld_q4_from_set
	make hyperoval_16_create
	make EC_read
	#make PG_3_5_assume_31_read
	#make LS_AG_2_3_read
	make geo_7_3_read
	#make Desargues_path_lex_least_read



Hirschfeld_q4_from_set:
	$(ORBITER) -v 4 \
		-define H -set -here \
			$(HIRSCHFELD_SURFACE_Q4_SET_OF_POINTS) \
		-end \
		-define C -combinatorial_objects \
			-set_of_points H \
		-end



hyperoval_16_create:
	$(ORBITER) -v 2 \
		-define C -combinatorial_objects \
			-set_of_points $(HYPEROVAL_16_16320) \
			-set_of_points $(HYPEROVAL_16_144) \
		-end \


EC_read: elliptic_curve_b1_c3_q11.txt
	$(ORBITER) -v 4 \
		-define C -combinatorial_objects \
			-file_of_points elliptic_curve_b1_c3_q11.txt \
		-end



PG_3_5_assume_31_read:
	$(ORBITER) -v 2 \
		-define C -combinatorial_objects \
			-file_of_packings_through_spread_table \
				H31_packings.csv \
				SPREAD_TABLES_5_REG/spread_25_spreads.csv \
				5 \
		-end



LS_AG_2_3_read:
	$(ORBITER) -v 2 \
		-define C -combinatorial_objects \
			-file_of_designs \
			solutions.csv 9 84 3 12 \
		-end



geo_7_3_read:
	$(ORBITER) -v 10 \
		-draw_incidence_structure_description \
			-width 60 -width_10 6 -end \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries \
				7_3.inc 7 7 21 \
		-end



Desargues_path_lex_least_read:
	echo $(DESARGUES_PATH_LEX_LEAST) >Desargues_path_lex_least.inc
	$(ORBITER) -v 10 \
		-draw_incidence_structure_description \
			-width 60 -width_10 6 -end \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries_by_row_ranks \
				Desargues_path_lex_least.inc 10 10 3 \
		-end



###############################################################################
# Section 14.2: File Formats


SECTION_FILE_FORMATS:

test_14_2:
	make geo_pasch_read
	make geo_pasch_given



geo_pasch_read:
	$(ORBITER) -v 10 \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries \
				pasch.inc 6 4 12 \
		-end

geo_pasch_given:
	$(ORBITER) -v 10 \
		-define C -combinatorial_objects \
			-incidence_geometry \
				"0,1,4,6,8,11,13,14,17,19,22,23" \
				6 4 12 \
		-end





###############################################################################
# Chapter 15 - Canonical Forms with Nauty 
###############################################################################


###############################################################################
# Section 15.1: Overview of Canonical Forms


SECTION_OVERVIEW_CANONICAL_FORMS:





###############################################################################
# Section 15.2: Objects in projective Space


SECTION_OBJECTS_IN_PROJECTIVE_SPACE:


test_15_2:
	make EC_canon
	make Hirschfeld_q4_c
	make Hirschfeld_q4_set_c
	make Dickson_sets_stabilizer
	make Endrass_7c
	make hyperoval_16_canonical_form
	make cubic_curves_PG_2_8_canon
	#make F_alpha_beta_gamma_delta_classify_q7_nauty
	make ovoid_q8_canon
	make ovoid_ST_q8_canon
	make Suzuki_8
	make quartic_curve_25_0_0_canonical



EC_canon: elliptic_curve_b1_c3_q11.txt
	$(ORBITER) -v 3 \
		-define C -combinatorial_objects \
			-file_of_points elliptic_curve_b1_c3_q11.txt \
		-end \
		-define F -finite_field -q 11 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form_PG P \
				-classification_prefix EC \
				-label EC \
				-save_ago \
				-max_TDO_depth 4 \
			-end \
			-report \
				-prefix EC \
				-export_flag_orbits \
				-show_TDO \
				-show_TDA \
				-dont_show_incidence_matrices \
				-export_group_GAP \
			-end \
		-end
	pdflatex EC_classification.tex
	open EC_classification.pdf
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file EC_object0_TDA_flag_orbits.csv \
		-secondary_input_csv_file EC_object0_TDA.csv \
		-box_width 20 -bit_depth 24 \
		-end
	open EC_object0_TDA_flag_orbits_draw.bmp




Hirschfeld_q4_c: Hirschfeld_surface_q4.txt
	$(ORBITER) -v 6 \
		-define C -combinatorial_objects \
			-file_of_points Hirschfeld_surface_q4.txt \
		-end \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form_PG P \
				-classification_prefix Hirschfeld_surface_q4 \
				-save_ago \
				-max_TDO_depth 10 \
			-end \
			-report \
				-prefix Hirschfeld_surface_q4 \
				-export_flag_orbits \
				-show_TDO \
				-show_TDA \
				-dont_show_incidence_matrices \
				-export_group_GAP \
			-end \
		-end
	pdflatex Hirschfeld_surface_q4_classification.tex
	open Hirschfeld_surface_q4_classification.pdf


# group order is 51840


Hirschfeld_stab_group:
	$(ORBITER) -v 9 \
		-orbiter_path $(ORBITER_PATH) \
		-define G -linear_group -PGGL 4 4 \
			-subgroup_by_generators "Hirschfeld_Stab" \
			51840 6 $(HIRSCHFELD_STAB_GENERATORS) \
			-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGGL_4_4_Subgroup_Hirschfeld_Stab_51840_report.tex
	open PGGL_4_4_Subgroup_Hirschfeld_Stab_51840_report.pdf

Hirschfeld_stab_subgroup:
	$(ORBITER) -v 9 \
		-orbiter_path $(ORBITER_PATH) \
		-define G -linear_group -PGGL 4 4 \
			-subgroup_by_generators "Hirschfeld_Stab" \
			51840 6 $(HIRSCHFELD_STAB_GENERATORS) \
			-end \
		-define Gsp -modified_group -from G \
			-create_special_subgroup \
		-end \
		-with Gsp -do \
		-group_theoretic_activity \
			-report \
		-end \
		-define Orb -orbits -group Gsp \
			-on_points \
		-end

Hirschfeld_stab_orbits:
	$(ORBITER) -v 9 \
		-orbiter_path $(ORBITER_PATH) \
		-define G -linear_group -PGGL 4 4 \
			-subgroup_by_generators "Hirschfeld_Stab" \
			51840 6 $(HIRSCHFELD_STAB_GENERATORS) \
			-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end \
		-define Orb -orbits -group G \
			-on_points \
		-end \
		-with Orb -do -orbits_activity \
			-export_something "orbit" 0 \
		-end

#orbits_PGGL_4_4_Subgroup_Hirschfeld_Stab_51840_orbit_0.csv


Hirschfeld_q4_set_c:
	$(ORBITER) -v 4 \
		-define H -set -here \
			$(HIRSCHFELD_SURFACE_Q4_SET_OF_POINTS) \
		-end \
		-define C -combinatorial_objects \
			-set_of_points H \
		-end \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form_PG P \
				-classification_prefix Hirschfeld_surface_q4 \
				-label Hirschfeld_surface_q4 \
				-save_ago \
				-max_TDO_depth 4 \
			-end \
			-report \
				-prefix Hirschfeld_surface_q4 \
				-show_TDO \
				-show_TDA \
			-end \
		-end
	pdflatex Hirschfeld_surface_q4_classification.tex
	open Hirschfeld_surface_q4_classification.pdf



Dickson_sets_stabilizer:
	$(ORBITER) -v 3 \
		-define C -combinatorial_objects \
			-set_of_points "0,1,2,5,6" \
			-set_of_points "0,1,2,3,6" \
			-set_of_points "0,1,2,3,4" \
			-set_of_points "0,1,2,3,8" \
			-set_of_points "0,1,2,5,6,7,8" \
			-set_of_points "0,1,2,3,5,6,7" \
			-set_of_points "0,1,2,3,5,6,9" \
			-set_of_points "0,1,2,3,5,6,10" \
			-set_of_points "0,1,2,3,5,6,4" \
			-set_of_points "0,1,2,3,8,11,13" \
			-set_of_points "3,6,9,7,10,12,8,11,13,14,4" \
			-set_of_points "3,5,6,9,7,10,12,11,13,14,4" \
			-set_of_points "0,1,2,3,5,6,9,7,10,12,4" \
		-end \
		-define F -finite_field -q 2 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form_PG P \
				-classification_prefix Dickson_sets \
				-label Dickson_sets \
				-save_ago \
				-max_TDO_depth 4 \
			-end \
			-report \
				-prefix Dickson_sets \
				-show_TDO \
				-show_TDA \
			-end \
		-end
	pdflatex Dickson_sets_classification.tex
	open Dickson_sets_classification.pdf



Endrass_7c: Endrass_F7.txt
	$(ORBITER) -v 2 \
		-define C -combinatorial_objects \
			-file_of_points Endrass_F7.txt \
		-end \
		-define F -finite_field -q 7 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form_PG P \
				-classification_prefix Endrass_F7 \
				-label Endrass_F7 \
				-save_ago \
				-max_TDO_depth 4 \
			-end \
			-report \
				-prefix Endrass_F7 \
				-show_TDO \
				-show_TDA \
			-end \
		-end
	pdflatex Endrass_F7_classification.tex
	open Endrass_F7_classification.pdf

# ToDo group order is computed wrong
# should be: group order is 32


hyperoval_16_canonical_form:
	$(ORBITER) -v 2 \
		-define C -combinatorial_objects \
			-set_of_points $(HYPEROVAL_16_16320) \
			-set_of_points $(HYPEROVAL_16_144) \
		-end \
		-define F -finite_field -q 16 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form_PG P \
				-classification_prefix hyperoval_q16 \
				-label hyperoval_q16 \
				-save_ago \
				-save_transversal \
				-max_TDO_depth 10 \
			-end \
			-report \
				-prefix hyperoval_q16 \
				-export_flag_orbits \
				-show_TDO \
				-show_TDA \
				-dont_show_incidence_matrices \
				-export_group_GAP \
			-end \
		-end
	pdflatex hyperoval_q16_classification.tex
	open hyperoval_q16_classification.pdf
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file hyperoval_q16_object0_TDA_flag_orbits.csv \
		-secondary_input_csv_file hyperoval_q16_object0_TDA.csv \
		-box_width 4 -bit_depth 24 \
		-end
	open hyperoval_q16_object0_TDA_flag_orbits_draw.bmp
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file hyperoval_q16_object1_TDA_flag_orbits.csv \
		-secondary_input_csv_file hyperoval_q16_object1_TDA.csv \
		-box_width 4 -bit_depth 24 \
		-end
	open hyperoval_q16_object1_TDA_flag_orbits_draw.bmp





cubic_curves_PG_2_8_canon:
	$(ORBITER) -v 6 \
		-define C -combinatorial_objects \
			-set_of_points "2,3,28,46,51,61,40,71" \
		-end \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form_PG P \
				-classification_prefix cc_8 \
				-save_ago \
				-max_TDO_depth 10 \
			-end \
			-report \
				-prefix cc_8 \
				-export_flag_orbits \
				-show_TDO \
				-show_TDA \
				-dont_show_incidence_matrices \
				-export_group_GAP \
			-end \
		-end
	pdflatex cc_8_classification.tex
	open cc_8_classification.pdf


F_alpha_beta_gamma_delta_classify_q7_nauty: F_alpha_beta_gamma_delta_q7_points.txt
	$(ORBITER) -v 6 \
		-define C -combinatorial_objects \
			-file_of_points \
			F_alpha_beta_gamma_delta_q7_points.txt \
		-end \
		-define F -finite_field -q 7 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form_PG P \
				-classification_prefix surface_15_lines_q7 \
				-save_ago \
				-save_transversal \
			-end \
		-end
	#pdflatex surface_15_lines_q7_classification.tex
	#open surface_15_lines_q7_classification.pdf

#4:38


#User time: 4:12 on Mac
# 6 orbits



ovoid_q8_canon: ovoid_q8.txt
	$(ORBITER) -v 6 \
		-define C -combinatorial_objects \
			-file_of_points ovoid_q8.txt \
		-end \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form_PG P \
				-classification_prefix ovoid \
				-label ovoid \
				-save_ago \
				-max_TDO_depth 4 \
			-end \
			-report \
				-prefix ovoid \
				-show_TDO \
				-show_TDA \
				-dont_show_incidence_matrices \
				-export_group_GAP \
			-end \
		-end
	#pdflatex ovoid_classification.tex
	#open ovoid_classification.pdf

#15.190u 0.615s 0:15.94 99.1%	0+0k 0+0io 54pf+0w




# group order 1572480

ovoid_ST_q8_canon: ovoid_ST_q8.txt
	$(ORBITER) -v 6 \
		-define C -combinatorial_objects \
			-file_of_points ovoid_ST_q8.txt \
		-end \
		-define F -finite_field -q 8 -end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form_PG P \
				-classification_prefix ovoid_ST \
				-label ovoid_ST \
				-save_ago \
				-max_TDO_depth 4 \
			-end \
			-report \
				-prefix ovoid_ST \
				-show_TDO \
				-show_TDA \
				-dont_show_incidence_matrices \
				-export_group_GAP \
			-end \
		-end
	#pdflatex ovoid_ST_classification.tex
	#open ovoid_ST_classification.pdf

# very slow
#136.331u 0.752s 2:17.22 99.8%	0+0k 0+0io 42pf+0w



Suzuki_8:
	$(ORBITER) -v 6 \
		-define F -finite_field -q 8 -end \
		-define gens -vector -field F \
			-compact $(SUZUKI_8_GENERATORS) -end \
		-define G -linear_group -PGGL 4 8 \
		-subgroup_by_generators "Sz8" "87360" 5 gens \
			-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGGL_4_8_Subgroup_Sz8_87360_report.tex
	open PGGL_4_8_Subgroup_Sz8_87360_report.pdf



quartic_curve_25_0_0_canonical: 
	$(ORBITER) -v 3 \
		-define F -finite_field -q 25 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-define C -combinatorial_objects \
			-set_of_points "10,11,59,63,124,135,136,170,206,257,275,284,285,367,378,393,433,619,641,644" \
			-set_of_points "9, 24, 62, 67, 77, 84, 87, 89, 125, 130, 158, 172, 197, 219, 266, 271, 325, 356, 391, 392, 400, 429, 454, 458, 470, 503, 531, 553, 605, 625, 627, 646" \
			-set_of_points "9, 24, 55, 75, 79, 88, 93, 94, 112, 142, 186, 213, 230, 249, 316, 329, 337, 371, 381, 383, 392, 405, 417, 439, 464, 466, 470, 524, 530, 567, 583, 594" \
			-set_of_points "10, 23, 34, 51, 65, 83, 117, 126, 144, 146, 147, 159, 172, 181, 185, 197, 198, 207, 240, 281, 283, 293, 300, 301, 305, 346, 357, 384, 409, 419, 444, 459, 463, 465, 468, 514, 533, 543, 547, 549, 586, 615, 618, 628" \
			-set_of_points "2, 12, 48, 65, 87, 120, 189, 246, 305, 323, 354, 375, 434, 435, 455, 482, 496, 557, 586, 595" \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form_PG P \
				-classification_prefix quartic_25_0_0 \
				-label quartic_25_0_0 \
				-save_ago \
				-max_TDO_depth 4 \
			-end \
			-report \
				-prefix quartic_25_0_0 \
				-show_TDO \
				-show_TDA \
				-dont_show_incidence_matrices \
				-export_group_GAP \
			-end \
		-end
	pdflatex quartic_25_0_0_classification.tex
	open quartic_25_0_0_classification.pdf



###############################################################################
# Section 15.3: Incidence Geometries


SECTION_INCIDENCE_GEOMETRIES:



test_15_3:
	make geo_7_3_c
	make geo_10_3_c
	make geo_10_3_c_lex_least
	#make geo_14_3_c
	#make geo_15_3_c
	make TFC_24_3_c
	#make geo_40_4_g4_c
	#make geo_17_3_g4_c
	make AG_2_3_c
	make geo_LSQ6_c


geo_7_3_c:
	$(ORBITER) -v 10 \
		-draw_incidence_structure_description \
			-width 60 -width_10 6 -end \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries 7_3.inc 7 7 21 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form \
				-classification_prefix 7_3 \
				-label 7_3 \
				-save_ago \
				-save_transversal \
			-end \
			-report \
				-prefix 7_3 \
				-export_flag_orbits \
				-show_incidence_matrices \
				-export_group_GAP \
			-end \
		-end
	pdflatex 7_3_classification.tex
	open 7_3_classification.pdf
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file 7_3_object0_TDA_flag_orbits.csv \
		-secondary_input_csv_file 7_3_object0_TDA.csv \
		-box_width 32 -bit_depth 24 \
		-end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file 7_3_object0_INP_flag_orbits.csv \
		-secondary_input_csv_file 7_3_object0_INP.csv \
		-box_width 32 -bit_depth 24 \
		-end
	open 7_3_object0_INP_flag_orbits_draw.bmp



geo_10_3_c:
	$(ORBITER) -v 10 \
		-draw_incidence_structure_description \
			-width 60 -width_10 6 -end \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries 10_3.inc 10 10 30 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form \
				-classification_prefix 10_3 \
				-label 10_3 \
				-save_ago \
				-save_transversal \
			-end \
			-report \
				-prefix 10_3 \
				-export_flag_orbits \
				-show_incidence_matrices \
				-export_group_GAP \
			-end \
		-end
	pdflatex 10_3_classification.tex
	open 10_3_classification.pdf
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file 10_3_object7_TDA_flag_orbits.csv \
		-secondary_input_csv_file 10_3_object7_TDA.csv \
		-box_width 16 -bit_depth 24 \
		-end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file 10_3_object7_INP_flag_orbits.csv \
		-secondary_input_csv_file 10_3_object7_INP.csv \
		-box_width 16 -bit_depth 24 \
		-end





geo_10_3_c_lex_least:
	$(ORBITER) -v 10 \
		-draw_incidence_structure_description \
			-width 60 -width_10 6 -end \
		-define Test_lines -set -loop 4 11 1 -end \
		-define Geo -geometry_builder \
			-V 10 -B 10 -TDO 3 -fuse 1 \
			-fname_GEO 10_3 \
			-test Test_lines \
		-end \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries 10_3.inc 10 10 30 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form \
				-classification_prefix 10_3 \
				-label 10_3 \
				-save_ago \
				-save_transversal \
			-end \
			-report \
				-prefix 10_3 \
				-export_flag_orbits \
				-show_incidence_matrices \
				-export_group_GAP \
				-show_TDO \
				-show_TDA \
				-lex_least Geo \
			-end \
		-end
	pdflatex 10_3_classification.tex
	open 10_3_classification.pdf
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file 10_3_object7_TDA_flag_orbits.csv \
		-secondary_input_csv_file 10_3_object7_TDA.csv \
		-box_width 16 -bit_depth 24 \
		-end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file 10_3_object7_INP_flag_orbits.csv \
		-secondary_input_csv_file 10_3_object7_INP.csv \
		-box_width 16 -bit_depth 24 \
		-end

#10_3_object7_TDA_flag_orbits.csv

#0 1 2 10 13 14 20 25 26 31 33 35 41 44 46 52 53 56 62 67 68 74 77 79 85 88 89 



geo_14_3_c:
	$(ORBITER) -v 2 \
		-draw_incidence_structure_description \
			-width 60 -width_10 6 -end \
		-define Test_lines -set -loop 4 15 1 -end \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries 14_3.inc 14 14 42 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form \
				-classification_prefix 14_3 \
				-label 14_3 \
				-save_ago \
				-save_transversal \
			-end \
		-end


geo_15_3_c:
	$(ORBITER) -v 2 \
		-draw_incidence_structure_description \
			-width 50 -width_10 5 -end \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries 15_3.inc 15 15 45 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form \
			-classification_prefix 10_3 \
			-label 10_3 \
			-save_ago \
		-end
	pdflatex 15_3_classification.tex
	open 15_3_classification.pdf

TFC_24_3_c:
	echo $(FILE_24_3_TFC_INC) >24_3_TFC.inc
	$(ORBITER) -v 6 \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries 24_3_TFC.inc 24 24 72 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form \
			-classification_prefix 24_3_TFC \
			-label 24_3_TFC \
			-save_ago \
			-end \
			-report \
				-prefix 24_3_TFC \
				-export_flag_orbits \
				-show_TDO \
				-show_TDA \
				-show_incidence_matrices \
			-end \
		-end
	pdflatex 24_3_TFC_classification.tex
	open 24_3_TFC_classification.pdf
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file 24_3_TFC_object2_TDA_flag_orbits.csv \
		-secondary_input_csv_file 24_3_TFC_object2_TDA.csv \
		-box_width 40 -bit_depth 24 \
		-end
	open 24_3_TFC_object2_TDA_flag_orbits_draw.bmp


geo_40_4_g4_c:
	$(ORBITER) -v 2 \
		-draw_incidence_structure_description \
			-width 50 -width_10 5 -end \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries \
				40_4_g4.inc 40 40 160 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form \
				-classification_prefix 40_4_g4 \
				-label 40_4_g4 \
				-save_ago \
			-end \
			-report \
				-prefix 40_4_g4 \
				-export_flag_orbits \
				-show_TDO \
				-show_TDA \
				-show_incidence_matrices \
			-end \
		-end
	$(ORBITER) -v 2 \
		-loop L 0 2 1 \
			-draw_matrix \
			-input_csv_file 40_4_g4_object%L_TDA_flag_orbits.csv \
			-secondary_input_csv_file 40_4_g4_object%L_TDA.csv \
			-box_width 32 -bit_depth 24 \
			-end \
			-system "convert \
				40_4_g4_object%L_TDA_flag_orbits_draw.bmp \
				40_4_g4_object%L_TDA_flag_orbits_draw.png" \
		-end_loop L
	pdflatex 40_4_g4_classification.tex
	open 40_4_g4_classification.pdf

geo_17_3_g4_c:
	$(ORBITER) -v 2 \
		-draw_incidence_structure_description \
			-width 50 -width_10 5 -end \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries 17_3_g4.inc 17 17 51 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form \
				-classification_prefix 17_3_g4 \
				-label 17_3_g4 \
				-save_ago \
			-end \
			-report \
				-prefix 17_3_g4 \
				-export_flag_orbits \
				-show_TDO \
				-show_TDA \
				-show_incidence_matrices \
			-end \
		-end
	pdflatex 17_3_g4_classification.tex
	open 17_3_g4_classification.pdf


AG_2_3_c: AG_2_3.inc
	$(ORBITER) -v 2 \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries \
			AG_2_3.inc 9 12 36 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form \
				-classification_prefix AG_2_3 \
				-label AG_2_3 \
				-save_ago \
				-max_TDO_depth 10 \
			-end \
			-report \
				-prefix AG_2_3 \
				-export_flag_orbits \
				-show_TDO \
				-show_TDA \
				-show_incidence_matrices \
			-end \
		-end
	pdflatex AG_2_3_classification.tex
	open AG_2_3_classification.pdf
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file AG_2_3_object0_INP_flag_orbits.csv \
		-secondary_input_csv_file AG_2_3_object0_INP.csv \
		-box_width 40 -bit_depth 24 \
		-end
	open AG_2_3_object0_INP_flag_orbits_draw.bmp




geo_LSQ6_c: LSQ6.inc
	$(ORBITER) -v 3 \
		-draw_incidence_structure_description \
			-width 60 -width_10 6 -end \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries \
				LSQ6.inc 18 39 126 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form \
				-classification_prefix LSQ6 \
				-label LSQ6 \
				-save_ago \
				-save_transversal \
			-end \
			-report \
				-prefix LSQ6 \
				-export_flag_orbits \
				-show_incidence_matrices \
				-export_group_GAP \
			-end \
		-end
	pdflatex LSQ6_classification.tex
	#open LSQ6_classification.pdf
	$(ORBITER) -v 2 \
		-loop L 0 12 1 \
			-draw_matrix \
			-input_csv_file LSQ6_object%L_TDA_flag_orbits.csv \
			-secondary_input_csv_file LSQ6_object%L_TDA.csv \
			-box_width 32 -bit_depth 24 \
			-end \
			-system "convert \
				LSQ6_object%L_TDA_flag_orbits_draw.bmp \
				LSQ6_object%L_TDA_flag_orbits_draw.png" \
		-end_loop L
	$(ORBITER) -v 2 \
		-loop L 0 12 1 \
			-draw_matrix \
			-input_csv_file LSQ6_object%L_INP_flag_orbits.csv \
			-secondary_input_csv_file LSQ6_object%L_INP.csv \
			-box_width 32 -bit_depth 24 \
			-end \
		-end_loop L













###############################################################################
# Section 15.4: Objects from Design Theory


SECTION_OBJECTS_FROM_DESIGN_THEORY:


test_15_4:
	make LS_AG_2_3_solutions_classify
	make design_27c
	make design_PG_2_3_canonical
	make wreath_product_designs_n8_k6_c
	make wreath_product_designs_n4_k2_c



LS_AG_2_3_solutions_classify:
	$(ORBITER) -v 2 \
		-draw_incidence_structure_description \
			-width 20 -width_10 2 -end \
		-define C -combinatorial_objects \
			-file_of_designs \
			solutions.csv 9 84 3 12 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form \
				-save_ago \
				-save_transversal \
				-classification_prefix LS_AG_2_3 \
				-label LS_AG_2_3 \
				-max_TDO_depth 10 \
			-end \
			-report \
				-prefix LS_AG_2_3 \
				-export_flag_orbits \
				-show_TDO \
			-end \
		-end
	pdflatex LS_AG_2_3_classification.tex
	open LS_AG_2_3_classification.pdf
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file LS_AG_2_3_object0_INP_flag_orbits.csv \
		-secondary_input_csv_file LS_AG_2_3_object0_INP.csv \
		-box_width 12 -bit_depth 24 \
		-end
	open LS_AG_2_3_object0_INP_flag_orbits_draw.bmp
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file LS_AG_2_3_object1_INP_flag_orbits.csv \
		-secondary_input_csv_file LS_AG_2_3_object1_INP.csv \
		-box_width 12 -bit_depth 24 \
		-end
	open LS_AG_2_3_object1_INP_flag_orbits_draw.bmp





design_27c:
	$(ORBITER) -v 4 \
		-define C -combinatorial_objects \
			-set_of_points "2,56,30,112,253,90,440,508" \
		-end \
		-define F -finite_field -q 27 \
			-override_polynomial 46 \
		-end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form_PG P \
			-classification_prefix design \
			-end \
			-report \
		-end
	pdflatex design_classification.tex
	open design_classification.pdf



design_PG_2_3_canonical: 
	$(ORBITER) -v 3 \
		-define F -finite_field -q 3 -end \
		-define D -design -field F -family PG_2_q -end \
		-with D -do \
			-design_activity \
				-export_inc \
			-end \
		-end
	$(ORBITER) -v 3 \
		-draw_incidence_structure_description \
			-width 60 -width_10 6 -end \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries \
				PG_2_3_inc.txt 13 13 52 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form \
				-classification_prefix PG_2_3 \
				-label PG_2_3 \
				-save_ago \
				-save_transversal \
			-end \
			-report \
				-prefix PG_2_3 \
				-export_flag_orbits \
				-show_incidence_matrices \
				-export_group_GAP \
			-end \
		-end
	pdflatex PG_2_3_classification.tex
	open PG_2_3_classification.pdf
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file PG_2_3_object0_TDA_flag_orbits.csv \
		-secondary_input_csv_file PG_2_3_object0_TDA.csv \
		-box_width 32 -bit_depth 24 \
		-end
	open PG_2_3_object0_TDA_flag_orbits_draw.bmp
	


wreath_product_designs_n4_k2_c: wreath_product_designs_n4_k2_inc.txt
	$(ORBITER) -v 10 \
		-draw_incidence_structure_description \
			-width 60 -width_10 6 -end \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries \
			wreath_product_designs_n4_k2_inc.txt \
			8 12 24 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form \
				-classification_prefix wreath_4_2 \
				-label wreath_4_2 \
				-save_ago \
				-save_transversal \
			-end \
			-report \
				-prefix wreath_4_2 \
				-export_flag_orbits \
				-show_incidence_matrices \
				-export_group_GAP \
			-end \
		-end
	pdflatex wreath_4_2_classification.tex
	open wreath_4_2_classification.pdf


wreath_product_designs_n8_k6_c: wreath_product_designs_n8_k6_inc.txt
	$(ORBITER) -v 10 \
		-draw_incidence_structure_description \
			-width 60 -width_10 6 -end \
		-define C -combinatorial_objects \
			-file_of_incidence_geometries \
			wreath_product_designs_n8_k6_inc.txt \
			16 3920 23520 \
		-end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form \
				-classification_prefix wreath_8_6 \
				-label wreath_8_6 \
				-save_ago \
				-save_transversal \
			-end \
			-report \
				-prefix wreath_8_6 \
				-export_flag_orbits \
				-export_group_GAP \
			-end \
		-end
	pdflatex wreath_8_6_classification.tex
	open wreath_8_6_classification.pdf






###############################################################################
# Section 15.5: Linear Codes


SECTION_CANONICAL_FORMS_OF_LINEAR_CODES:


test_15_5:
	make code_3_2_aut
	make code_6_3_aut
	make RM_3_1_group
	make RM_3_1_group_and_diagram
	make RM_4_1_group
	make RS_6_4_7_group
	make GV_n15_k6_d5_group
	make code_n15_k6_d6_a_group
	make code_n15_k6_d6_b_group



code_3_2_aut:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define genma -vector -field F -format 2 \
			-dense $(CODE_N3_K2_Q2_GENMA) \
		-end \
		-define P -projective_space -n 1 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-canonical_form_of_code \
				"3_2" genma -save_ago -label "3_2" \
				-classification_prefix "3_2" \
			-end \
		-end
	pdflatex 3_2_classification.tex
	open 3_2_classification.pdf
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file 3_2_object0_TDA_flag_orbits.csv \
		-secondary_input_csv_file 3_2_object0_TDA.csv \
		-box_width 16 -bit_depth 24 \
		-end
	open 3_2_object0_TDA_flag_orbits_draw.bmp




code_6_3_aut:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define genma -vector -field F -format 3 \
			-compact $(CODE_N6_K3_Q2_GENMA) \
		-end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-canonical_form_of_code \
				"6_3" genma -save_ago -label "6_3" \
				-classification_prefix "6_3" \
			-end \
		-end
	pdflatex 6_3_classification.tex
	open 6_3_classification.pdf
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file 6_3_object0_TDA_flag_orbits.csv \
		-secondary_input_csv_file 6_3_object0_TDA.csv \
		-box_width 16 -bit_depth 24 \
		-end
	open 6_3_object0_TDA_flag_orbits_draw.bmp

# group of order 24


RM_3_1_group:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define genma -vector -field F -format 4 \
			-compact $(CODE_RM_3_1_GENMA) \
		-end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-canonical_form_of_code \
				"RM_3_1" genma -save_ago -label "RM_3_1" \
				-classification_prefix "RM_3_1" \
			-end \
		-end
	pdflatex RM_3_1_classification.tex
	open RM_3_1_classification.pdf

# group order 1344
#RM_3_1_object0_INP_flag_orbits.csv

RM_3_1_group_and_diagram:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define genma -vector -field F -format 4 \
			-compact $(CODE_RM_3_1_GENMA) \
		-end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-canonical_form_of_code \
				"RM_3_1" genma -save_ago -label "RM_3_1" \
				-classification_prefix "RM_3_1" \
			-end \
		-end
	pdflatex RM_3_1_classification.tex
	open RM_3_1_classification.pdf
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file RM_3_1_object0_INP_flag_orbits.csv \
		-secondary_input_csv_file RM_3_1_object0_INP.csv \
		-box_width 16 -bit_depth 24 \
		-end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file RM_3_1_object0_TDA_flag_orbits.csv \
		-secondary_input_csv_file RM_3_1_object0_TDA.csv \
		-box_width 16 -bit_depth 24 \
		-end
	open RM_3_1_object0_INP_flag_orbits_draw.bmp
	open RM_3_1_object0_TDA_flag_orbits_draw.bmp



RM_4_1_group:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define genma -vector -field F -format 5 \
			-compact $(CODE_RM_4_1_GENMA) \
		-end \
		-define P -projective_space -n 4 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-canonical_form_of_code \
				"RM_4_1" genma -save_ago -label "RM_4_1" \
				-classification_prefix "RM_4_1" \
			-end \
		-end
	pdflatex RM_4_1_classification.tex
	open RM_4_1_classification.pdf
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file RM_4_1_object0_INP_flag_orbits.csv \
		-secondary_input_csv_file RM_4_1_object0_INP.csv \
		-box_width 16 -bit_depth 24 \
		-end
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file RM_4_1_object0_TDA_flag_orbits.csv \
		-secondary_input_csv_file RM_4_1_object0_TDA.csv \
		-box_width 16 -bit_depth 24 \
		-end
	open RM_4_1_object0_INP_flag_orbits_draw.bmp
	open RM_4_1_object0_TDA_flag_orbits_draw.bmp


# group order 322560 = 24*30*28*16


RS_6_4_7_group:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 7 -end \
		-define genma -vector -field F -format 4 \
			-compact $(CODE_RS_6_4_7) \
		-end \
		-define P -projective_space -n 3 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-canonical_form_of_code \
				"RS_6" genma -save_ago -label "RS_6" \
				-classification_prefix "RS_6" \
			-end \
		-end


GV_n15_k6_d5_group:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define genma -vector -field F -format 6 \
			-compact $(CODE_GV_N15_K6) \
		-end \
		-define P -projective_space -n 5 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-canonical_form_of_code \
				"GV_n15_k6_d5" genma -save_ago -label "GV_n15_k6_d5" \
				-classification_prefix "GV_n15_k6_d5" \
			-end \
		-end
	pdflatex GV_n15_k6_d5_classification.tex
	open GV_n15_k6_d5_classification.pdf

#ago=12



code_n15_k6_d6_a_group:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define genma -vector -field F -format 6 \
			-compact $(CODE_15_6_6_A) \
		-end \
		-define P -projective_space -n 5 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-canonical_form_of_code \
				"n15_k6_d6_a" genma -save_ago -label "n15_k6_d6_a" \
				-classification_prefix "n15_k6_d6_a" \
			-end \
		-end
	pdflatex n15_k6_d6_a_classification.tex
	open n15_k6_d6_a_classification.pdf


code_n15_k6_d6_b_group:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 2 -end \
		-define genma -vector -field F -format 6 \
			-compact $(CODE_15_6_6_B) \
		-end \
		-define P -projective_space -n 5 -field F -v 0 -end \
		-with P -do \
		-projective_space_activity \
			-canonical_form_of_code \
				"n15_k6_d6_b" genma -save_ago -label "n15_k6_d6_b" \
				-classification_prefix "n15_k6_d6_b" \
			-end \
		-end
	pdflatex n15_k6_d6_b_classification.tex
	open n15_k6_d6_b_classification.pdf




###############################################################################
# Section 15.6: General Codes


SECTION_CANONICAL_FORMS_OF_GENERAL_CODES:

test_15_6:
	make Hamming_graph_7_with_Hamming_code



Hamming_graph_7_with_Hamming_code:
	$(ORBITER) -v 2 \
		-define G -graph -Hamming 7 2 \
			-subset "_Hamming_code" "\\_with\\_Hamming\\_code" \
			$(HAMMING_CODE_CODEWORDS) -end \
		-with G -do \
		-graph_theoretic_activity -export_csv -end \
		-with G -do \
		-graph_theoretic_activity -export_graphviz -end \
		-with G -do \
		-graph_theoretic_activity -save -end \
		-with G -do \
		-graph_theoretic_activity -automorphism_group -end
	pdflatex Hamming_7_2_Hamming_code_report.tex
	open Hamming_7_2_Hamming_code_report.pdf

# group of order 2688 = 16 * 168




###############################################################################
# Section 15.7: Graphs


SECTION_CANONICAL_FORMS_OF_GRAPHS:


test_15_7:
	make Cycle_13_aut
	make inversion_graph
	make Chain_232_aut
	#make JK_graph_pp16_1
	#make JK_graph_pp16_2
	#make JK_graph_pp16_9
	#make JK_graph_grid_3_3
	#make JK_graph_sts_13
	make halljanko315_gens.csv
	make HJ_group_and_orbits
	make HJ_orbital_graph_3
	make PGO_5_2_graph_group


Cycle_13_aut:
	$(ORBITER) -v 2 \
		-define Gamma -graph -cycle 13 -end \
		-with Gamma -do \
			-graph_theoretic_activity -automorphism_group \
		-end \


inversion_graph:
	$(ORBITER) -v 6 \
		-define G -graph \
			-inversion_graph "1,0,2,3" \
		-end \
		-with G -do \
			-graph_theoretic_activity -properties \
		-end \
		-with G -do \
			-graph_theoretic_activity -automorphism_group \
		-end



Chain_232_aut:
	$(ORBITER) -v 2 \
		-define P1 -vector -dense 2,3,2 -end \
		-define P2 -vector -dense 2,3,2 -end \
		-define Gamma -graph \
			-chain_graph P1 P2 \
		-end \
		-with Gamma -do \
			-graph_theoretic_activity -automorphism_group \
		-end
	pdflatex chain_graph_report.tex
	open chain_graph_report.pdf



JK_graph_pp16_1:
	$(ORBITER) -v 2 \
		-define Gamma -graph -load_dimacs \
		../JUNTTILA_KASKI/benchmarks/pp/pp16-1 \
		-end \
		-with Gamma -do \
		-graph_theoretic_activity -save -end \
		-with Gamma -do \
		-graph_theoretic_activity -automorphism_group -end \

# go=34217164800
#nauty_interface_with_group::create_automorphism_group_of_graph_with_partition_and_labeling: nb_backtrack1 = 6
#nauty_interface_with_group::create_automorphism_group_of_graph_with_partition_and_labeling: nb_backtrack2 = 134

JK_graph_pp16_2:
	$(ORBITER) -v 2 \
		-define Gamma -graph -load_dimacs \
		../JUNTTILA_KASKI/benchmarks/pp/pp16-2 \
		-end \
		-with Gamma -do \
		-graph_theoretic_activity -save -end \
		-with Gamma -do \
		-graph_theoretic_activity -automorphism_group -end \

# does not finish

JK_graph_pp16_9:
	$(ORBITER) -v 2 \
		-define Gamma -graph -load_dimacs \
		../JUNTTILA_KASKI/benchmarks/pp/pp16-9 \
		-end \
		-with Gamma -do \
		-graph_theoretic_activity -save -end \
		-with Gamma -do \
		-graph_theoretic_activity -automorphism_group -end \


JK_graph_grid_3_3:
	$(ORBITER) -v 2 \
		-define Gamma -graph -load_dimacs \
		../JUNTTILA_KASKI/benchmarks/grid/grid-w-3-3 \
		-end \
		-with Gamma -do \
		-graph_theoretic_activity -save -end \
		-with Gamma -do \
		-graph_theoretic_activity -automorphism_group -end \




JK_graph_sts_13:
	$(ORBITER) -v 2 \
		-define Gamma -graph -load_dimacs \
			../JUNTTILA_KASKI/benchmarks/srg/sts-13 \
		-end \
		-with Gamma -do \
		-graph_theoretic_activity -save -end \
		-with Gamma -do \
		-graph_theoretic_activity -automorphism_group -end
	make ORBITER_PATH=$(ORBITER_PATH) -f sts-13_group.makefile sts-13



halljanko315_gens.csv:
	$(ORBITER) -v 6 \
		-define G -graph \
			-load_csv_no_border \
			halljanko315.csv \
		-end \
		-with G -do \
			-graph_theoretic_activity -automorphism_group \
		-end \
		-with G -do \
			-graph_theoretic_activity -properties \
		-end



HJ_group_and_orbits:
	$(ORBITER) -v 2 \
		-define Control -poset_classification_control \
			-W \
			-problem_label HJ_orbits \
			-depth 2 \
		-end \
		-define gens -vector -file \
			halljanko315_gens.csv -end \
		-define G -permutation_group \
			-bsgs halljanko315 "File\_halljanko315" \
			315 1209600 "0,1,2" 6 gens \
		-end \
		-define Orb -orbits -group G \
			-on_subsets 2 Control \
		-end

#ROW,REP,AGO,OL
#0,"0,1",96,12600
#1,"0,2",48,25200
#2,"0,4",768,1575
#3,"0,8",120,10080
#END

HJ_orbital_graph_3:
	$(ORBITER) -v 2 \
		-define gens -vector -file \
			halljanko315_gens.csv -end \
		-define G -permutation_group \
			-bsgs halljanko315 "File\_halljanko315" \
			315 1209600 "0,1,2" 6 gens \
		-end \
		-define Gamma -graph \
			-orbital_graph G 3 \
		-end \
		-with Gamma -do \
			-graph_theoretic_activity \
			-properties \
		-end \
		-with Gamma -do \
			-graph_theoretic_activity \
			-save \
		-end

#Group_Perm315_Orbital_3.colored_graph
#Degree type: (64^{315} )





PGO_5_2_graph_group: O_5_2_incidence_matrix.csv 
	$(ORBITER) -v 3 \
		-define Inc -vector -file O_5_2_incidence_matrix.csv -end \
		-define Gamma -graph -collinearity_graph Inc -end \
		-with Gamma -do \
		-graph_theoretic_activity \
			-automorphism_group \
		-end \
		-with Gamma -do \
		-graph_theoretic_activity \
			-eigenvalues \
		-end
	pdflatex collinearity_graph_eigenvalues.tex
	open collinearity_graph_eigenvalues.pdf




###############################################################################
# Section 15.8: Quartic Curves


SECTION_CANONICAL_FORMS_OF_QUARTIC_CURVES:


test_15_8:
	make F_17_edge
	make Edge_curve_17_nauty
	make Edge_curve_17_group



F_17_edge:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 17 -end \
		-with F -do -finite_field_activity \
			-cheat_sheet_GF -end
	pdflatex GF_17.tex
	open GF_17.pdf





Edge_curve_17_nauty: 
	$(ORBITER) -v 3 \
		-define C -combinatorial_objects \
			-file_of_points Edge_q17.txt \
		-end \
		-define F -finite_field -q 17 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with C -do \
		-combinatorial_object_activity \
			-canonical_form_PG P \
				-classification_prefix Edge_curve_q17 \
				-label Edge_curve_q17 \
				-save_ago \
				-save_transversal \
				-max_TDO_depth 10 \
				-end \
			-report \
				-prefix Edge_curve_q17 \
				-export_flag_orbits \
				-show_TDO \
				-show_TDA \
				-dont_show_incidence_matrices \
				-export_group_GAP \
			-end \
		-end
	pdflatex Edge_curve_q17_classification.tex
	open Edge_curve_q17_classification.pdf
	$(ORBITER) -v 2 -draw_matrix \
		-input_csv_file Edge_curve_q17_object0_TDA_flag_orbits.csv \
		-secondary_input_csv_file Edge_curve_q17_object0_TDA.csv \
		-box_width 4 -bit_depth 24 \
		-end
	open Edge_curve_q17_object0_TDA_flag_orbits_draw.bmp

# 9 backtrack nodes total


# aut = 24
# User time: 0.04 of a second, dt=4 tps = 100


# generators for a group of order 24:
#1,0,0,0,13,0,0,0,4, 
#1,0,0,0,0,16,0,16,0, 
#0,1,16,2,4,4,15,4,4,


Edge_curve_17_group:
	$(ORBITER) -v 3 \
		-define G -linear_group -PGL 3 17 \
		-subgroup_by_generators "Stab_Edge" "24" 3 \
			"1,0,0,0,13,0,0,0,4, \
			1,0,0,0,0,16,0,16,0, \
			0,1,16,2,4,4,15,4,4" \
		-end \
		-with G -do \
			-group_theoretic_activity \
				-print_elements_tex \
				-report_group_table \
				-report \
		-end
	pdflatex PGL_3_17_Subgroup_Stab_Edge_24_report.tex
	open PGL_3_17_Subgroup_Stab_Edge_24_report.pdf






###############################################################################
# Chapter 16 - Interfaces
###############################################################################


###############################################################################
# Section 16.1: Graphical Output

SECTION_GRAPHICAL_OUTPUT:


test_16_1:
	make PG_2_4_cyclic_incma
	make PGL_6_2_Wedge_4_2_detached_report.tex
	make schreier_tree_graphical_output
	make Queens_graph




PG_2_4_cyclic_incma:
	$(ORBITER) -v 2 \
		-define F -finite_field -q 4 -end \
		-define P -projective_space -n 2 -field F -v 0 -end \
		-with P -do -projective_space_activity \
			-cheat_sheet_for_decomposition_by_element_PG \
			1 "0,1,0, 0,0,1, 2,1,1, 0" "PG_2_4_singer" \
		-end
	$(ORBITER) -v 4 \
		-list_arguments \
		-define R -vector -repeat 1 21 -end \
		-define C -vector -repeat 1 21 -end \
		-draw_matrix \
		-input_csv_file PG_2_4_singer_incma_cyclic.csv \
		-box_width 40 -bit_depth 24 \
		-partition 3 R C \
		-end
	open PG_2_4_singer_incma_cyclic_draw.bmp




PGL_6_2_Wedge_4_2_detached_report.tex:
	$(ORBITER) -v 4 \
		-define G -linear_group -PGL 4 2 \
			-wedge_detached \
		-end \
		-with G -do \
		-group_theoretic_activity \
			-report \
		-end
	pdflatex PGL_6_2_Wedge_4_2_detached_report.tex
	open PGL_6_2_Wedge_4_2_detached_report.pdf


# ToDo -draw_tree is not working

schreier_tree_graphical_output:
	$(ORBITER) -v 4 \
		-draw_options \
			-yout 500000 \
			-radius 15 -nodes_empty \
			-line_width 0.5 -y_stretch 0.25 \
			-embedded \
		-end \
		-define G -linear_group -PGL 4 2 -end \
		-define Orb -orbits -group G \
			-on_polynomials 3 \
		-end \
		-with Orb -do -orbits_activity \
			-export_something "orbit" 6 \
		-end
		-with Orb -do -orbits_activity \
			-draw_tree 6 \
		-end
	
	#pdflatex poly_orbits_d3_n3_q2_orbit_6_tree.tex
	#open poly_orbits_d3_n3_q2_orbit_6_tree.pdf
	#pdflatex poly_orbits_d3_n3_q2.tex
	#open poly_orbits_d3_n3_q2.pdf



Queens_graph:
	$(ORBITER) -v 2 \
		-define G -graph -non_attacking_queens_graph 8 -end \
		-with G -do \
		-graph_theoretic_activity -export_csv -end \
		-with G -do \
		-graph_theoretic_activity -export_graphviz -end \
		-with G -do \
		-graph_theoretic_activity -save -end \
		-with G -do \
		-graph_theoretic_activity -automorphism_group -end \
		-with G -do \
		-graph_theoretic_activity -find_cliques \
			-target_size 8 -output_file 8queens -end \
		-end 




###############################################################################
# Section 16.2: The Povray Interface


SECTION_POVRAY:

test_16_2:
	make cube
	make math261_test
	make plane1
	make plane2
	make analytic_geo_1
	make analytic_geo_1_video
	make monkey
	make Eckardt
	make Eckardt_deform
	make Eckardt_deform_2
	make Clebsch
	make endrass8


cube:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 30 \
		-output_mask cube_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 0.5 \
		-default_angle 75 \
		-clipping_radius 2.7 \
		-end \
		-scene_objects \
			-obj_file cube_centered.obj \
			-edge "0, 1" \
			-edge "0, 2" \
			-edge "0, 4" \
			-edge "1, 3" \
			-edge "1, 5" \
			-edge "2, 3" \
			-edge "2, 6" \
			-edge "3, 7" \
			-edge "4, 5" \
			-edge "4, 6" \
			-edge "5, 7" \
			-edge "6, 7" \
			-group_of_things_as_interval 0 8 \
			-spheres 0 0.3 $(POLISHED_CHROME_WHITE) \
			-group_of_things_as_interval 0 6 \
			-prisms 1 0.05 $(YELLOW_TRANSPARENT) \
			-group_of_things_as_interval 0 12 \
			-cylinders 2 0.15 $(COLOR_RED) \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv cube_0_*.pov POV
	mv makefile_animation POV


math261_test:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 30 \
		-output_mask math261_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 0.1 \
		-default_angle 75 \
		-clipping_radius 2.7 \
		-end \
		-scene_objects \
			-point "0,0,0" \
			-point "5,0,0" \
			-point "0,5,0" \
			-point "0,0,5" \
			-point "1,2,3" \
			-point "4,5,6" \
			-point "5,7,9" \
			-edge "0,1" \
			-edge "0,2" \
			-edge "0,3" \
			-edge "0,4" \
			-edge "0,5" \
			-edge "4,6" \
			-edge "5,6" \
			-face "0,4,6,5" \
			-group_of_things_as_interval 0 7 \
			-spheres 0 0.1 $(POLISHED_CHROME_WHITE) \
			-group_of_things_as_interval 0 7 \
			-cylinders 1 0.05 $(COLOR_RED) \
			-prisms 2 0.05 $(YELLOW_TRANSPARENT) \
			-group_of_things_as_interval 0 1 \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv math261_0_*.pov POV
	mv makefile_animation POV



plane1:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 30 \
		-output_mask plane1_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 0.40 \
		-default_angle 75 \
		-clipping_radius 5 -omit_bottom_plane  \
		-camera 0 "0,0,1" "5,5,3" "0,0,0"  \
		-rotate_about_z_axis \
		-boundary_box \
		-end \
		-scene_objects \
			-line_through_two_points_recentered_from_csv_file coordinate_grid.csv \
			-plane_by_dual_coordinates "0,0,1,0" \
			-plane_by_dual_coordinates "0,1,0,0" \
			-plane_by_dual_coordinates "1,0,0,0" \
			-point "-2.25,0,0" \
			-point "0,-1.8,0" \
			-point "0,0,9" \
			-face "0,1,2,0" \
			-group_of_things "0" \
			-group_of_things "1" \
			-group_of_things "2" \
			-lines 0 0.15 $(COLOR_RED_SHINY) \
			-lines 1 0.15 $(COLOR_GREEN_SHINY) \
			-lines 2 0.15 $(COLOR_BLUE_SHINY) \
			-group_of_things_as_interval 3 39 \
			-lines 3 0.05 $(COLOR_BLACK_SHINY) \
			-group_of_things "0" \
			-planes 0 $(COLOR_BLUE_SEE_THROUGH) \
			-group_of_things "1" \
			-group_of_things "2" \
			-group_of_things "0" \
			-prisms 0 0.05 $(COLOR_YELLOW_THICK) \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv plane1_0_*.pov POV
	mv makefile_animation POV



plane2:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 30 \
		-output_mask plane2_%d_%03d.pov \
		-video_options -W 2560 -H 1920 \
		-global_picture_scale 0.40 \
		-default_angle 75 \
		-clipping_radius 5 -omit_bottom_plane  \
			-camera 0 "0,0,1" "6,6,2" "0,0,0"  \
			-rotate_about_z_axis \
			-boundary_box \
		-end \
		-scene_objects \
			-line_through_two_points_recentered_from_csv_file coordinate_grid.csv \
			-plane_by_dual_coordinates "0,0,1,0" \
			-plane_by_dual_coordinates "0,1,0,0" \
			-plane_by_dual_coordinates "1,0,0,0" \
			-plane_by_dual_coordinates "4,5,-1,9" \
			-group_of_things "0" \
			-group_of_things "1" \
			-group_of_things "2" \
			-group_of_things_as_interval 3 39 \
			-lines 0 0.15 $(COLOR_RED_SHINY) \
			-lines 1 0.15 $(COLOR_GREEN_SHINY) \
			-lines 2 0.15 $(COLOR_BLUE_SHINY) \
			-lines 3 0.05 $(COLOR_BLACK_SHINY) \
			-group_of_things "0" \
			-planes 4 $(COLOR_BLUE_SEE_THROUGH) \
			-group_of_things "3" \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv plane2_0_*.pov POV
	mv makefile_animation POV




analytic_geo_1:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 30 \
		-output_mask analytic_geo_1_%d_%03d.pov \
		-video_options -W 2560 -H 1920 \
		-global_picture_scale 0.80 \
		-default_angle 75 \
		-clipping_radius 5 -omit_bottom_plane  \
			-camera 0 "0,0,1" "6,6,2" "0,0,0"  \
			-rotate_about_z_axis \
			-boundary_box \
		-end \
		-scene_objects \
			-line_through_two_points_recentered_from_csv_file coordinate_grid.csv \
			-plane_by_dual_coordinates "0,0,1,0" \
			-plane_by_dual_coordinates "0,1,0,0" \
			-plane_by_dual_coordinates "1,0,0,0" \
			-group_of_things "0" \
			-group_of_things "1" \
			-group_of_things "2" \
			-group_of_things_as_interval 3 39 \
			-lines 0 0.05 $(COLOR_RED_SHINY) \
			-lines 1 0.05 $(COLOR_GREEN_SHINY) \
			-lines 2 0.05 $(COLOR_BLUE_SHINY) \
			-lines 3 0.04 $(COLOR_BLACK_SHINY) \
			-group_of_things "0" \
			-group_of_things "1" \
			-group_of_things "2" \
			-planes 4 $(COLOR_BLUE_SEE_THROUGH) \
			-planes 5 $(COLOR_GREEN_SEE_THROUGH) \
			-planes 6 $(COLOR_RED_SEE_THROUGH) \
			-point "0,0,0" \
			-point "1,0,0" \
			-point "1,2,0" \
			-point "1,2,3" \
			-edge "84,85" \
			-edge "85,86" \
			-edge "86,87" \
			-edge "84,87" \
			-group_of_things "84,85,86" \
			-spheres 7 0.1 $(POLISHED_CHROME_WHITE) \
			-group_of_things "87" \
			-spheres 8 0.10 $(COLOR_YELLOW_SHINY) \
			-group_of_things "0,1,2" \
			-cylinders 9 0.075 $(POLISHED_CHROME_WHITE) \
			-group_of_things "3" \
			-cylinders 10 0.075 $(COLOR_YELLOW_SHINY) \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv analytic_geo_1_0_*.pov POV
	mv makefile_animation POV


analytic_geo_1_video:
	- rm -r FRAMES
	- mkdir FRAMES
	- rm analytic_geo_1.mp4
	$(ORBITER) \
		-prepare_frames \
			-i 0 30 PNG/ANALYTIC_GEO_1/analytic_geo_1_0_%03d.png \
			-output_starts_at 0 \
			-o FRAMES/frame%04d.png \
		-end
	ffmpeg -r 5 -f image2 -i FRAMES/frame%04d.png \
		-f mp4 -q:v 0 -vcodec mpeg4 analytic_geo_1.mp4

monkey:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 30 \
		-output_mask monkey_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 0.8 \
		-default_angle 75 \
		-clipping_radius 0.8 \
		-camera 0 "0,0,1" "1,1,0.5" "0,0,0" \
		-rotate_about_z_axis \
		-end \
		-scene_objects \
			-cubic_lex $(MONKEY_SADDLE_CUBIC) \
			-plane_by_dual_coordinates "0,0,1,0" \
			-group_of_things "0" \
			-group_of_things "0" \
			-cubics 0 $(COLOR_GOLD) \
			-planes 1 $(COLOR_BLUE) \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv monkey_0_*.pov POV
	mv makefile_animation POV




Eckardt:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 30 \
		-output_mask Eckardt_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 0.9 \
		-default_angle 75 \
		-clipping_radius 2.4 \
		-camera 0 "1,1,1" "-3,1,3" "0.12,0.12,0.12" \
		-end \
		-scene_objects \
			-Hilbert_Cohn_Vossen_surface \
			-group_of_things "0" \
			-cubics 0 $(SURFACE_COLOR) \
			-group_of_things_as_interval 0 6 \
			-group_of_things_as_interval 6 6 \
			-group_of_things_as_interval_with_exceptions 12 15 \
				"14,19,23" \
			-lines 1 0.02 $(COLOR_RED_SHINY) \
			-lines 2 0.02 $(COLOR_BLUE_SHINY) \
			-lines 3 0.02 $(COLOR_YELLOW_SHINY) \
			-label 0 "a1" \
			-label 2 "a2" \
			-label 4 "a3" \
			-label 6 "a4" \
			-label 8 "a5" \
			-label 10 "a6" \
			-label 12 "b1" \
			-label 14 "b2" \
			-label 16 "b3" \
			-label 18 "b4" \
			-label 20 "b5" \
			-label 22 "b6" \
			-label 24 "c12" \
			-label 26 "c13" \
			-label 30 "c15" \
			-label 32 "c16" \
			-label 34 "c23" \
			-label 36 "c24" \
			-label 40 "c26" \
			-label 42 "c34" \
			-label 44 "c35" \
			-label 48 "c45" \
			-label 50 "c46" \
			-label 52 "c56" \
			-group_of_things_as_interval 0 6 \
			-texts 4 0.2 0.15 $(COLOR_BLACK_NO_SHADOW) \
			-group_of_things_as_interval 6 6 \
			-texts 5 0.2 0.15 $(COLOR_BLACK_NO_SHADOW) \
			-group_of_things_as_interval 12 12 \
			-texts 6 0.2 0.15 $(COLOR_BLACK_NO_SHADOW) \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv Eckardt_0_*.pov POV
	mv makefile_animation POV


#"-3,2.333,4"  * 1.5 = "-4.5,3.5,6"
#M := Matrix([[-4.5, 3.5, 6], [1, 1, 1]])
#NullSpace(M)
#=0.186080731891197,-0.781539073943026,0.595458342051830
#		-rotate_about_custom_axis "0.186080731891197,-0.781539073943026,0.595458342051830" \
#-W 1024 -H 768 
#-W 2560 -H 1920 
#-W 4096 -H 3072 




Eckardt_deform:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 93 \
		-output_mask Eckardt_deform_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 0.9 \
		-default_angle 75 \
		-clipping_radius 2.4 \
		-camera 0 "1,1,1" "-3,1,3" "0.12,0.12,0.12" \
		-end \
		-scene_objects \
			-Hilbert_Cohn_Vossen_surface \
			-group_of_things "0" \
			-deformation_of_cubic_lex 93 1.107148718 1.570796327 0 \
				$(ECKARDT_CUBIC_DEFORM1_LEX) \
				$(ECKARDT_CUBIC_DEFORM2_LEX) \
			-group_of_things_as_interval 0 93 \
			-group_is_animated 1 \
			-cubics 1 $(SURFACE_COLOR_SEETHROUGH) \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv Eckardt_deform_0_*.pov POV
	mv makefile_animation POV





Eckardt_deform_2:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 30 \
		-output_mask Eckardt_deform_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 0.9 \
		-default_angle 75 \
		-clipping_radius 2.4 \
		-camera 0 "1,1,1" "-3,1,3" "0.12,0.12,0.12" \
		-end \
		-scene_objects \
			-Hilbert_Cohn_Vossen_surface \
			-group_of_things "0" \
			-deformation_of_cubic_lex 93 1.107148718 1.570796327 0 \
				$(ECKARDT_CUBIC_DEFORM1_LEX) \
				$(ECKARDT_CUBIC_DEFORM2_LEX) \
			--group_of_things_as_interval 0 93 \
			--group_is_animated 1 \
			-group_of_things "0" \
			-cubics 1 $(SURFACE_COLOR_SEETHROUGH) \
			-group_of_things "24" \
			-cubics 2 $(COLOR_RED) \
			-group_of_things "70" \
			-cubics 3 $(COLOR_BLUE) \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv Eckardt_deform_0_*.pov POV
	mv makefile_animation POV



Clebsch:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 30 \
		-output_mask Clebsch_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 0.9 \
		-default_angle 80 \
		-clipping_radius 2.4 \
		-camera 0 "1,1,1" "-4.5,3.5,6" "0,0,0" \
		-end \
		-scene_objects \
			-Clebsch_surface \
			-group_of_things "0" \
			-cubics 0 $(SURFACE_COLOR) \
			-group_of_things_as_interval 0 6 \
			-group_of_things_as_interval 6 6 \
			-group_of_things_as_interval 12 15 \
			-lines 1 0.02 $(COLOR_RED_SHINY) \
			-lines 2 0.02 $(COLOR_BLUE_SHINY) \
			-lines 3 0.02 $(COLOR_YELLOW_SHINY) \
			-group_of_things_as_interval 0 12 \
			-spheres 4 0.08 $(COLOR_TURQUOISE) \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv Clebsch_0_*.pov POV
	mv makefile_animation POV



endrass8:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 30 \
		-output_mask endrass_octic_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 0.75 \
		-default_angle 75 \
		-clipping_radius 3.7 \
		-no_bottom_plane \
		-camera 0 "1,1,1" "6,6,3" "0,0,0" \
		-rotate_about_111 \
		-end \
		-scene_objects \
			-line_through_two_points_recentered_from_csv_file \
				coordinate_grid.csv \
			-group_of_things "0" \
			-group_of_things "1" \
			-group_of_things "2" \
			-group_of_things_as_interval 3 39 \
			-lines 0 0.15 $(COLOR_RED_SHINY) \
			-lines 1 0.15 $(COLOR_GREEN_SHINY) \
			-lines 2 0.15 $(COLOR_BLUE_SHINY) \
			-lines 3 0.05 $(COLOR_BLACK_SHINY) \
			-octic_lex_165 $(ENDRASS_OCTIC_LEX_165) \
			-plane_by_dual_coordinates "0,0,1,0" \
			-group_of_things "0" \
			-group_of_things "0" \
			-octics 4  $(SURFACE_COLOR_SEETHROUGH) \
			-planes 5 "texture{ pigment{ color Blue transmit 0.5 } \
finish { diffuse 0.9 phong 1}}" \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv endrass_octic_0_*.pov POV
	mv makefile_animation POV





###############################################################################
# Section 16.3: Creating Animations

SECTION_ANIMATIONS:


test_16_3:
	make dode
	make dode_video
	make monkey_video
	make Eckardt_deform_video
	make Eckardt_surface
	make Kummer_surface
	make Kummer_video
	make Beauville_surface
	make Clebsch_up_create_points
	make Clebsch_surface
	make Clebsch_surface_defining_equation
	make Clebsch_surface_defining_equation_and_curves
	make F7_povray
	make F7_video
	make McKean_povray
	make McKean_video



dode:
	$(ORBITER) -v 2 \
		-povray \
		-round 0 -nb_frames_default 30 \
		-output_mask dode_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 0.50 \
		-default_angle 45 \
		-clipping_radius 5   \
		-camera 0 "1,1,1" "-2,2,4" "0,0,0"  \
		-rotate_about_111 \
		-end \
		-scene_objects \
			-dodecahedron \
			-group_of_things_as_interval 0 20 \
			-spheres 0 0.075 $(POLISHED_CHROME_WHITE) \
			-group_of_things_as_interval 0 30\
			-cylinders 1 0.05 $(COLOR_RED_SHINY) \
			-group_of_things_as_interval 0 12\
			-prisms 2 0.02 $(YELLOW_TRANSPARENT) \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv dode_0_*.pov POV
	mv makefile_animation POV


dode_video:
	- rm -r FRAMES
	- mkdir FRAMES
	- rm dode.mp4
	$(ORBITER) \
		-prepare_frames \
			-i 0 30 DODE/dode_0_%03d.png \
			-output_starts_at 0 \
			-o FRAMES/frame%04d.png \
		-end
	ffmpeg -r 5 -f image2 -i FRAMES/frame%04d.png \
		-f mp4 -q:v 0 -vcodec mpeg4 dode.mp4


monkey_video:
	- rm -r FRAMES
	- mkdir FRAMES
	- rm monkey.mp4
	$(ORBITER) \
		-prepare_frames \
			-i 0 30 monkey_0_%03d.png \
			-output_starts_at 0 \
			-o FRAMES/frame%04d.png \
		-end
	ffmpeg -r 5 -f image2 -i FRAMES/frame%04d.png \
		-f mp4 -q:v 0 -vcodec mpeg4 monkey.mp4

Eckardt_deform_video:
	- rm -r FRAMES
	- mkdir FRAMES
	- rm Eckardt_deform.mp4
	$(ORBITER) \
		-prepare_frames \
			-i 0 93 Eckardt_deform_0/Eckardt_deform_0_%03d.png \
			-output_starts_at 0 \
			-o FRAMES/frame%04d.png \
		-end
	ffmpeg -r 5 -f image2 -i FRAMES/frame%04d.png \
		-f mp4 -q:v 0 -vcodec mpeg4 Eckardt_deform.mp4


Eckardt_surface:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 30 \
		-output_mask Eckardt_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 0.9 \
		-default_angle 75 \
		-clipping_radius 2.4 \
		-camera 0 "1,1,1" "-3,1,3" "0.12,0.12,0.12" \
		-end \
		-scene_objects \
			-cubic_Goursat "6,3,-15" \
			-group_of_things "0" \
			-cubics 0 $(SURFACE_COLOR_SEETHROUGH) \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv Eckardt_0_*.pov POV
	mv makefile_animation POV



Kummer_surface:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 30 \
		-output_mask Kummer_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 0.9 \
		-default_angle 75 \
		-clipping_radius 2.4 \
		-camera 0 "1,1,1" "-3,1,3" "0.12,0.12,0.12" \
		-end \
		-scene_objects \
			-quartic_lex_35 $(KUMMER_QUARTIC_LEX_35) \
			-group_of_things "0" \
			-quartics 0 $(SURFACE_COLOR_SEETHROUGH) \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv Kummer_0_*.pov POV
	mv makefile_animation POV


# Maple:
#Kummer := expand((x0^2 + x1^2 + x2^2 + x3^2)^2 - 3*(x0^4 + x1^4 + x2^4 + x3^4))


Kummer_video:
	- rm -r FRAMES
	- mkdir FRAMES
	- rm Kummer.mp4
	$(ORBITER) \
		-prepare_frames \
			-i 0 30 KUMMER/Kummer_0_%03d.png \
			-output_starts_at 0 \
			-o FRAMES/frame%04d.png \
		-end
	ffmpeg -r 5 -f image2 -i FRAMES/frame%04d.png \
		-f mp4 -q:v 0 -vcodec mpeg4 Kummer.mp4



Beauville_surface:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 30 \
		-output_mask Beauville_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 0.3 \
		-default_angle 75 \
		-clipping_radius 2.4 \
		-camera 0 "1,1,1" "-3,1,3" "0.12,0.12,0.12" \
		-end \
		-scene_objects \
			-quintic_lex_56 $(BEAUVILLE_QUINTIC_LEX_56) \
			-group_of_things "0" \
			-quintics 0 $(SURFACE_COLOR_SEETHROUGH) \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv Beauville_0_*.pov POV
	mv makefile_animation POV







# Clebsch map up for surface created using arc lifting
# We take a circle of radius r centered at the origin in the affine real plane 
# and map it up on the surface.
# The Clebsch surface has 
# a = d = 2.618033988 = (3+sqrt(5))/2
# b = c = 1.618033988 = (1+sqrt(5))/2
# 
CLEBSCH_A=2.618033988

CLEBSCH_D=2.618033988

CLEBSCH_B=1.618033988

CLEBSCH_C=1.618033988

TWO_PI=6.283185308


# to go from the arclifting surface to the defining equation:
#Matrix(4, 4, [[-0.44721360215312733, 1.1708204000530853, 1.1708204000530853, -0.4472135957999158], [-1.1708204000530853, 0.4472136021531272, 1.4472136021531272, 0.4472135957999158], [4.2360680044124255, -4.2360680044124255, -4.2360680044124255, 0.], [1.6180340022062127, -2.6180340022062127, -1.6180340022062127, 0.]])
#-0.44721360215312733, 1.1708204000530853, 1.1708204000530853, -0.4472135957999158
#-1.1708204000530853, 0.4472136021531272, 1.4472136021531272, 0.4472135957999158
#4.2360680044124255, -4.2360680044124255, -4.2360680044124255, 0.
#1.6180340022062127, -2.6180340022062127, -1.6180340022062127, 0.


T00=-0.44721360215312733

T01=1.1708204000530853

T02=1.1708204000530853

T03=-0.4472135957999158

T10=-1.1708204000530853

T11=0.4472136021531272

T12=1.4472136021531272

T13=0.4472135957999158

T20=4.2360680044124255

T21=-4.2360680044124255

T22=-4.2360680044124255

T23=0.

T30=1.6180340022062127

T31=-2.6180340022062127

T32=-1.6180340022062127

T33=0.


CLEBSCH_CUBICS=\
				push b push b mult push d push c push m mult add mult \
				push b push c push d push d push m mult mult add mult \
				push a push d push d push m add mult mult add add \
				push a push c push m mult add mult \
				store c001 \
				push b push d mult \
				push b push 1 push m push c mult add mult \
				push d push a push 1 push m mult add mult add \
				push m push a mult add push c add \
				push c push m push a mult add \
				mult mult \
				store c002 \
				push b \
				push d push c push a push m mult add mult \
				push c push a push m push 1 mult add mult add mult \
				push a push d mult push c push 1 push m mult add mult \
				push m mult add \
				push a push c push m mult add mult \
				store c011 \
				push b push b push c mult mult \
				push 1 push d push m mult add mult \
				push a push b mult push c push d push d push m mult mult add mult \
				push m mult add \
				push a push d mult push c push d push m mult add mult add \
				push a push c push m mult add mult \
				store c012 \
				push m \
				push b push d push m mult add push c mult \
				push d push b push 1 push m mult add mult push m mult add push a mult \
				push b push c mult push d push 1 push m mult add mult add mult \
				push b push d push m mult add mult \
				store d001 \
				push m \
				push d push c push m mult add push a push a mult mult \
				push c push c mult push d push m mult add push a mult add \
				push m push b push c mult mult push c push 1 push m mult add mult add mult \
				push b push d push m mult add mult \
				store d011 \
				push m \
				push c push d mult push d push m mult add push a push a mult mult \
				push c push c mult push d push m mult add push a push b push m mult mult mult add \
				push b push d push c push m mult add mult push c push m mult mult add \
				push b push d push m mult add mult mult \
				store d012 \
				push d push 1 push m mult add push a mult push m push b mult push 1 add push c mult add \
				push b add push m push d mult add \
				push a push c mult mult \
				push b push d push m mult add mult \
				store d112 \
				push m \
				push b push d push m mult add push c mult push d push b push 1 push m mult add mult \
				push m mult add push a mult push b push c mult push d push 1 push m mult add mult add \
				push b push d push m mult add mult mult \
				store m002 \
				push m \
				push d push c push m mult add push a push a mult mult \
				push c push c mult push d push m mult add push a mult add \
				push b push c push m mult mult push c push 1 push m mult add mult add \
				push b push d push m mult add mult mult \
				store m012 \
				push m\
				push c push d mult push d push m mult add push a push a mult mult \
				push m push c push c mult push d push m mult add push a push b mult mult mult add \
				push m push b push d push c push m mult add push c mult mult mult add \
				push b push d push m mult add mult mult \
				store m022 \
				push d push 1 push m mult add push a mult \
				push m push b mult push 1 add push c mult add \
				push b add push m push d mult add \
				push a push c mult mult \
				push b push d push m mult add mult \
				store m122 \
				push m push a mult push c add push d mult push c push a push 1 push m mult add mult add \
				push b mult \
				push m push a push d mult mult push c push 1 push m mult add mult add \
				push b push d push m mult add mult \
				store n002 \
				push m \
				push c push d push m mult add push b mult push m push d push c push 1 push m mult add mult mult add \
				push a mult \
				push b push c mult push d push 1 push m mult add mult add mult \
				push a push b push c push m mult push d push m mult add add add mult \
				store n012 \
				push c push d push m mult add push b mult \
				push m push d push c push 1 push m mult add mult mult add \
				push a mult \
				push b push c mult push d push 1 push m mult add mult add \
				push a push d mult push m push b push c mult mult add mult \
				store n022 \
				push m \
				push c push d push m mult add push b mult \
				push m push d push c push 1 push m mult add mult mult add \
				push a mult \
				push b push c mult push d push 1 push m mult add mult add \
				push m push a mult push c add mult mult \
				store n112 \
				push m \
				push c push d push m mult add push b mult \
				push m push d push c push 1 push m mult add mult mult add \
				push a mult \
				push b push c mult push d push 1 push m mult add mult add \
				push a push d mult push m push b push c mult mult add mult mult \
				store n122 

Clebsch_up_create_points:
	$(ORBITER) -v 2 \
		-smooth_curve "Clebsch_map_of_circle_to_defininig_eqn_r2" \
			0.07 1000 5 0 $(TWO_PI) \
		-const a $(CLEBSCH_A) b $(CLEBSCH_B) c $(CLEBSCH_C) d $(CLEBSCH_D) \
			t00 $(T00) t01 $(T01) t02 $(T02) t03 $(T03) \
			t10 $(T10) t11 $(T11) t12 $(T12) t13 $(T13) \
			t20 $(T20) t21 $(T21) t22 $(T22) t23 $(T23) \
			t30 $(T30) t31 $(T31) t32 $(T32) t33 $(T33) \
			r 2 one 1 m -1 \
		-const_end \
		-var t \
			c001 c002 c011 c012 \
			d001 d011 d012 d112 \
			m002 m012 m022 m122 \
			n002 n012 n112 n022 n122 \
			y0 y1 y2 \
			y001 y002 y011 y012 y022 y112 y122 \
			x0 x1 x2 x3 \
			-var_end \
		-code \
			push t cos push r mult store y0 \
			push t sin push r mult store y1 \
			push one store y2 \
			push y0 push y0 push y1 mult mult store y001 \
			push y0 push y0 push y2 mult mult store y002 \
			push y0 push y1 push y1 mult mult store y011 \
			push y0 push y1 push y2 mult mult store y012 \
			push y0 push y2 push y2 mult mult store y022 \
			push y1 push y1 push y2 mult mult store y112 \
			push y1 push y2 push y2 mult mult store y122 \
			$(CLEBSCH_CUBICS) \
				push c001 push y001 mult \
				push c002 push y002 mult add \
				push c011 push y011 mult add \
				push c012 push y012 mult add \
				store x0 \
				push d001 push y001 mult \
				push d011 push y011 mult add \
				push d012 push y012 mult add \
				push d112 push y112 mult add \
				store x1 \
				push m002 push y002 mult \
				push m012 push y012 mult add \
				push m022 push y022 mult add \
				push m122 push y122 mult add \
				store x2 \
				push n002 push y002 mult \
				push n012 push y012 mult add \
				push n022 push y022 mult add \
				push n112 push y112 mult add \
				push n122 push y122 mult add \
				store x3 \
				push x0 push t00 mult \
				push x1 push t10 mult add \
				push x2 push t20 mult add \
				push x3 push t30 mult add \
				return \
				push x0 push t01 mult \
				push x1 push t11 mult add \
				push x2 push t21 mult add \
				push x3 push t31 mult add \
				return \
				push x0 push t02 mult \
				push x1 push t12 mult add \
				push x2 push t22 mult add \
				push x3 push t32 mult add \
				return \
				push x0 push t03 mult \
				push x1 push t13 mult add \
				push x2 push t23 mult add \
				push x3 push t33 mult add \
				return \
		-code_end


Clebsch_surface:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 30 \
		-output_mask Clebsch_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 0.9 \
		-default_angle 75 \
		-clipping_radius 2.4 \
		-camera 0 "1,1,1" "-3,1,3" "0.12,0.12,0.12" \
		-end \
		-scene_objects \
			-cubic_orbiter "0,0,0,0,0,-4.236067972,\
0,0,4.236067972,4.236067972,17.94427188,\
-17.94427188,0,0,- 9.472135941,0,0,5.236067971,\
8.472135938,- 27.41640782" \
			-group_of_things "0" \
			-cubics 0 $(SURFACE_COLOR_SEETHROUGH) \
			-point_list_from_csv_file \
			function_Clebsch_map_of_circle_N1000_points.csv \
			-group_of_things_as_interval 0 954 \
			-spheres 1 0.07 $(COLOR_RED) \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv Clebsch_0_*.pov POV
	mv makefile_animation POV


Clebsch_surface_defining_equation:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 30 \
		-output_mask Clebsch_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 0.6 \
		-default_angle 75 \
		-clipping_radius 1.6 \
		-camera 0 "1,1,1" "-2,0,2" "0,0,0" \
		-end \
		-scene_objects \
			-cubic_orbiter "0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2" \
			-group_of_things "0" \
			-cubics 0 $(SURFACE_COLOR_SEETHROUGH) \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv Clebsch_0_*.pov POV
	mv makefile_animation POV



Clebsch_surface_defining_equation_and_curves:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 30 \
		-output_mask Clebsch_2curves_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 0.6 \
		-default_angle 75 \
		-clipping_radius 1.6 \
		-camera 0 "1,1,1" "-2,0,2" "0,0,0" \
		-end \
		-scene_objects \
			-cubic_orbiter "0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2" \
			-group_of_things "0" \
			-cubics 0 $(SURFACE_COLOR_SEETHROUGH) \
			-point_list_from_csv_file \
			function_Clebsch_map_of_circle_to_defininig_eqn_N1000_points.csv \
			-group_of_things_as_interval 0 656 \
			-spheres 1 0.07 $(COLOR_RED) \
			-point_list_from_csv_file \
			function_Clebsch_map_of_circle_to_defininig_eqn_r2_N1000_points.csv \
			-group_of_things_as_interval 656 1042 \
			-spheres 2 0.07 "texture{ pigment{ color Blue } \
finish { diffuse 0.9 phong 1}}" \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv Clebsch_2curves_0_*.pov POV
	mv makefile_animation POV

#			-point_list_from_csv_file function_Clebsch_map_of_circle_N1000_points.csv \
#			-group_of_things_as_interval 0 954 \
#			-spheres 1 0.07 "texture{ pigment{ color Red } finish { diffuse 0.9 phong 1}}" \




F7_povray:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 30 \
		-output_mask F7_15_lines_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 1.5 \
		-default_angle 80 \
		-clipping_radius 4.4 \
		-omit_bottom_plane \
		-camera 0 "1,1,1" "-4.5,3.5,6" "0,0,0" \
		-end \
		-scene_objects \
			-cubic_lex "0, 0, 6, 0, 0, -13.39014946, -3.341901346, -6.972931640, 5.827182718, 0, 0, 7.390149464, 7.390149464, 6.972931640, -1.512349728, -8.485281372, 0, 0, 0, 0" \
			-group_of_things "0" \
			-cubics 0 $(SURFACE_COLOR_SEETHROUGH) \
			-line_through_point_with_direction "0, 0, 0, 1, 0, 0" \
			-line_through_point_with_direction "0, 0, -1, 0, 1, 0" \
			-line_through_point_with_direction "0, 0, 0, 0, 0, -1" \
			-line_through_point_with_direction "1, 0, 0, 1, 1, 1" \
			-line_through_point_with_direction "-1.414213562, 0, 0, 4.146264370, 1.732050808, 1.732050808" \
			-line_through_point_with_direction "0, 1.732050808, -1, 2.414213562, -0.317837246, 2.414213562" \
			-line_through_point_with_direction "-2.133352390, 0, -1, 1.674708020, 1, 0" \
			-line_through_point_with_direction "-2.539058015, 0, 0, 2.211360755, 1, 0" \
			-line_through_point_with_direction "0, 1.148188060, 0, 0, -0.9435440612, 1" \
			-line_through_point_with_direction "-0.9711971171, 0, 0, 1.162155272, 0, 1" \
			-line_through_point_with_direction "2.096037870, 2.096037870, 0, -1.065851905, -1.065851905, 1" \
			-line_through_point_with_direction "3.921555783, 2.921555781, 0, -1.722456585, -1.722456585, 1" \
			-group_of_things_as_interval 0 12 \
			-lines 1 0.04 $(COLOR_YELLOW) \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv F7_15_lines_0_*.pov POV
	mv makefile_animation POV






F7_video:
	- rm -r FRAMES
	- mkdir FRAMES
	- rm fifteen_with_lines.mp4
	$(ORBITER) \
		-prepare_frames \
			-i 0 30 F7b/F7_15_lines_0_%03d.png \
			-output_starts_at 0 \
			-o FRAMES/frame%04d.png \
		-end
	ffmpeg -r 5 -f image2 -i FRAMES/frame%04d.png \
		-f mp4 -q:v 0 -vcodec mpeg4 fifteen_with_lines.mp4


McKean_povray:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 30 \
		-output_mask McKean_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 1.5 \
		-default_angle 80 \
		-clipping_radius 4.4 \
		-omit_bottom_plane \
		-camera 0 "1,1,1" "-4.5,3.5,6" "0,0,0" \
		-end \
		-scene_objects \
			-cubic_lex "0, 0, 1, 0, 0, -1, -2, 1, \
2, 0, 0, 1, 1,-1, -1, -1, 0, 0, 0, 0" \
			-group_of_things "0" \
			-cubics 0 $(SURFACE_COLOR_SEETHROUGH) \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv McKean_0_*.pov POV
	mv makefile_animation POV

McKean_video:
	- rm -r FRAMES
	- mkdir FRAMES
	- rm McKean.mp4
	$(ORBITER) \
		-prepare_frames \
			-i 0 30 MCKEAN/McKean_0_%03d.png \
			-output_starts_at 0 \
			-o FRAMES/frame%04d.png \
		-end
	ffmpeg -r 5 -f image2 -i FRAMES/frame%04d.png \
		-f mp4 -q:v 0 -vcodec mpeg4 McKean.mp4




###############################################################################
# Section 16.4: Continuous Function Plotter



SECTION_CONTINUOUS_FUNCTION_PLOTTER:



test_16_4:
	make lissajous
	make lissajous_plot
	make lissajous_3d
	make lissajous_3d_plot




lissajous:
	$(ORBITER) -v 2 \
		-smooth_curve "lissajous" 0.07 2000 15 0 18.85 \
		-const a 3 b 2 c 1.57 r 7 -const_end \
		-var t -var_end \
		-code \
			push t push a mult push c add sin push r mult return \
			push t push b mult sin push r mult return \
		-code_end \

#function_lissajous_N2000_points.csv

lissajous_plot:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 1 \
		-output_mask lissajous_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 0.40 \
		-default_angle 45 \
		-clipping_radius 5 \
		-omit_bottom_plane \
		-camera 0 "0,-1,0" "0,0,12" "0,0,0" \
		-rotate_about_z_axis \
		-end \
		-scene_objects \
			-line_through_two_points_recentered_from_csv_file \
			coordinate_grid.csv \
			-group_of_things "0" \
			-group_of_things "1" \
			-group_of_things "2" \
			-lines 0 0.09 "texture{ pigment{ color Yellow } }" \
			-lines 1 0.09 "texture{ pigment{ color Yellow } }" \
			-lines 2 0.09 "texture{ pigment{ color Yellow } }" \
			-group_of_things_as_interval 3 39 \
			-lines 3 0.02 "texture{ pigment{ color Black } }" \
			-point_list_from_csv_file \
			function_lissajous_N2000_points.csv \
			-group_of_things_as_interval 0 6524\
			-spheres 4 0.1 "texture{ pigment{ color Red } \
finish { diffuse 0.9 phong 1}}" \
			-plane_by_dual_coordinates "0,0,1,0" \
			-group_of_things "0" \
			-planes 5 "texture{ pigment{ color Blue*0.5 \
transmit 0.5 } }" \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv lissajous_0_*.pov POV
	mv makefile_animation POV

lissajous_3d:
	$(ORBITER) -v 2 \
		-smooth_curve "lissajous_3d" 0.07 2000 50 0 18.85 \
		-const a 3 b 2 c 1.57 r 7 -const_end \
		-var t -var_end \
		-code \
			push t push a mult push c add sin push r mult return \
			push t push b mult sin push r mult return \
			push t return \
		-code_end \

lissajous_3d_plot:
	$(ORBITER) -v 2 -povray \
		-round 0 -nb_frames_default 30 \
		-output_mask lissajous_3d_%d_%03d.pov \
		-video_options -W 1024 -H 768 \
		-global_picture_scale 0.40 \
		-default_angle 45 \
		-clipping_radius 5 \
		-omit_bottom_plane \
		-camera 0 "0,0,1" "7,7,5" "0,0,1" \
		-rotate_about_z_axis \
		-end \
		-scene_objects \
			-line_through_two_points_recentered_from_csv_file \
			coordinate_grid.csv \
			-group_of_things "0" \
			-group_of_things "1" \
			-group_of_things "2" \
			-lines 0 0.09 "texture{ pigment{ color Yellow } }" \
			-lines 1 0.09 "texture{ pigment{ color Yellow } }" \
			-lines 2 0.09 "texture{ pigment{ color Yellow } }" \
			-group_of_things_as_interval 3 39 \
			-lines 3 0.02 "texture{ pigment{ color Black } }" \
			-point_list_from_csv_file \
			function_lissajous_3d_N2000_points.csv \
			-group_of_things_as_interval 0 6538\
			-spheres 4 0.1 "texture{ pigment{ color Red } \
finish { diffuse 0.9 phong 1}}" \
			-plane_by_dual_coordinates "0,0,1,0" \
			-group_of_things "0" \
		-scene_objects_end \
		-povray_end
	- rm -rf POV
	mkdir POV
	mv lissajous_3d_0_*.pov POV
	mv makefile_animation POV




###############################################################################
# Chapter 17 - Mathematical Data in Orbiter
###############################################################################

###############################################################################
# Section 17.1: Mathematical Data in Orbiter

SECTION_MATHEMATICAL_DATA:


test_17_1:
	make make_table_of_surfaces
	make cubic_surfaces_table_q17
	make quartic_curves_table_q17
	make blt_set_table_q13


make_table_of_surfaces:
	$(ORBITER) -v 3 \
		-make_table_of_surfaces
	pdflatex surfaces_report.tex
	open surfaces_report.pdf



cubic_surfaces_table_q17: 
	$(ORBITER) -v 3 \
		-define F -finite_field -q 17 -end \
		-define P -projective_space \
			-n 3 -field F -v 0 \
		-end \
		-with P -do \
			-projective_space_activity \
				-table_of_cubic_surfaces \
		-end

quartic_curves_table_q17: 
	$(ORBITER) -v 3 \
		-define F -finite_field -q 17 -end \
		-define P -projective_space \
			-n 3 -field F -v 0 \
		-end \
		-with P -do \
			-projective_space_activity \
				-table_of_quartic_curves \
		-end


blt_set_table_q7: 
	$(ORBITER) -v 3 \
		-define F -finite_field -q 7 -end \
		-define O -orthogonal_space 0 5 F -end \
		-with O -do \
			-orthogonal_space_activity \
				-table_of_blt_sets \
		-end

blt_set_table_q9: 
	$(ORBITER) -v 3 \
		-define F -finite_field -q 9 -end \
		-define O -orthogonal_space 0 5 F -end \
		-with O -do \
			-orthogonal_space_activity \
				-table_of_blt_sets \
		-end


blt_set_table_q13: 
	$(ORBITER) -v 3 \
		-define F -finite_field -q 13 -end \
		-define O -orthogonal_space 0 5 F -end \
		-with O -do \
			-orthogonal_space_activity \
				-table_of_blt_sets \
		-end


blt_set_table: 
	$(ORBITER) -v 30 \
		-define Q -vector -dense "3,5,7,9,11,13,17,19,23,25,27,29,31" -end \
		-define NB -vector -dense "1,2,2,3,4,3,6,5,9,6,6,9,8" -end \
		-loop_over i Q \
			-define F%i -finite_field -q "%i[Q]" -end \
			-define O%i -orthogonal_space 0 5 F%i -end \
			-with O%i -do \
				-orthogonal_space_activity \
					-table_of_blt_sets \
				-end \
			-end \
		-end_loop_over i \
		-print_symbols

BLT_ORDER_Q="3,5,7,9,11,13,17,19,23,25,27,29,31,37,41,43,47,49,53,59,61,67,71,73"

BLT_NUMBER_ISO="1,2,2,3,4,3,6,5,9,6,6,9,8,7,10,6,10,8,8,9,5,6,8,5"

blt_set_export_gap: 
	$(ORBITER) -v 30 \
		-define Q -vector -dense \
			$(BLT_ORDER_Q) \
		-end \
		-define NB -vector -dense \
			$(BLT_NUMBER_ISO) \
		-end \
		-loop_over i Q \
			-define F%i -finite_field -q "%i[Q]" -end \
			-define O%i -orthogonal_space 0 5 F%i -end \
			-loop j 0 %i[NB] 1 \
				-define BLT_%i_%j -BLT_set \
					-space O%i -catalogue %j \
				-end \
				-with BLT_%i_%j -do -blt_set_activity \
					-export_gap \
				-end \
			-end_loop j \
		-end_loop_over i \
		-print_symbols


###############################################################################
# Chapter 18 - Miscellaneous
###############################################################################


###############################################################################
# Section 18.1: Miscellaneous

SECTION_MISCELLANEOUS:



test_18_1:
	make misc_select
	make misc_join
	make table_mod_12



misc_select:
	$(ORBITER) -v 3 \
		-define F -finite_field -q 7 -end \
		-with F -do -finite_field_activity -cheat_sheet_GF -end
	$(ORBITER) -v 4 -csv_file_select_rows_and_cols \
		GF_q7_multiplication_table_reordered.csv \
		"0,2,4" "0,2,4" 


misc_join:
	$(ORBITER) -v 4 \
		-csv_file_join poly_orbits_d3_n3_q2_select_F2.csv Orbit_idx \
		-csv_file_join poly_orbits_d3_n3_q2_select_F4.csv Orbit_idx \
		-csv_file_join poly_orbits_d3_n3_q2_select_F8.csv Orbit_idx \
		-csv_file_join poly_orbits_d3_n3_q2_select_F16.csv Orbit_idx \
		-csv_file_join poly_orbits_d3_n3_q2_select_F32.csv Orbit_idx 


table_mod_12:
	$(ORBITER) -v 2 \
		-define M -vector -load_csv_no_border clock_mult_excel.csv -end \
		-define all_one_r -vector -repeat 1 12 -end \
		-define all_one_c -vector -repeat 1 12 -end \
		-draw_matrix \
		-input_object M \
		-box_width 50 -bit_depth 24 \
			-partition 3 \
				all_one_r all_one_c \
		-end


###############################################################################
# Section 18.2: Limitations

SECTION_LIMITATIONS:

test_18_2:
	make F_15bit
	make F_31bit
	#make F_32bit
	#make F_63bit
	#make F_64bit


# 2^15 - 19 is prime
# https://primes.utm.edu/lists/2small/0bit.html

F_15bit:
	$(ORBITER) -v 10 \
		-define F -finite_field -q 32749 -without_tables -end \
		-define v -vector -field F -allow_negatives \
			-dense "-1,-1" -end \
		-with F -do -finite_field_activity -product_of v -end
	

F_31bit:
	$(ORBITER) -v 10 \
		-define F -finite_field -q 2147483647 -without_tables -end \
		-define v -vector -field F -allow_negatives \
			-dense "-1,-1" -end \
		-with F -do -finite_field_activity -product_of v -end


# The next command fail on purpose. The goal is to 
# show the limits of the integer domain.

F_32bit:
	$(ORBITER) -v 10 \
		-define F -finite_field -q 4294967291 -without_tables -end \

# we get an error message. The order of the field is too large for 32 bit int: 
# 2^32 - 5 = 4294967291


F_63bit:
	$(ORBITER) -v 10 \
		-define F -finite_field -q 9223372036854775783 -without_tables -end \
		-define v -vector -field F -allow_negatives \
			-dense "-1,-1" -end \
		-with F -do -finite_field_activity -product_of v -end

#2^63-25 = 9223372036854775783 is prime

F_64bit:
	$(ORBITER) -v 10 \
		-define F -finite_field -q 18446744073709551557 -without_tables -end \
		-define v -vector -field F -allow_negatives \
			-dense "-1,-1" -end \
		-with F -do -finite_field_activity -product_of v -end

#2^64-59 = 18446744073709551557 is prime




####


# unclassified:







extract:
	$(ORBITER) -v 3 \
		-extract_from_file makefile Cremona_map make_Cremona_map.txt
	~/bin/a2tex.out -numbers -text_width 80 <make_Cremona_map.txt >make_Cremona_map.tex

draw_eigenvalue_diag23:
	$(ORBITER) -v 2 \
		-draw_options \
			-radius 10 \
			-line_width 1.5 -embedded \
		-end \
		-draw_mod_n -n 20 \
			-file ev_diag23 \
			-eigenvalues 2 0 0 3 \
		-end
	pdflatex ev_diag23_draw.tex
	open ev_diag23_draw.pdf
