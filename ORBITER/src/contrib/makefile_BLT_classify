MY_PATH=~/DEV.18/GITHUB/orbiter
#MY_PATH=/scratch2/betten/COMPILE/2017_08_04
SRC=$(MY_PATH)/ORBITER/arc
SRC2=$(MY_PATH)/ORBITER2/SRC2


BLT_PATH=$(SRC)/apps/blt
TOOLS_PATH=$(SRC)/apps/tools


Q=13
Q_PLUS_ONE=14
DEPTH=5
DEPTH_MINUS_ONE=4
#NB_CASES=40
#NB_CASES=23312



ARGUMENTS= \
		-BLT \
		-q $(Q) \
		-starter_size $(DEPTH) \
		-input_prefix STARTER_DIR/ \
		-output_prefix SYSTEMS/ \
		-solution_prefix SOLUTIONS/ \
		-base_fname BLT_$(Q) 

all: starter lift_g build_db read_solutions compute_orbits isomorph report


stageone: starter  graphs clique_parallel


stagetwo: build_db read_solutions compute_orbits isomorph report


#lift solve_all 

clean:
	- rm x.log a
	- rm -rf G
	- rm BLT_$(Q)*
	- rm -rf GRAPHS ISO SOLUTIONS 
	- rm -rf SYSTEMS
	- rm report_*
	- rm graph_bit*
	- rm graph_0.magma
	- rm decomp_*
	- rm classification*
	- rm decomposition*
	- rm graph_bitmatrix*
	- rm -rf STARTER_DIR
	- rm -rf G
	- rm Down*
	- rm Nb_*
	- rm log*


deep:
	$(BLT_PATH)/blt_main.out -v 5 $(ARGUMENTS) \
		-starter \
		-starter_size $(Q_PLUS_ONE) 


#		-draw_poset



draw_poset:
	cp STARTER_DIR/BLT_$(Q)_poset_lvl_$(DEPTH).layered_graph .
	$(TOOLS_PATH)/layered_graph_main.out -v 2 \
		-file BLT_$(Q)_tree_lvl_$(DEPTH).layered_graph \
		-xin 1000000 -yin 1000000 \
		-xout 1000000 -yout 1000000 \
		-y_stretch 1.1 \
		-rad 1000 \
		-nodes_empty \
		-embedded \
		-spanning_tree
	pdflatex BLT_$(Q)_poset_lvl_$(DEPTH)_draw.tex
	open BLT_$(Q)_poset_lvl_$(DEPTH)_draw.pdf




starter:
	- mkdir STARTER_DIR
	$(BLT_PATH)/blt_main.out -v 4 \
		$(ARGUMENTS) \
		-schreier $(DEPTH) \
		-starter \
		-W


#		-list \
#		-draw_poset \

target:
	- mkdir STARTER_DIR
	$(BLT_PATH)/blt_main.out -v 4 \
		$(ARGUMENTS) \
		-schreier $(Q_PLUS_ONE) \
		-starter 


graphs:
	- mkdir G
	$(BLT_PATH)/blt_main.out -v 2  \
		$(ARGUMENTS) \
		-schreier $(DEPTH) \
		-output_prefix G/ \
		-create_graphs 0 1 $(DEPTH_MINUS_ONE) \
		-lex 






solve:
		-mkdir SOLUTIONS
		$(TOOLS_PATH)/all_rainbow_cliques.out -v 2 \
			-list_of_cases G/list_of_cases_BLT_$(Q)_$(DEPTH)_0_1.txt \
				G/graph_BLT_$(Q)_$(DEPTH)_%ld.bin \
			-output_file SOLUTIONS/solutions_$(Q)_$(DEPTH)_all.txt 
			

#-draw

lift:
	- mkdir SYSTEMS
	- mkdir SOLUTIONS
	$(BLT_PATH)/blt_main.out -v 4 \
		$(ARGUMENTS) \
		-lift \
		-lex \
		-save



solve_all:
	- mkdir SOLUTIONS
	$(TOOLS_PATH)/scheduler.out \
		-v 2 \
		-input_file_mask SYSTEMS/system_%ld_$(NB_CASES).txt \
		-target_file_mask SOLUTIONS/system_%ld_$(NB_CASES).solutions \
		-N $(NB_CASES) \
		-J 1 \
		-command_mask  "$(TOOLS_PATH)/solve_diophant.out -v 2 -file SYSTEMS/system_%ld_$(NB_CASES).txt -output_file SOLUTIONS/system_%ld_$(NB_CASES).solutions" \
		-reload






lift_g:
	- mkdir G
	$(BLT_PATH)/blt_main.out -v 2 \
		$(ARGUMENTS) \
		-create_graphs 0 1 $(DEPTH_MINUS_ONE) \
		-lex \
		-output_prefix G/
	-mkdir SOLUTIONS
	$(TOOLS_PATH)/all_rainbow_cliques.out -v 2 \
		-list_of_cases G/list_of_cases_BLT_$(Q)_$(DEPTH)_0_1.txt \
		G/graph_BLT_$(Q)_$(DEPTH)_%ld.bin \
		-output_file SOLUTIONS/BLT_$(Q)_solutions_$(DEPTH)_0_1.txt
	#- rm -rf G
	#mv SOLUTIONS/BLT_11_solutions_5_0_1.txt SOLUTIONS/BLT_11_solutions_0.txt


# -create_graphs produces the files
# G/list_of_cases_BLT_11_5_0_1.txt
# and
# G/graph_BLT_11_5_0.bin
# ...
# G/graph_BLT_11_5_15.bin
#
# all_rainbow_cliques produces 
# SOLUTIONS/BLT_11_solutions_5_0_1.txt
# SOLUTIONS/BLT_11_solutions_5_0_1_stats.csv



cliques:
	-mkdir SOLUTIONS
	$(TOOLS_PATH)/all_rainbow_cliques.out -v 2 \
		-list_of_cases G/list_of_cases_BLT_$(Q)_$(DEPTH)_0_1.txt \
		G/graph_BLT_$(Q)_$(DEPTH)_%ld.bin \
		-output_file SOLUTIONS/BLT_$(Q)_solutions_$(DEPTH)_0_1.txt


case0:
	- mkdir G
	$(BLT_PATH)/blt_main.out -v 2 \
		$(ARGUMENTS) \
		-create_graphs_list_of_cases $(DEPTH_MINUS_ONE) "case0" "0,10000,20000,30000,40000,50000,60000,70000,80000,90000," \
		-output_prefix G/


#		-lex \


case0_cliques:
	-mkdir SOLUTIONS
	$(TOOLS_PATH)/all_rainbow_cliques.out -v 2 \
		-list_of_cases G/case0_list_of_cases.txt \
		G/graph_BLT_$(Q)_$(DEPTH)_%ld.bin \
		-output_file SOLUTIONS/BLT_$(Q)_solutions_case0.txt


clique_parallel:
	- mkdir LOG
	- mkdir SOLUTIONS
	$(TOOLS_PATH)/scheduler.out \
		-v 2 \
		-input_file_mask G/graph_BLT_$(Q)_$(DEPTH)_%ld.bin \
		-target_file_mask SOLUTIONS/BLT_$(Q)_solutions_%ld.txt.success \
		-list_of_cases G/list_of_cases_BLT_$(Q)_$(DEPTH)_0_1.txt \
		-log_prefix LOG/ \
		-J 32 \
		-command_mask  "$(TOOLS_PATH)/all_rainbow_cliques.out -v 2 -file G/graph_BLT_$(Q)_$(DEPTH)_%ld.bin -output_file SOLUTIONS/BLT_$(Q)_solutions_%ld.txt" \
		-reload


CASE_NB=0
NB_SPLIT=1024
NB_JOBS=60


p0:
	- mkdir SOLUTIONS
	- mkdir SOLUTIONS_$(CASE_NB)
	$(TOOLS_PATH)/scheduler.out \
		-v 2 \
		-input_file_mask G/graph_BLT_$(Q)_$(DEPTH)_$(CASE_NB).bin \
		-target_file_mask SOLUTIONS_$(CASE_NB)/graph_BLT_$(Q)_$(DEPTH)_$(CASE_NB)_case0_%ld_$(NB_SPLIT).solutions.success \
		-N $(NB_SPLIT) \
		-J $(NB_JOBS) \
		-command_mask  "$(TOOLS_PATH)/all_rainbow_cliques.out -v 2 -file G/graph_BLT_$(Q)_$(DEPTH)_$(CASE_NB).bin \
			-output_file SOLUTIONS_$(CASE_NB)/graph_BLT_$(Q)_$(DEPTH)_$(CASE_NB)_case0_%ld_$(NB_SPLIT).solutions \
			-restrictions 0 %ld $(NB_SPLIT) -1 " \
		-reload \
		-log_prefix SOLUTIONS_$(CASE_NB)/ \
		-collate SOLUTIONS_$(CASE_NB)/graph_BLT_$(Q)_$(DEPTH)_$(CASE_NB)_case0_%ld_$(NB_SPLIT).solutions SOLUTIONS/BLT_$(Q)_$(DEPTH)_$(CASE_NB)_solutions.txt




graph0:
	$(TOOLS_PATH)/all_rainbow_cliques.out -v 2 -file G/graph_BLT_$(Q)_$(DEPTH)_0.bin -output_file SOLUTIONS/BLT_$(Q)_solutions_0.txt




build_db:
	$(BLT_PATH)/blt_main.out -v 1 \
		$(ARGUMENTS) \
		-build_db 




read_solutions:
	$(BLT_PATH)/blt_main.out -v 2 \
		$(ARGUMENTS) \
		-read_solutions_from_clique_finder \
			G/list_of_cases_BLT_$(Q)_$(DEPTH)_0_1.txt 



#		-read_solutions_from_clique_finder_list_of_cases \

#erro: count_number_of_solutions_in_file file SOLUTIONS/BLT_11_solutions_0.txt does not exist


read_solutions_50:
	$(BLT_PATH)/blt_main.out -v 2 \
		$(ARGUMENTS) \
		-read_solutions_after_split 50



compute_orbits:
	$(BLT_PATH)/blt_main.out -v 1 \
		$(ARGUMENTS) \
		-compute_orbits 


isomorph:
	$(BLT_PATH)/blt_main.out -v 2 \
		$(ARGUMENTS) \
		-isomorph_testing  \
		-print_interval 250



report:
	- $(BLT_PATH)/blt_main.out -v 1 \
		$(ARGUMENTS) \
		-report 
	pdflatex report_BLT_$(Q).tex
	pdflatex report_BLT_$(Q).tex
	pdflatex report_BLT_$(Q).tex




# do it three times in order to get table of contents right



down:
	$(BLT_PATH)/blt_main.out -v 2 \
		$(ARGUMENTS) \
		-down_orbits 


sample:
	$(BLT_PATH)/sample.out -v 1 
		-BLT -q $(Q) -depth $(DEPTH) 
		-number_of_trials 10 -lex -seed 1 \
		-out_prefix_graphs ./GRAPHS/ \
		-out_prefix_solutions ./SOLUTIONS/ 


classification_graph:
	$(BLT_PATH)/blt_main.out -v 2 \
		$(ARGUMENTS) \
		-classification_graph $(DEPTH) 

draw_decomp:
	cp ISO/decomposition_matrix.csv .
	$(TOOLS_PATH)/draw_matrix.out -csv decomposition_matrix.csv -fname_out decomp
	pdflatex decomp_bitmatrix.tex
	open decomp_bitmatrix.pdf

draw_classification_graph:
	cp ISO/classification_graph.layered_graph .
	$(TOOLS_PATH)/layered_graph_main.out -v 4 \
		-file classification_graph.layered_graph \
		-draw classification_graph \
		-rad 1000 \
		-xin 1000000 \
		-yin 1000000 \
		-xout 1000000 \
		-yout 1000000 \
		-embedded \
		-nodes_empty
	#mpost classification_graph.mp
	pdflatex classification_graph.tex
	open classification_graph.pdf


draw_graph:
	$(TOOLS_PATH)/draw_colored_graph.out -v 2 \
		-export_magma graph_0.magma \
		-file G/graph_BLT_$(Q)_$(DEPTH)_0.bin \
		-out_file graph \
		-bitmatrix \
		-partitioned \
		-scale .75 \
		-coordinates 1000000 1000000 500000 500000
	pdflatex graph_bitmatrix.tex
	open graph_bitmatrix.pdf





#####

