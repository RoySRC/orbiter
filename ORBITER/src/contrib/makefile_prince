#MY_PATH=~/DEV.18
MY_PATH=~/DEV.18/GITHUB/orbiter/
#MY_PATH=/scratch2/betten/COMPILE/2017_11_29
SRC=$(MY_PATH)/ORBITER/SRC
SRC2=$(MY_PATH)/ORBITER2/SRC2

PACKINGS_PATH=$(SRC2)/PACKINGS
REGULAR_PACKING_PATH=$(SRC2)/REGULAR_PACKING
GRASSMANN_PATH=$(SRC2)/GRASSMANN
TOOLS_PATH=$(SRC)/APPS/TOOLS
COMBINATORICS_PATH=$(SRC)/APPS/COMBINATORICS
PROJECTIVE_SPACE_PATH=$(SRC)/APPS/PROJECTIVE_SPACE


ORDER=25
Q=5
DEPTH=3
POLY=

ARGUMENTS= -order $(ORDER) -dim_over_kernel 2 -recoordinatize \
		-base_fname partial_packings_$(Q)_$(K)_ \
		-input_prefix ./STARTER_SPREADS/ \
		-output_prefix ./SYSTEMS/ \
		-solution_prefix ./SOLUTIONS/ \
		-starter_size $(DEPTH) 




classes:
	$(PACKINGS_PATH)/packing_main.out -v 6 $(ARGUMENTS) \
		-conjugacy_classes

# writes PGGL_4_5conjugacy_classes.magma



group_31_0:
	$(PACKINGS_PATH)/packing_main.out -v 6 $(ARGUMENTS) \
		-prime_at_a_time 31 0  

# creates the group H
# computes its orbits on lines (it acts regularly)
# creates a colored graph: 
# vertices of lines
# color is given by the orbit
# two vertices are adjacent if the lines are disjoint

# If the solution file exists, Norbits_on_spreads is called.
# This function does the following:
# It reads in the spreads as a collection of sets
# it creates the action on the spreads
# it computes the orbit under the group N.
# For each orbit representative, the spread is copied in 
# and a file containing all these spreads is written
# Secondly, the orbit of each representative spread is computed under the group H
# and all those spreads are copied in. This way, the packing is created.
# The spreads are listed one after the other, not separated by anything at all.
# So, each row contains all the lines, just they are listed spread by spread.


cliques:
	$(TOOLS_PATH)/all_rainbow_cliques.out -v 2 -file packing_q5_31_0_graph_on_lines -all_cliques  -solution_file -1 


# finds all rainbow cliques in the graph.



#-restrictions 0 0 512 

export_spreads:
	$(PROJECTIVE_SPACE_PATH)/export_data.out -v 2 -q 5 -TP 2 


# written file Spread_5_2.csv of size 2255


iso_test_spreads:
	$(PROJECTIVE_SPACE_PATH)/projective_space_main.out -v 4 -n 3 -q 5 \
		-file_of_lines Spread_5_2.csv \
		-classify_nauty \
		-prefix PG_3_5_spreads \
		-save PG_3_5_spreads
	pdflatex PG_3_5_spreads_classification.tex
	open PG_3_5_spreads_classification.pdf


iso_test_spreads_in_packings:
	$(PROJECTIVE_SPACE_PATH)/projective_space_main.out -v 2 -n 3 -q 5 \
		-file_of_lines Spread_5_2.csv \
		-file_of_lines packing_q5_31_0_graph_on_lines_spreads_iso.csv \
		-classify_nauty \
		-prefix PG_3_5_spreads_in_cyclic_packings \
		-save PG_3_5_spreads_in_cyclic_packings \
		-fixed_structure_of_element_of_order 3 \
		-fixed_structure_of_element_of_order 31 
	pdflatex PG_3_5_spreads_in_cyclic_packings_classification.tex
	open PG_3_5_spreads_in_cyclic_packings_classification.pdf

# writes PG_3_5_spreads_in_cyclic_packings_iso.txt 
# and PG_3_5_spreads_in_cyclic_packings_iso.csv

# 12 spreads appear


iso_test_packings:
	$(PROJECTIVE_SPACE_PATH)/projective_space_main.out -v 2 -n 3 -q 5 \
		-file_of_packings packing_q5_31_0_packings.csv \
		-classify_nauty \
		-prefix PG_3_5_cyclic_packings \
		-save PG_3_5_cyclic_packings \
		-fixed_structure_of_element_of_order 3 \
		-fixed_structure_of_element_of_order 31 





